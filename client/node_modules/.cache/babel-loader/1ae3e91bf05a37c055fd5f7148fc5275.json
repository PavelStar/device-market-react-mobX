{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Product\\\\ProductSelects\\\\MemorySelect\\\\MemorySelect.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ResponseDataState from \"../../../../store/ResponseDataState\";\nimport ProductSelectsState from \"../../../../store/ProductSelectsState\";\nimport { observer } from \"mobx-react-lite\";\nimport { useNavigate } from \"react-router\";\nimport \"./MemorySelect.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemorySelect = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    product\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    responseData\n  } = ResponseDataState;\n  const {\n    selectedColor,\n    selectedMemory,\n    selectedTitle\n  } = ProductSelectsState;\n  const [memoryList, setMemoryList] = useState([]);\n  useEffect(() => {\n    if (responseData) {\n      let memories = [];\n      responseData.items.forEach(item => {\n        if (product.title === item.title && product.color === item.color) {\n          memories.push(item.features.memory);\n        }\n      });\n      console.log(product.features.memory);\n      setMemoryList(memories);\n\n      if (memoryList.includes(product.features.memory)) {\n        console.log('есть');\n      } else {\n        console.log('нет');\n      }\n\n      showProduct(memories[0]);\n    }\n  }, [selectedColor]);\n\n  const showProduct = memory => {\n    let prevId = product.id;\n    let currentItem;\n\n    if (responseData) {\n      currentItem = responseData.items.find(item => item.title === product.title && item.features.memory === memory && item.color === selectedColor);\n    }\n\n    currentItem && prevId !== currentItem.id && navigate(`/item/${currentItem.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"memory-select__colors-title\",\n      children: \"\\u041E\\u0431\\u044A\\u0435\\u043C \\u043F\\u0430\\u043C\\u044F\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"memory-select__memory-list\",\n      children: memoryList.map(memory => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: product.features.memory === memory ? \"memory-select__memory-wrap memory-select__memory-wrap--active\" : \"memory-select__memory-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: product.features.memory === memory ? \"memory-select__memory-btn memory-select__memory-btn--active\" : \"memory-select__memory-btn\",\n            type: \"button\",\n            onClick: () => showProduct(memory),\n            disabled: memoryList.length <= 1 ? true : false,\n            children: memory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}, \"MrArlFHTjBVO1Okdjzz9HJ500rA=\", false, function () {\n  return [useNavigate];\n}));\n_c2 = MemorySelect;\nexport default MemorySelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MemorySelect$observer\");\n$RefreshReg$(_c2, \"MemorySelect\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Product/ProductSelects/MemorySelect/MemorySelect.tsx"],"names":["React","useEffect","useState","ResponseDataState","ProductSelectsState","observer","useNavigate","MemorySelect","product","navigate","responseData","selectedColor","selectedMemory","selectedTitle","memoryList","setMemoryList","memories","items","forEach","item","title","color","push","features","memory","console","log","includes","showProduct","prevId","id","currentItem","find","map","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { IItemData } from \"../../../../interfaces/IItemData\";\r\nimport ResponseDataState from \"../../../../store/ResponseDataState\";\r\nimport ProductSelectsState from \"../../../../store/ProductSelectsState\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport \"./MemorySelect.scss\";\r\n\r\nconst MemorySelect = observer(({ product }: { product: IItemData }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const { responseData } = ResponseDataState;\r\n    const { selectedColor, selectedMemory, selectedTitle } = ProductSelectsState;\r\n\r\n    const [memoryList, setMemoryList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (responseData) {\r\n\r\n            let memories: string[] = [];\r\n            responseData.items.forEach((item: IItemData) => {\r\n                if (product.title === item.title && product.color === item.color) {\r\n                    memories.push(item.features.memory);\r\n                }\r\n            });\r\n            console.log(product.features.memory)\r\n            setMemoryList(memories);\r\n\r\n            if (memoryList.includes(product.features.memory)) {\r\n                console.log('есть')\r\n            } else {\r\n                console.log('нет')\r\n\r\n            }\r\n\r\n            showProduct(memories[0]);\r\n        }\r\n    }, [selectedColor]);\r\n\r\n    const showProduct = (memory: string) => {\r\n        let prevId = product.id;\r\n        let currentItem;\r\n\r\n        if (responseData) {\r\n            currentItem = responseData.items.find(\r\n                (item) =>\r\n                    item.title === product.title && item.features.memory === memory && item.color === selectedColor\r\n            );\r\n        }\r\n        currentItem && prevId !== currentItem.id && navigate(`/item/${currentItem.id}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"memory-select\">\r\n            <h3 className=\"memory-select__colors-title\">Объем памяти</h3>\r\n            <ul className=\"memory-select__memory-list\">\r\n                {memoryList.map((memory: string) => {\r\n                    return (\r\n                        <li\r\n                            className={\r\n                                product.features.memory === memory\r\n                                    ? \"memory-select__memory-wrap memory-select__memory-wrap--active\"\r\n                                    : \"memory-select__memory-wrap\"\r\n                            }\r\n                        >\r\n                            <button\r\n                                className={\r\n                                    product.features.memory === memory\r\n                                        ? \"memory-select__memory-btn memory-select__memory-btn--active\"\r\n                                        : \"memory-select__memory-btn\"\r\n                                }\r\n                                type=\"button\"\r\n                                onClick={() => showProduct(memory)}\r\n                                disabled={memoryList.length <= 1 ? true : false}\r\n                            >\r\n                                {memory}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MemorySelect;\r\n"]},"metadata":{},"sourceType":"module"}