{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Slider\\\\Slider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport ItemCard from \"../ItemCard/ItemCard\";\nimport \"./Slider.scss\";\nimport SwitchBtn from \"./SliderButtons/SwitchBtn/SwitchBtn\";\nimport { observer } from \"mobx-react-lite\";\nimport DotsBtns from \"./SliderButtons/DotsBtns/DotsBtns\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    sectionName,\n    slideCount\n  } = _ref;\n  // const toItemPage = new ToItemPage();\n  const {\n    responseData\n  } = ResponseDataState;\n  const {\n    itemCardWidth\n  } = PageWidthState;\n  const [sliderItems, setSliderItems] = useState([]);\n  useEffect(() => {\n    if (sectionName === \"popular-items\") {\n      if (responseData) {\n        setSliderItems(responseData === null || responseData === void 0 ? void 0 : responseData.items.filter(item => {\n          return item.rating > 3.5 && item.isAvailable;\n        }));\n      }\n    }\n\n    if (sectionName === \"new-items\") {\n      if (responseData) {\n        setSliderItems(responseData === null || responseData === void 0 ? void 0 : responseData.items.filter(item => {\n          return item.releaseDate > 2017 && item.isAvailable;\n        }));\n      }\n    }\n  }, [responseData === null || responseData === void 0 ? void 0 : responseData.items]);\n  SwiperCore.use([Navigation, Pagination]); // let slidesCount\n  // (sectionName === \"popular-items\") ? slidesCount = 2.4 : slidesCount = 4.5\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Swiper, {\n      loop: true,\n      slidesPerView: 5,\n      children: sliderItems === null || sliderItems === void 0 ? void 0 : sliderItems.map(item => {\n        return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(ItemCard, {\n            inSliderView: \"inSliderView\",\n            item: item,\n            isBtnLite: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DotsBtns, {\n      sectionName: sectionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SwitchBtn, {\n      btnType: \"prev\",\n      sectionName: sectionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SwitchBtn, {\n      btnType: \"next\",\n      sectionName: sectionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this) //         <div className=\"slider-wrapper\">\n  //             <Swiper\n  //                 loop={true}\n  //                 breakpoints={{\n  // \n  //                     0: {\n  //                         slidesPerView: 1.2,\n  //                         centeredSlides: false,\n  //                         pagination: {\n  //                             el: `.${sectionName}__dots-pagination`,\n  //                             type: \"bullets\",\n  //                             clickable: true,\n  //                         },\n  // \n  //                         navigation: {\n  //                             nextEl: `.${sectionName}__switch-btn--next`,\n  //                             prevEl: `.${sectionName}__switch-btn--prev`,\n  //                         },\n  // \n  //                     },\n  //                     768: {\n  //                         slidesPerView: 2.2,\n  //                         spaceBetween: 10,\n  //                         centeredSlides: false,\n  //                         pagination: {\n  //                             el: `.${sectionName}__dots-pagination`,\n  //                             type: \"bullets\",\n  //                             clickable: true,\n  //                         },\n  // \n  //                         navigation: {\n  //                             nextEl: `.${sectionName}__switch-btn--next`,\n  //                             prevEl: `.${sectionName}__switch-btn--prev`,\n  //                         },\n  //                     },\n  //                 }}\n  //             >\n  //                 {sliderItems?.map((item: IItemData) => {\n  //                     return (\n  //                         <SwiperSlide key={item.id}>\n  //                             <ItemCard inSliderView=\"inSliderView\" item={item} isBtnLite={true} />\n  //                         </SwiperSlide>\n  //                     );\n  //                 })}\n  //             </Swiper>\n  //             <DotsBtns sectionName={sectionName} />\n  //             <SwitchBtn btnType=\"prev\" sectionName={sectionName} />\n  //             <SwitchBtn btnType=\"next\" sectionName={sectionName} />\n  //         </div>\n  ;\n}, \"eKQuny2m+B3u5dA1TTYzm3HkZeo=\"));\n_c2 = Slider;\nexport default Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Slider$observer\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Slider/Slider.tsx"],"names":["useEffect","useState","Swiper","SwiperSlide","SwiperCore","Navigation","Pagination","ItemCard","SwitchBtn","observer","DotsBtns","ResponseDataState","PageWidthState","Slider","sectionName","slideCount","responseData","itemCardWidth","sliderItems","setSliderItems","items","filter","item","rating","isAvailable","releaseDate","use","map","id"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { toJS } from \"mobx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport ItemCard from \"../ItemCard/ItemCard\";\r\nimport \"./Slider.scss\";\r\nimport SwitchBtn from \"./SliderButtons/SwitchBtn/SwitchBtn\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport DotsBtns from \"./SliderButtons/DotsBtns/DotsBtns\";\r\nimport ResponseDataState from \"../../store/ResponseDataState\";\r\nimport ItemDataState from \"../../store/ItemDataState\";\r\nimport PageWidthState from \"../../store/PageWidthState\";\r\n\r\ninterface ISliderItems {\r\n    sliderItems?: IItemData[];\r\n    sectionName?: string;\r\n    slideCount?: number;\r\n}\r\n\r\nconst Slider: React.FC<ISliderItems> = observer(({ sectionName, slideCount }) => {\r\n    // const toItemPage = new ToItemPage();\r\n\r\n    const { responseData } = ResponseDataState\r\n    const { itemCardWidth } = PageWidthState\r\n\r\n\r\n\r\n    const [sliderItems, setSliderItems] = useState<IItemData[]>([])\r\n\r\n\r\n    useEffect(() => {\r\n        if (sectionName === \"popular-items\") {\r\n            if (responseData) {\r\n                setSliderItems(responseData?.items.filter((item: IItemData) => {\r\n                    return item.rating > 3.5 && item.isAvailable;\r\n                }))\r\n            }\r\n        }\r\n\r\n        if (sectionName === \"new-items\") {\r\n            if (responseData) {\r\n                setSliderItems(responseData?.items.filter((item: IItemData) => {\r\n                    return item.releaseDate > 2017 && item.isAvailable;\r\n                }))\r\n            }\r\n\r\n\r\n        }\r\n    }, [responseData?.items]);\r\n\r\n\r\n\r\n    SwiperCore.use([Navigation, Pagination]);\r\n\r\n\r\n    // let slidesCount\r\n    // (sectionName === \"popular-items\") ? slidesCount = 2.4 : slidesCount = 4.5\r\n\r\n    return (\r\n        <div className=\"slider-wrapper\">\r\n            <Swiper\r\n                loop={true}\r\n                slidesPerView={5}\r\n            >\r\n                {sliderItems?.map((item: IItemData) => {\r\n                    return (\r\n                        <SwiperSlide key={item.id}>\r\n                            <ItemCard inSliderView=\"inSliderView\" item={item} isBtnLite={true} />\r\n                        </SwiperSlide>\r\n                    );\r\n                })}\r\n            </Swiper>\r\n            <DotsBtns sectionName={sectionName} />\r\n            <SwitchBtn btnType=\"prev\" sectionName={sectionName} />\r\n            <SwitchBtn btnType=\"next\" sectionName={sectionName} />\r\n        </div>\r\n        //         <div className=\"slider-wrapper\">\r\n        //             <Swiper\r\n        //                 loop={true}\r\n        //                 breakpoints={{\r\n        // \r\n        //                     0: {\r\n        //                         slidesPerView: 1.2,\r\n        //                         centeredSlides: false,\r\n        //                         pagination: {\r\n        //                             el: `.${sectionName}__dots-pagination`,\r\n        //                             type: \"bullets\",\r\n        //                             clickable: true,\r\n        //                         },\r\n        // \r\n        //                         navigation: {\r\n        //                             nextEl: `.${sectionName}__switch-btn--next`,\r\n        //                             prevEl: `.${sectionName}__switch-btn--prev`,\r\n        //                         },\r\n        // \r\n        //                     },\r\n        //                     768: {\r\n        //                         slidesPerView: 2.2,\r\n        //                         spaceBetween: 10,\r\n        //                         centeredSlides: false,\r\n        //                         pagination: {\r\n        //                             el: `.${sectionName}__dots-pagination`,\r\n        //                             type: \"bullets\",\r\n        //                             clickable: true,\r\n        //                         },\r\n        // \r\n        //                         navigation: {\r\n        //                             nextEl: `.${sectionName}__switch-btn--next`,\r\n        //                             prevEl: `.${sectionName}__switch-btn--prev`,\r\n        //                         },\r\n        //                     },\r\n        //                 }}\r\n        //             >\r\n        //                 {sliderItems?.map((item: IItemData) => {\r\n        //                     return (\r\n        //                         <SwiperSlide key={item.id}>\r\n        //                             <ItemCard inSliderView=\"inSliderView\" item={item} isBtnLite={true} />\r\n        //                         </SwiperSlide>\r\n        //                     );\r\n        //                 })}\r\n        //             </Swiper>\r\n        //             <DotsBtns sectionName={sectionName} />\r\n        //             <SwitchBtn btnType=\"prev\" sectionName={sectionName} />\r\n        //             <SwitchBtn btnType=\"next\" sectionName={sectionName} />\r\n        //         </div>\r\n    );\r\n});\r\n\r\nexport default Slider;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}