{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\FiltersPanel\\\\CheckboxBrand\\\\CheckboxBrand.tsx\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport FiltersSettingsState from \"../../../store/FiltersSettingsState\";\nimport { SetFilterSettings } from \"../../../Utils/SetFilterSettings\";\nimport MarkerIcon from \"../../svg/MarkerIcon\";\nimport \"./CheckboxBrand.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckboxCategory = observer(_c = _ref => {\n  let {\n    brand\n  } = _ref;\n  const {\n    selectedBrands\n  } = FiltersSettingsState;\n\n  const addBrand = () => {\n    if (!selectedBrands.includes(brand)) {\n      FiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)]);\n      FiltersSettingsState.setItemsToShow(SetFilterSettings());\n    }\n\n    if (selectedBrands.includes(brand)) {\n      FiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)]);\n      FiltersSettingsState.setSelectedBrands(selectedBrands.filter(item => {\n        return item != brand;\n      }));\n      FiltersSettingsState.setItemsToShow(SetFilterSettings());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkbox-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"visually-hidden\",\n      id: brand,\n      type: \"checkbox\",\n      name: \"brand-item\",\n      checked: selectedBrands.includes(brand) ? true : false,\n      onChange: addBrand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-border\",\n      children: /*#__PURE__*/_jsxDEV(MarkerIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: brand,\n      children: brand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n});\n_c2 = CheckboxCategory;\nexport default CheckboxCategory;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckboxCategory$observer\");\n$RefreshReg$(_c2, \"CheckboxCategory\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/FiltersPanel/CheckboxBrand/CheckboxBrand.tsx"],"names":["observer","React","FiltersSettingsState","SetFilterSettings","MarkerIcon","CheckboxCategory","brand","selectedBrands","addBrand","includes","setSelectedBrands","concat","setItemsToShow","filter","item"],"mappings":";AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,sBAAP;;AAOA,MAAMC,gBAAuC,GAAGL,QAAQ,MAAC,QAAe;AAAA,MAAd;AAAEM,IAAAA;AAAF,GAAc;AAEpE,QAAM;AAAEC,IAAAA;AAAF,MAAqBL,oBAA3B;;AAEA,QAAMM,QAAQ,GAAG,MAAM;AACnB,QAAI,CAACD,cAAc,CAACE,QAAf,CAAwBH,KAAxB,CAAL,EAAqC;AACjCJ,MAAAA,oBAAoB,CAACQ,iBAArB,CAAuC,CAAC,GAAGH,cAAc,CAACI,MAAf,CAAsBL,KAAtB,CAAJ,CAAvC;AACAJ,MAAAA,oBAAoB,CAACU,cAArB,CAAoCT,iBAAiB,EAArD;AACH;;AAED,QAAII,cAAc,CAACE,QAAf,CAAwBH,KAAxB,CAAJ,EAAoC;AAChCJ,MAAAA,oBAAoB,CAACQ,iBAArB,CAAuC,CAAC,GAAGH,cAAc,CAACI,MAAf,CAAsBL,KAAtB,CAAJ,CAAvC;AACAJ,MAAAA,oBAAoB,CAACQ,iBAArB,CAAuCH,cAAc,CAACM,MAAf,CAAuBC,IAAD,IAAU;AACnE,eAAOA,IAAI,IAAIR,KAAf;AACH,OAFsC,CAAvC;AAGAJ,MAAAA,oBAAoB,CAACU,cAArB,CAAoCT,iBAAiB,EAArD;AAEH;AACJ,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,EAAE,EAAEG,KAFR;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,IAAI,EAAC,YAJT;AAKI,MAAA,OAAO,EAAEC,cAAc,CAACE,QAAf,CAAwBH,KAAxB,IAAiC,IAAjC,GAAwC,KALrD;AAMI,MAAA,QAAQ,EAAEE;AANd;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI;AAAO,MAAA,OAAO,EAAEF,KAAhB;AAAA,gBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CApCuD,CAAxD;MAAMD,gB;AAsCN,eAAeA,gBAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport FiltersSettingsState from \"../../../store/FiltersSettingsState\";\r\nimport { SetFilterSettings } from \"../../../Utils/SetFilterSettings\";\r\nimport MarkerIcon from \"../../svg/MarkerIcon\";\r\nimport \"./CheckboxBrand.scss\";\r\n\r\ninterface IInputBrand {\r\n    brand: string\r\n}\r\n\r\n\r\nconst CheckboxCategory: React.FC<IInputBrand> = observer(({ brand }) => {\r\n\r\n    const { selectedBrands } = FiltersSettingsState\r\n\r\n    const addBrand = () => {\r\n        if (!selectedBrands.includes(brand)) {\r\n            FiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)])\r\n            FiltersSettingsState.setItemsToShow(SetFilterSettings());\r\n        }\r\n\r\n        if (selectedBrands.includes(brand)) {\r\n            FiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)])\r\n            FiltersSettingsState.setSelectedBrands(selectedBrands.filter((item) => {\r\n                return item != brand\r\n            }))\r\n            FiltersSettingsState.setItemsToShow(SetFilterSettings());\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkbox-wrapper\">\r\n            <input\r\n                className=\"visually-hidden\"\r\n                id={brand}\r\n                type=\"checkbox\"\r\n                name=\"brand-item\"\r\n                checked={selectedBrands.includes(brand) ? true : false}\r\n                onChange={addBrand}\r\n            />\r\n            <div className=\"checkbox-border\">\r\n                <MarkerIcon />\r\n            </div>\r\n            <label htmlFor={brand}>{brand}</label>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CheckboxCategory;\r\n"]},"metadata":{},"sourceType":"module"}