{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\ColorSelect\\\\ColorSelect.tsx\",\n    _s = $RefreshSig$();\n\nimport { toJS } from 'mobx';\nimport React, { useEffect, useState } from 'react';\nimport ItemDataState from '../../store/ItemDataState';\nimport ResponseDataState from '../../store/ResponseDataState';\nimport './ColorSelect.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ColorSelect = _ref => {\n  _s();\n\n  let {\n    product\n  } = _ref;\n  const {\n    responseData\n  } = ResponseDataState;\n  const {} = ItemDataState;\n  const [productWithSameTitle, setProductWithSameTitle] = useState([]);\n  const [colorsList, setColorsList] = useState([]);\n  useEffect(() => {\n    if (responseData) {\n      let colors = [];\n      responseData.items.forEach(item => {\n        if (product.title === item.title && !colors.includes(item.color)) {\n          colors.push(item.color);\n        }\n      });\n      setColorsList(colors); // setProductWithSameTitle(responseData.items.filter((item) => {\n      //     return item.title === product.title\n      // }))\n\n      console.log(colors);\n    }\n  }, []);\n\n  const changeColor = item => {\n    ItemDataState.setItemData(item); // ItemDataState.setItemData(product)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"color-select__colors-title\",\n      children: \"\\u0426\\u0432\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"color-select__colors-list\",\n      children: colorsList.map(color => {\n        console.log(toJS(productWithSameTitle));\n        const btnColor = {\n          backgroundColor: `${color}`\n        };\n        const borderColor = {\n          border: \"1px solid transparent\",\n          borderColor: `${color}`\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"color-select__memory-wrap\",\n          style: product.color === color ? borderColor : undefined,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: product.color === color ? \"color-select__color-btn color-select__color-btn--active\" : \"color-select__color-btn\",\n            style: btnColor,\n            type: \"button\",\n            onClick: () => changeColor(product)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ColorSelect, \"5c0W8YomjmJM4isPOmgn2j+FsHU=\");\n\n_c = ColorSelect;\nexport default ColorSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorSelect\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/ColorSelect/ColorSelect.tsx"],"names":["toJS","React","useEffect","useState","ItemDataState","ResponseDataState","ColorSelect","product","responseData","productWithSameTitle","setProductWithSameTitle","colorsList","setColorsList","colors","items","forEach","item","title","includes","color","push","console","log","changeColor","setItemData","map","btnColor","backgroundColor","borderColor","border","undefined"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAO,oBAAP;;;AAEA,MAAMC,WAAW,GAAG,QAAyC;AAAA;;AAAA,MAAxC;AAAEC,IAAAA;AAAF,GAAwC;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAmBH,iBAAzB;AACA,QAAM,KAAMD,aAAZ;AAEA,QAAM,CAACK,oBAAD,EAAuBC,uBAAvB,IAAkDP,QAAQ,CAAc,EAAd,CAAhE;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAW,EAAX,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,YAAJ,EAAkB;AACd,UAAIK,MAAgB,GAAG,EAAvB;AAEAL,MAAAA,YAAY,CAACM,KAAb,CAAmBC,OAAnB,CAA4BC,IAAD,IAAqB;AAC5C,YAAIT,OAAO,CAACU,KAAR,KAAkBD,IAAI,CAACC,KAAvB,IAAgC,CAACJ,MAAM,CAACK,QAAP,CAAgBF,IAAI,CAACG,KAArB,CAArC,EAAkE;AAC9DN,UAAAA,MAAM,CAACO,IAAP,CAAYJ,IAAI,CAACG,KAAjB;AACH;AAEJ,OALD;AAMAP,MAAAA,aAAa,CAACC,MAAD,CAAb,CATc,CAUd;AACA;AACA;;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACH;AACJ,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,QAAMU,WAAW,GAAIP,IAAD,IAAqB;AACrCZ,IAAAA,aAAa,CAACoB,WAAd,CAA0BR,IAA1B,EADqC,CAErC;AACH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,2BAAd;AAAA,gBACKL,UAAU,CAACc,GAAX,CAAgBN,KAAD,IAAmB;AAC/BE,QAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAI,CAACS,oBAAD,CAAhB;AAEA,cAAMiB,QAAQ,GAAG;AACbC,UAAAA,eAAe,EAAG,GAAER,KAAM;AADb,SAAjB;AAIA,cAAMS,WAAW,GAAG;AAChBC,UAAAA,MAAM,EAAE,uBADQ;AAEhBD,UAAAA,WAAW,EAAG,GAAET,KAAM;AAFN,SAApB;AAMA,4BACI;AAAI,UAAA,SAAS,EAAC,2BAAd;AAA0C,UAAA,KAAK,EAAEZ,OAAO,CAACY,KAAR,KAAkBA,KAAlB,GAA0BS,WAA1B,GAAwCE,SAAzF;AAAA,iCAEI;AACI,YAAA,SAAS,EACLvB,OAAO,CAACY,KAAR,KAAkBA,KAAlB,GACM,yDADN,GAEM,yBAJd;AAMI,YAAA,KAAK,EAAEO,QANX;AAOI,YAAA,IAAI,EAAC,QAPT;AAQI,YAAA,OAAO,EAAE,MAAMH,WAAW,CAAChB,OAAD;AAR9B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAgBH,OA7BA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmEH,CAlGD;;GAAMD,W;;KAAAA,W;AAoGN,eAAeA,WAAf","sourcesContent":["import { toJS } from 'mobx'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { IItemData } from '../../interfaces/IItemData'\r\nimport ItemDataState from '../../store/ItemDataState'\r\nimport ResponseDataState from '../../store/ResponseDataState'\r\nimport './ColorSelect.scss'\r\n\r\nconst ColorSelect = ({ product }: { product: IItemData }) => {\r\n    const { responseData } = ResponseDataState\r\n    const { } = ItemDataState\r\n\r\n    const [productWithSameTitle, setProductWithSameTitle] = useState<IItemData[]>([])\r\n    const [colorsList, setColorsList] = useState<string[]>([])\r\n\r\n    useEffect(() => {\r\n        if (responseData) {\r\n            let colors: string[] = []\r\n\r\n            responseData.items.forEach((item: IItemData) => {\r\n                if (product.title === item.title && !colors.includes(item.color)) {\r\n                    colors.push(item.color)\r\n                }\r\n\r\n            })\r\n            setColorsList(colors)\r\n            // setProductWithSameTitle(responseData.items.filter((item) => {\r\n            //     return item.title === product.title\r\n            // }))\r\n            console.log(colors)\r\n        }\r\n    }, [])\r\n\r\n    const changeColor = (item: IItemData) => {\r\n        ItemDataState.setItemData(item)\r\n        // ItemDataState.setItemData(product)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"color-select\">\r\n            <h3 className=\"color-select__colors-title\">Цвет</h3>\r\n            <ul className=\"color-select__colors-list\">\r\n                {colorsList.map((color: string) => {\r\n                    console.log(toJS(productWithSameTitle))\r\n\r\n                    const btnColor = {\r\n                        backgroundColor: `${color}`,\r\n                    }\r\n\r\n                    const borderColor = {\r\n                        border: \"1px solid transparent\",\r\n                        borderColor: `${color}`,\r\n\r\n                    }\r\n\r\n                    return (\r\n                        <li className=\"color-select__memory-wrap\" style={product.color === color ? borderColor : undefined}>\r\n\r\n                            <button\r\n                                className={\r\n                                    product.color === color\r\n                                        ? \"color-select__color-btn color-select__color-btn--active\"\r\n                                        : \"color-select__color-btn\"\r\n                                }\r\n                                style={btnColor}\r\n                                type=\"button\"\r\n                                onClick={() => changeColor(product)}\r\n                            >\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n                {/* {productWithSameTitle.map((item: IItemData) => {\r\n                    console.log(toJS(productWithSameTitle))\r\n\r\n                    const btnColor = {\r\n                        backgroundColor: `${item.color}`,\r\n                    }\r\n\r\n                    const borderColor = {\r\n                        border: \"1px solid transparent\",\r\n                        borderColor: `${item.color}`,\r\n\r\n                    }\r\n\r\n                    return (\r\n                        <li className=\"color-select__color-wrap\" style={product.color === item.color ? borderColor : undefined}>\r\n\r\n                            <button\r\n                                className={\r\n                                    product.color === item.color\r\n                                        ? \"color-select__color-btn color-select__color-btn--active\"\r\n                                        : \"color-select__color-btn\"\r\n                                }\r\n                                style={btnColor}\r\n                                type=\"button\"\r\n                                onClick={() => changeColor(item)}\r\n                            >\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })} */}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorSelect"]},"metadata":{},"sourceType":"module"}