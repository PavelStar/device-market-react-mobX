{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Header\\\\User\\\\UserNav\\\\UserNav.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginState from '../../../../store/LoginState';\nimport UserIcon from '../../../svg/UserIcon'; // import LoginPopupState from '../../../../store/LoginPopupState';\n\nimport \"./UserNav.scss\";\nimport NavBarItem from '../../NavBarItem/NavBarItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserNav = observer(_c = _s(() => {\n  _s();\n\n  const {\n    userName,\n    userPassword,\n    isPopupShown\n  } = LoginState;\n  let settingsListRef = useRef(null);\n  const [isSettingsShown, setIsSettingsShown] = useState(false);\n  useEffect(() => {\n    if (settingsListRef.current) {\n      document.addEventListener('click', outsideClick);\n      console.log('');\n    }\n\n    return () => {\n      document.removeEventListener('click', outsideClick);\n    };\n  }, [isSettingsShown]);\n\n  const outsideClick = e => {\n    if (e.currentTarget !== settingsListRef.current) {\n      setIsSettingsShown(false);\n    }\n  };\n\n  const openSettings = e => {\n    setIsSettingsShown(!isSettingsShown);\n  };\n\n  const logOut = () => {\n    LoginState.setUserName('');\n    LoginState.setUserPassword('');\n    LoginState.setIsPopupShown(!isPopupShown);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-nav__user-wrapper\",\n      onClick: openSettings,\n      children: /*#__PURE__*/_jsxDEV(NavBarItem, {\n        itemIcon: /*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 39\n        }, this),\n        itemName: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), isSettingsShown && /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: settingsListRef,\n      className: \"user-nav__settings-list settings-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"settings-list__item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"settings-list__link\",\n          to: \"/orders-page\",\n          children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"settings-list__item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"settings-list__link\",\n          href: \"\",\n          children: \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"settings-list__item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"settings-list__link\",\n          onClick: logOut,\n          children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}, \"p4fAbD5U5hApIG+YDGY2O2f8dvU=\"));\n_c2 = UserNav;\nexport default UserNav;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserNav$observer\");\n$RefreshReg$(_c2, \"UserNav\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Header/User/UserNav/UserNav.tsx"],"names":["observer","useEffect","useRef","useState","Link","LoginState","UserIcon","NavBarItem","UserNav","userName","userPassword","isPopupShown","settingsListRef","isSettingsShown","setIsSettingsShown","current","document","addEventListener","outsideClick","console","log","removeEventListener","e","currentTarget","openSettings","logOut","setUserName","setUserPassword","setIsPopupShown"],"mappings":"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","sourcesContent":["import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoginState from '../../../../store/LoginState';\r\nimport UserIcon from '../../../svg/UserIcon';\r\n// import LoginPopupState from '../../../../store/LoginPopupState';\r\nimport \"./UserNav.scss\";\r\nimport NavBarItem from '../../NavBarItem/NavBarItem';\r\n\r\nconst UserNav = observer(() => {\r\n\r\n    const { userName, userPassword, isPopupShown } = LoginState;\r\n\r\n    let settingsListRef = useRef(null)\r\n\r\n    const [isSettingsShown, setIsSettingsShown] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        if (settingsListRef.current) {\r\n            document.addEventListener('click', outsideClick)\r\n            console.log('')\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('click', outsideClick)\r\n        }\r\n    }, [isSettingsShown])\r\n\r\n    const outsideClick = (e: any) => {\r\n        if (e.currentTarget !== settingsListRef.current) {\r\n            setIsSettingsShown(false)\r\n        }\r\n    }\r\n\r\n    const openSettings = (e: any) => {\r\n        setIsSettingsShown(!isSettingsShown)\r\n    }\r\n\r\n    const logOut = () => {\r\n        LoginState.setUserName('')\r\n        LoginState.setUserPassword('')\r\n        LoginState.setIsPopupShown(!isPopupShown)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='user-nav'>\r\n            <div className='user-nav__user-wrapper'\r\n                onClick={openSettings}\r\n            >\r\n                <NavBarItem itemIcon={<UserIcon />} itemName={userName} />\r\n            </div>\r\n            {isSettingsShown &&\r\n                <ul ref={settingsListRef} className='user-nav__settings-list settings-list'>\r\n                    <li className='settings-list__item'>\r\n                        <Link className='settings-list__link' to=\"/orders-page\">\r\n                            История заказов\r\n                        </Link>\r\n                    </li>\r\n                    <li className='settings-list__item'>\r\n                        <a className='settings-list__link' href=\"\">\r\n                            Настройки профиля\r\n                        </a>\r\n                    </li>\r\n                    <li className='settings-list__item'>\r\n                        <a className='settings-list__link' onClick={logOut}>\r\n                            Выйти\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default UserNav;\r\n"]},"metadata":{},"sourceType":"module"}