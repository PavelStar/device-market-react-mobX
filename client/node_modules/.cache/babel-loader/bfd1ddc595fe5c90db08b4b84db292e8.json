{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Product\\\\ProductSelects\\\\ColorSelect\\\\ColorSelect.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport ItemDataState from '../../../../store/ItemDataState';\nimport ResponseDataState from '../../../../store/ResponseDataState';\nimport { setColorName } from '../../../../Utils/setColorName';\nimport './ColorSelect.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorSelect = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    product\n  } = _ref;\n  const {\n    responseData\n  } = ResponseDataState;\n  const {\n    itemData\n  } = ItemDataState;\n  const [colorsList, setColorsList] = useState([]);\n  const params = useParams();\n  useEffect(() => {\n    if (responseData) {\n      let colors = [];\n      responseData.items.forEach(item => {\n        if (product.title === item.title && !colors.includes(item.color)) {\n          colors.push(item.color);\n        }\n      });\n      setColorsList(colors);\n    }\n  }, []);\n\n  const changeUrlId = color => {\n    console.log(color);\n    console.log(params.id); // params && params.id = '11';\n\n    responseData && itemData && console.log(responseData.items.filter(item => item.title === itemData.title));\n  };\n\n  let id = '11';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"color-select__colors-title\",\n      children: \"\\u0426\\u0432\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"color-select__colors-list\",\n      children: colorsList.map(color => {\n        const colorName = setColorName(color);\n        const btnColor = {\n          backgroundColor: `${colorName}`\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: product.color === color ? \"color-select__color-wrap color-select__color-wrap--active\" : \"color-select__color-wrap\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/item/${id}`,\n            onClick: () => changeUrlId(color),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: product.color === color ? \"color-select__color-btn color-select__color-btn--active\" : \"color-select__color-btn\",\n              style: btnColor,\n              type: \"button\" // onClick={() => colorsList.length > 1 && ProductSelectsState.setSelectedColor(color)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}, \"UdyjdUNIK/G+r8dHy+hY83KB21M=\", false, function () {\n  return [useParams];\n}));\n_c2 = ColorSelect;\nexport default ColorSelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColorSelect$observer\");\n$RefreshReg$(_c2, \"ColorSelect\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Product/ProductSelects/ColorSelect/ColorSelect.tsx"],"names":["observer","React","useEffect","useState","Link","useParams","ItemDataState","ResponseDataState","setColorName","ColorSelect","product","responseData","itemData","colorsList","setColorsList","params","colors","items","forEach","item","title","includes","color","push","changeUrlId","console","log","id","filter","map","colorName","btnColor","backgroundColor"],"mappings":"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","sourcesContent":["import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { IItemData } from '../../../../interfaces/IItemData'\r\nimport ItemDataState from '../../../../store/ItemDataState'\r\nimport ProductSelectsState from '../../../../store/ProductSelectsState'\r\nimport ResponseDataState from '../../../../store/ResponseDataState'\r\nimport { setColorName } from '../../../../Utils/setColorName'\r\nimport './ColorSelect.scss'\r\n\r\nconst ColorSelect = observer(({ product }: { product: IItemData }) => {\r\n    const { responseData } = ResponseDataState\r\n    const { itemData } = ItemDataState\r\n\r\n    const [colorsList, setColorsList] = useState<string[]>([])\r\n\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n\r\n        if (responseData) {\r\n            let colors: string[] = []\r\n\r\n            responseData.items.forEach((item: IItemData) => {\r\n                if (product.title === item.title && !colors.includes(item.color)) {\r\n                    colors.push(item.color)\r\n                }\r\n\r\n            })\r\n            setColorsList(colors)\r\n        }\r\n    }, [])\r\n\r\n    const changeUrlId = (color: string) => {\r\n        console.log(color)\r\n        console.log(params.id)\r\n        // params && params.id = '11';\r\n        responseData && itemData && console.log(responseData.items.filter(item => item.title === itemData.title))\r\n    }\r\n\r\n    let id = '11'\r\n\r\n    return (\r\n        <div className=\"color-select\">\r\n            <h3 className=\"color-select__colors-title\">Цвет</h3>\r\n            <ul className=\"color-select__colors-list\">\r\n                {colorsList.map((color: string) => {\r\n\r\n                    const colorName = setColorName(color)\r\n\r\n                    const btnColor = {\r\n                        backgroundColor: `${colorName}`,\r\n                    }\r\n\r\n                    return (\r\n                        <li className={product.color === color ? \"color-select__color-wrap color-select__color-wrap--active\" : \"color-select__color-wrap\"} >\r\n\r\n\r\n\r\n                            <Link to={`/item/${id}`}\r\n                                onClick={() => changeUrlId(color)}\r\n                            >\r\n                                <button\r\n                                    className={\r\n                                        product.color === color\r\n                                            ? \"color-select__color-btn color-select__color-btn--active\"\r\n                                            : \"color-select__color-btn\"\r\n                                    }\r\n                                    style={btnColor}\r\n                                    type=\"button\"\r\n                                // onClick={() => colorsList.length > 1 && ProductSelectsState.setSelectedColor(color)}\r\n\r\n                                >\r\n                                </button>\r\n                            </Link>\r\n\r\n\r\n                        </li>\r\n                    );\r\n                })}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ColorSelect"]},"metadata":{},"sourceType":"module"}