{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Pagination\\\\Pagination.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\nimport \"./Pagination.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    itemsCount\n  } = _ref;\n  console.log('pagination');\n  const {\n    allFilteredItems,\n    resultsPerPage\n  } = FiltersSettingsState;\n  const [itemsPerPage, setItemsPerPage] = useState(6);\n  const [startIndex, setStartIndex] = useState(0);\n  const [numbersButtons, setNumbersButtons] = useState();\n  const [selectedBtn, setSelectedBtn] = useState(1);\n  useEffect(() => {\n    FiltersSettingsState.setResultsPerPage(allFilteredItems.slice(startIndex, startIndex + itemsPerPage));\n  }, []);\n  useEffect(() => {\n    let arrOfNumbers = [];\n\n    if (itemsCount && itemsPerPage) {\n      for (let i = 1; i <= Math.ceil(itemsCount / itemsPerPage); i++) {\n        arrOfNumbers.push(i);\n      }\n    }\n\n    setNumbersButtons(arrOfNumbers);\n    setStartIndex(0);\n    setSelectedBtn(1);\n  }, [itemsCount]);\n\n  const switchPage = number => {\n    itemsPerPage && setStartIndex((number - 1) * itemsPerPage);\n    FiltersSettingsState.setResultsPerPage(allFilteredItems.slice(startIndex, startIndex + itemsPerPage));\n    setSelectedBtn(number);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination__list\",\n      children: numbersButtons === null || numbersButtons === void 0 ? void 0 : numbersButtons.map(number => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"pagination__item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedBtn === number ? \"pagination__btn-number active\" : \"pagination__btn-number\",\n            onClick: () => switchPage(number),\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}, \"uRjdn6YiRLmkmy20i5kPCiSoW/o=\"));\n_c2 = Pagination;\nexport default Pagination;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pagination$observer\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Pagination/Pagination.tsx"],"names":["observer","React","useEffect","useState","FiltersSettingsState","Pagination","itemsCount","console","log","allFilteredItems","resultsPerPage","itemsPerPage","setItemsPerPage","startIndex","setStartIndex","numbersButtons","setNumbersButtons","selectedBtn","setSelectedBtn","setResultsPerPage","slice","arrOfNumbers","i","Math","ceil","push","switchPage","number","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;AACA,OAAO,mBAAP;;AASA,MAAMC,UAAiC,GAAGL,QAAQ,SAAC,QAAoB;AAAA;;AAAA,MAAnB;AAAEM,IAAAA;AAAF,GAAmB;AAEnEC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAuCN,oBAA7C;AAEA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAS,CAAT,CAAhD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAS,CAAT,CAA5C;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,EAApD;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAS,CAAT,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,oBAAoB,CAACe,iBAArB,CAAuCV,gBAAgB,CAACW,KAAjB,CAAuBP,UAAvB,EAAmCA,UAAU,GAAGF,YAAhD,CAAvC;AACH,GAFQ,EAEN,EAFM,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAImB,YAAsB,GAAG,EAA7B;;AAEA,QAAIf,UAAU,IAAIK,YAAlB,EAAgC;AAC5B,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUlB,UAAU,GAAGK,YAAvB,CAArB,EAA2DW,CAAC,EAA5D,EAAgE;AAC5DD,QAAAA,YAAY,CAACI,IAAb,CAAkBH,CAAlB;AACH;AACJ;;AAEDN,IAAAA,iBAAiB,CAACK,YAAD,CAAjB;AACAP,IAAAA,aAAa,CAAC,CAAD,CAAb;AACAI,IAAAA,cAAc,CAAC,CAAD,CAAd;AAEH,GAbQ,EAaN,CAACZ,UAAD,CAbM,CAAT;;AAeA,QAAMoB,UAAU,GAAIC,MAAD,IAAoB;AACnChB,IAAAA,YAAY,IAAIG,aAAa,CAAC,CAACa,MAAM,GAAG,CAAV,IAAehB,YAAhB,CAA7B;AACAP,IAAAA,oBAAoB,CAACe,iBAArB,CAAuCV,gBAAgB,CAACW,KAAjB,CAAuBP,UAAvB,EAAmCA,UAAU,GAAGF,YAAhD,CAAvC;AAEAO,IAAAA,cAAc,CAACS,MAAD,CAAd;AACH,GALD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,gBACKZ,cADL,aACKA,cADL,uBACKA,cAAc,CAAEa,GAAhB,CAAqBD,MAAD,IAAY;AAC7B,4BACI;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,iCACI;AACI,YAAA,SAAS,EACLV,WAAW,KAAKU,MAAhB,GACM,+BADN,GAEM,wBAJd;AAMI,YAAA,OAAO,EAAE,MAAMD,UAAU,CAACC,MAAD,CAN7B;AAAA,sBAQKA;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcH,OAfA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA9DiD,kCAAlD;MAAMtB,U;AAgEN,eAAeA,UAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\r\nimport \"./Pagination.scss\";\r\n\r\ninterface IPagination {\r\n    itemsCount: number | undefined;\r\n    itemsPerPage?: number | undefined;\r\n    startIndex?: number | undefined;\r\n    setStartIndex?: any;\r\n}\r\n\r\nconst Pagination: React.FC<IPagination> = observer(({ itemsCount }) => {\r\n\r\n    console.log('pagination')\r\n\r\n    const { allFilteredItems, resultsPerPage } = FiltersSettingsState;\r\n\r\n    const [itemsPerPage, setItemsPerPage] = useState<number>(6);\r\n    const [startIndex, setStartIndex] = useState<number>(0);\r\n    const [numbersButtons, setNumbersButtons] = useState<number[] | undefined>();\r\n    const [selectedBtn, setSelectedBtn] = useState<number>(1);\r\n\r\n    useEffect(() => {\r\n        FiltersSettingsState.setResultsPerPage(allFilteredItems.slice(startIndex, startIndex + itemsPerPage))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        let arrOfNumbers: number[] = [];\r\n\r\n        if (itemsCount && itemsPerPage) {\r\n            for (let i = 1; i <= Math.ceil(itemsCount / itemsPerPage); i++) {\r\n                arrOfNumbers.push(i);\r\n            }\r\n        }\r\n\r\n        setNumbersButtons(arrOfNumbers);\r\n        setStartIndex(0)\r\n        setSelectedBtn(1)\r\n\r\n    }, [itemsCount]);\r\n\r\n    const switchPage = (number: number) => {\r\n        itemsPerPage && setStartIndex((number - 1) * itemsPerPage);\r\n        FiltersSettingsState.setResultsPerPage(allFilteredItems.slice(startIndex, startIndex + itemsPerPage))\r\n\r\n        setSelectedBtn(number)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <ul className=\"pagination__list\">\r\n                {numbersButtons?.map((number) => {\r\n                    return (\r\n                        <li className=\"pagination__item\">\r\n                            <button\r\n                                className={\r\n                                    selectedBtn === number\r\n                                        ? \"pagination__btn-number active\"\r\n                                        : \"pagination__btn-number\"\r\n                                }\r\n                                onClick={() => switchPage(number)}\r\n                            >\r\n                                {number}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}