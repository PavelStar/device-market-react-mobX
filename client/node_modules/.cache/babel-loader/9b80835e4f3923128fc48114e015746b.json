{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Cart\\\\CartItem\\\\CartItem.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport CartState from '../../../store/CartState';\nimport CloseBtn from '../../svg/CloseBtn';\nimport Counter from '../Counter/Counter';\nimport './CartItem.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartItem = _ref => {\n  _s();\n\n  let {\n    item\n  } = _ref;\n  const {\n    cartItems,\n    priceSum\n  } = CartState;\n  const {\n    title,\n    categoryType,\n    features: {\n      memory\n    },\n    images,\n    priceInfo: {\n      fullPrice,\n      discountAmount\n    },\n    amount\n  } = item;\n  const [countToOrder, setCountToOrder] = useState(1);\n  const [itemTotalPrice, setItemTotalPrice] = useState(fullPrice - discountAmount);\n  useEffect(() => {\n    // console.log('cart changed')\n    cartItems.forEach(i => {\n      if (i.id === item.id) {\n        console.log('yes');\n      }\n    });\n  }, [cartItems]);\n\n  const removeFromCart = item => {\n    CartState.setCartItems([...cartItems.filter(i => {\n      return i.id !== item.id;\n    })]);\n\n    if (countToOrder > 1) {\n      CartState.setPriceSum(priceSum - countToOrder * (fullPrice - discountAmount));\n    } // if (countToOrder > 1) {\n    //     \n    //     CartState.setPriceSum(priceSum - countToOrder * (fullPrice - discountAmount))\n    // }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"cart-item__img\",\n      src: images.snippetImage,\n      alt: \"img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-item__text-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"cart-item__title\",\n        children: `${categoryType} ${title}, ${memory}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), countToOrder > 1 ? /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"cart-item__price\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cart-item__price-count\",\n          children: [fullPrice - discountAmount, \" x \", countToOrder, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cart-item__total\",\n          children: [(fullPrice - discountAmount) * countToOrder, \" \\u0440\\u0443\\u0431.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"cart-item__price\",\n        children: [fullPrice - discountAmount, \" \\u0440\\u0443\\u0431.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cart-item__delete-btn\",\n      onClick: () => removeFromCart(item),\n      children: /*#__PURE__*/_jsxDEV(CloseBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-item__counter\",\n      children: /*#__PURE__*/_jsxDEV(Counter, {\n        countToOrder: countToOrder,\n        setCountToOrder: setCountToOrder,\n        maxCount: item.amount,\n        itemPrice: fullPrice - discountAmount,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartItem, \"WNjJglckJpn+171rW7XC3kMNVIQ=\");\n\n_c = CartItem;\nexport default CartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Cart/CartItem/CartItem.tsx"],"names":["useEffect","useState","CartState","CloseBtn","Counter","CartItem","item","cartItems","priceSum","title","categoryType","features","memory","images","priceInfo","fullPrice","discountAmount","amount","countToOrder","setCountToOrder","itemTotalPrice","setItemTotalPrice","forEach","i","id","console","log","removeFromCart","setCartItems","filter","setPriceSum","snippetImage"],"mappings":"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","sourcesContent":["import { toJS } from 'mobx';\r\nimport { useEffect, useState } from 'react';\r\nimport { IItemData } from '../../../interfaces/IItemData'\r\nimport CartState from '../../../store/CartState';\r\nimport CloseBtn from '../../svg/CloseBtn';\r\nimport Counter from '../Counter/Counter';\r\nimport './CartItem.scss'\r\n\r\nconst CartItem = ({ item }: { item: IItemData }) => {\r\n\r\n    const { cartItems, priceSum } = CartState;\r\n    const { title, categoryType, features: { memory }, images, priceInfo: { fullPrice, discountAmount }, amount } = item;\r\n\r\n    const [countToOrder, setCountToOrder] = useState(1)\r\n    const [itemTotalPrice, setItemTotalPrice] = useState(fullPrice - discountAmount)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // console.log('cart changed')\r\n        cartItems.forEach((i) => {\r\n            if (i.id === item.id) {\r\n                console.log('yes')\r\n            }\r\n        })\r\n\r\n    }, [cartItems])\r\n\r\n\r\n\r\n\r\n\r\n    const removeFromCart = (item: IItemData) => {\r\n\r\n        CartState.setCartItems([\r\n            ...cartItems.filter((i) => {\r\n                return i.id !== item.id;\r\n            }),\r\n        ]);\r\n\r\n        if (countToOrder > 1) {\r\n\r\n            CartState.setPriceSum(priceSum - countToOrder * (fullPrice - discountAmount))\r\n        }\r\n\r\n        // if (countToOrder > 1) {\r\n        //     \r\n        //     CartState.setPriceSum(priceSum - countToOrder * (fullPrice - discountAmount))\r\n        // }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-item\">\r\n\r\n\r\n\r\n            <img className=\"cart-item__img\" src={images.snippetImage} alt=\"img\" />\r\n\r\n            <div className=\"cart-item__text-wrap\">\r\n                <h3 className=\"cart-item__title\">\r\n                    {`${categoryType} ${title}, ${memory}`}\r\n                </h3>\r\n                {countToOrder > 1 ? (\r\n                    <b className=\"cart-item__price\">\r\n                        <span className=\"cart-item__price-count\">{(fullPrice - discountAmount)} x {countToOrder} </span>\r\n                        <span className=\"cart-item__total\">{(fullPrice - discountAmount) * countToOrder} руб.</span>\r\n\r\n                    </b>\r\n                ) :\r\n                    <b className=\"cart-item__price\">\r\n                        {(fullPrice - discountAmount)} руб.\r\n                    </b>\r\n                }\r\n            </div>\r\n\r\n\r\n            <button className=\"cart-item__delete-btn\"\r\n                onClick={() => removeFromCart(item)}\r\n            >\r\n                <CloseBtn />\r\n            </button>\r\n            <div className=\"cart-item__counter\">\r\n                <Counter countToOrder={countToOrder} setCountToOrder={setCountToOrder} maxCount={item.amount} itemPrice={fullPrice - discountAmount} item={item} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem"]},"metadata":{},"sourceType":"module"}