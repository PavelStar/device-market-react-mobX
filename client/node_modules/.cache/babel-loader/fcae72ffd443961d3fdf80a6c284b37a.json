{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Pagination\\\\Pagination.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\nimport \"./Pagination.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = observer(_c = _s(() => {\n  _s();\n\n  // console.log('pagination')\n  const {\n    allFilteredItems,\n    resultsByPagination\n  } = FiltersSettingsState;\n  const [itemsPerPage, setItemsPerPage] = useState(6);\n  const [startIndex, setStartIndex] = useState(0);\n  const [buttonsList, setButtonsList] = useState();\n  const [selectedBtn, setSelectedBtn] = useState(1);\n  useEffect(() => {\n    let arrOfNumbers = [];\n\n    if (allFilteredItems) {\n      for (let i = 1; i <= Math.ceil(allFilteredItems.length / itemsPerPage); i++) {\n        arrOfNumbers.push(i);\n      }\n\n      setButtonsList(arrOfNumbers);\n      setStartIndex(0);\n      setSelectedBtn(1);\n    }\n  }, []);\n  useEffect(() => {\n    allFilteredItems && FiltersSettingsState.setResultsByPagination(allFilteredItems.slice(startIndex, startIndex + itemsPerPage));\n  }, [buttonsList, selectedBtn]);\n\n  const buttonHandleClick = number => {\n    setStartIndex((number - 1) * itemsPerPage);\n    setSelectedBtn(number);\n    allFilteredItems && FiltersSettingsState.setResultsByPagination(allFilteredItems.slice(startIndex, startIndex + itemsPerPage));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination__list\",\n      children: buttonsList === null || buttonsList === void 0 ? void 0 : buttonsList.map(number => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"pagination__item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedBtn === number ? \"pagination__btn-number active\" : \"pagination__btn-number\",\n            onClick: () => buttonHandleClick(number),\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}, \"KwhKELrP1oAWKTOKg9UCZzdMp/I=\"));\n_c2 = Pagination;\nexport default Pagination;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pagination$observer\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Pagination/Pagination.tsx"],"names":["observer","React","useEffect","useState","FiltersSettingsState","Pagination","allFilteredItems","resultsByPagination","itemsPerPage","setItemsPerPage","startIndex","setStartIndex","buttonsList","setButtonsList","selectedBtn","setSelectedBtn","arrOfNumbers","i","Math","ceil","length","push","setResultsByPagination","slice","buttonHandleClick","number","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,oBAAP,MAAiC,kCAAjC;AAEA,OAAO,mBAAP;;AAMA,MAAMC,UAAiC,GAAGL,QAAQ,SAAC,MAAM;AAAA;;AAErD;AAEA,QAAM;AAAEM,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4CH,oBAAlD;AAEA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAS,CAAT,CAAhD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAS,CAAT,CAA5C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAS,CAAT,CAA9C;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,YAAsB,GAAG,EAA7B;;AAEA,QAAIV,gBAAJ,EAAsB;AAClB,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUb,gBAAgB,CAACc,MAAjB,GAA0BZ,YAApC,CAArB,EAAwES,CAAC,EAAzE,EAA6E;AACzED,QAAAA,YAAY,CAACK,IAAb,CAAkBJ,CAAlB;AACH;;AAEDJ,MAAAA,cAAc,CAACG,YAAD,CAAd;AACAL,MAAAA,aAAa,CAAC,CAAD,CAAb;AACAI,MAAAA,cAAc,CAAC,CAAD,CAAd;AAEH;AACJ,GAbQ,EAaN,EAbM,CAAT;AAgBAb,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,gBAAgB,IAAIF,oBAAoB,CAACkB,sBAArB,CAA4ChB,gBAAgB,CAACiB,KAAjB,CAAuBb,UAAvB,EAAmCA,UAAU,GAAGF,YAAhD,CAA5C,CAApB;AAEH,GAHQ,EAGN,CAACI,WAAD,EAAcE,WAAd,CAHM,CAAT;;AAMA,QAAMU,iBAAiB,GAAIC,MAAD,IAAoB;AAC1Cd,IAAAA,aAAa,CAAC,CAACc,MAAM,GAAG,CAAV,IAAejB,YAAhB,CAAb;AACAO,IAAAA,cAAc,CAACU,MAAD,CAAd;AACAnB,IAAAA,gBAAgB,IAAIF,oBAAoB,CAACkB,sBAArB,CAA4ChB,gBAAgB,CAACiB,KAAjB,CAAuBb,UAAvB,EAAmCA,UAAU,GAAGF,YAAhD,CAA5C,CAApB;AAEH,GALD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,gBACKI,WADL,aACKA,WADL,uBACKA,WAAW,CAAEc,GAAb,CAAkBD,MAAD,IAAY;AAC1B,4BACI;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,iCACI;AACI,YAAA,SAAS,EACLX,WAAW,KAAKW,MAAhB,GACM,+BADN,GAEM,wBAJd;AAMI,YAAA,OAAO,EAAE,MAAMD,iBAAiB,CAACC,MAAD,CANpC;AAAA,sBAQKA;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcH,OAfA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAlEiD,kCAAlD;MAAMpB,U;AAoEN,eAAeA,UAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\r\nimport { SetFilterSettings } from \"../../Utils/SetFilterSettings\";\r\nimport \"./Pagination.scss\";\r\n\r\ninterface IPagination {\r\n    allFilteredItems?: IItemData[] | undefined;\r\n}\r\n\r\nconst Pagination: React.FC<IPagination> = observer(() => {\r\n\r\n    // console.log('pagination')\r\n\r\n    const { allFilteredItems, resultsByPagination } = FiltersSettingsState;\r\n\r\n    const [itemsPerPage, setItemsPerPage] = useState<number>(6);\r\n    const [startIndex, setStartIndex] = useState<number>(0);\r\n    const [buttonsList, setButtonsList] = useState<number[] | undefined>();\r\n    const [selectedBtn, setSelectedBtn] = useState<number>(1);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let arrOfNumbers: number[] = [];\r\n\r\n        if (allFilteredItems) {\r\n            for (let i = 1; i <= Math.ceil(allFilteredItems.length / itemsPerPage); i++) {\r\n                arrOfNumbers.push(i);\r\n            }\r\n\r\n            setButtonsList(arrOfNumbers);\r\n            setStartIndex(0)\r\n            setSelectedBtn(1)\r\n\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        allFilteredItems && FiltersSettingsState.setResultsByPagination(allFilteredItems.slice(startIndex, startIndex + itemsPerPage))\r\n\r\n    }, [buttonsList, selectedBtn])\r\n\r\n\r\n    const buttonHandleClick = (number: number) => {\r\n        setStartIndex((number - 1) * itemsPerPage);\r\n        setSelectedBtn(number)\r\n        allFilteredItems && FiltersSettingsState.setResultsByPagination(allFilteredItems.slice(startIndex, startIndex + itemsPerPage))\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <ul className=\"pagination__list\">\r\n                {buttonsList?.map((number) => {\r\n                    return (\r\n                        <li className=\"pagination__item\">\r\n                            <button\r\n                                className={\r\n                                    selectedBtn === number\r\n                                        ? \"pagination__btn-number active\"\r\n                                        : \"pagination__btn-number\"\r\n                                }\r\n                                onClick={() => buttonHandleClick(number)}\r\n                            >\r\n                                {number}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}