{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useFetchData = () => {\n  _s();\n\n  //     const [isLoading, setIsLoading] = useState(false);\n  //     const [error, setError] = useState('');\n  //\n  //     const fetching = async (...args: any) => {\n  //         try {\n  //             setIsLoading(true)\n  //             await callback(...args)\n  //         } catch (e: any) {\n  //             setError(e.message);\n  //         } finally {\n  //             setIsLoading(false)\n  //         }\n  //     }\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const url = \"https://mocki.io/v1/1e73398f-6067-486c-b37c-415136f22756\"; // const fetching = async () => {\n  // \ttry {\n  // \t\tsetIsLoading(true);\n  // \t\tconst res = await axios.get(url);\n  // \t\tconst resData: IResponseData = res.data;\n  // \t\t// return resData;\n  // \t\tsetData(resData);\n  // \t} catch (e: any) {\n  // \t\tsetError(e);\n  // \t} finally {\n  // \t\tsetIsLoading(false);\n  // \t}\n  // };\n  // fetching();\n\n  setIsLoading(false);\n  return [data, isLoading, error];\n};\n\n_s(useFetchData, \"v26ZckLRwefducwzSjrxEZ8tRzg=\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/hooks/useFetchData.ts"],"names":["useState","useFetchData","data","setData","isLoading","setIsLoading","error","setError","url"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,EAAhC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AAEA,QAAMQ,GAAW,GAAG,0DAApB,CAnBiC,CAqBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAH,EAAAA,YAAY,CAAC,KAAD,CAAZ;AAEA,SAAO,CAACH,IAAD,EAAOE,SAAP,EAAkBE,KAAlB,CAAP;AACA,CAvCM;;GAAML,Y","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { IResponseData } from \"../interfaces/IResponseData\";\r\n\r\nexport const useFetchData = () => {\r\n\t//     const [isLoading, setIsLoading] = useState(false);\r\n\t//     const [error, setError] = useState('');\r\n\t//\r\n\t//     const fetching = async (...args: any) => {\r\n\t//         try {\r\n\t//             setIsLoading(true)\r\n\t//             await callback(...args)\r\n\t//         } catch (e: any) {\r\n\t//             setError(e.message);\r\n\t//         } finally {\r\n\t//             setIsLoading(false)\r\n\t//         }\r\n\t//     }\r\n\r\n\tconst [data, setData] = useState<IResponseData | undefined>();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState();\r\n\r\n\tconst url: string = \"https://mocki.io/v1/1e73398f-6067-486c-b37c-415136f22756\";\r\n\r\n\t// const fetching = async () => {\r\n\t// \ttry {\r\n\t// \t\tsetIsLoading(true);\r\n\t// \t\tconst res = await axios.get(url);\r\n\t// \t\tconst resData: IResponseData = res.data;\r\n\t// \t\t// return resData;\r\n\t// \t\tsetData(resData);\r\n\t// \t} catch (e: any) {\r\n\t// \t\tsetError(e);\r\n\t// \t} finally {\r\n\t// \t\tsetIsLoading(false);\r\n\t// \t}\r\n\t// };\r\n\t// fetching();\r\n\r\n\tsetIsLoading(false);\r\n\r\n\treturn [data, isLoading, error];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}