[{"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\index.tsx":"1","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\App.tsx":"2","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\PageWidthState.ts":"3","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\SearchState.ts":"4","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\AppRouter.tsx":"5","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\ScrollToTop.tsx":"6","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Header\\Header.tsx":"7","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Footer\\Footer.tsx":"8","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\ResponseDataState.ts":"9","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\sortByCategory.ts":"10","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\LoginState.ts":"11","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\sortByBrand.ts":"12","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\CartPage\\CartPage.tsx":"13","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\HomePage\\HomePage.tsx":"14","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\NotFound\\NotFound.tsx":"15","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\ProductPage\\ProductPage.tsx":"16","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\OrdersPage\\OrdersPage.tsx":"17","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Logo\\Logo.tsx":"18","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Header\\Cart\\Cart.tsx":"19","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Header\\NavBarItem\\NavBarItem.tsx":"20","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\SearchBar\\SearchBar.tsx":"21","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Header\\User\\User.tsx":"22","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\SearchIcon.tsx":"23","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\LoginPopup\\LoginPopup.tsx":"24","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\ArrowIcon.tsx":"25","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Footer\\LinksList\\LinksList.tsx":"26","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\CatalogLink\\CatalogLink.tsx":"27","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\FiltersSettingsState.ts":"28","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\SortingByState.ts":"29","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\SetFilterSettings.ts":"30","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\ItemDataState.ts":"31","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\setSortByItems.ts":"32","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\OrdersPageState.ts":"33","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\ResetFilters.ts":"34","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\CartState.ts":"35","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\ScrollLockOnFixed.ts":"36","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\API\\ApiService.ts":"37","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\CatalogIcon.tsx":"38","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\HistoryIcon.tsx":"39","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\HomeIcon.tsx":"40","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\CloseBtn.tsx":"41","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\CartIcon.tsx":"42","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\UserIcon.tsx":"43","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Slider\\Slider.tsx":"44","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\categories\\Categories.tsx":"45","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Cart\\Cart.tsx":"46","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\ToCartBtn\\ToCartBtn.tsx":"47","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ReviewsList\\ReviewsList.tsx":"48","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ProductRating\\ProductRating.tsx":"49","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\TabsList\\TabsList.tsx":"50","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Features\\Features.tsx":"51","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ProductPrice\\ProductPrice.tsx":"52","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ItemCard\\ItemCard.tsx":"53","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\SortingBySelect\\SortingSelect.tsx":"54","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\StatusEmptyBlock\\StatusEmptyBlock.tsx":"55","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\BackBtn\\BackBtn.tsx":"56","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\ResetFiltersBtn\\ResetFiltersBtn.tsx":"57","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\SubmitBtn\\SubmitBtn.tsx":"58","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\SearchBar\\SearchResultsList\\SearchResultsList.tsx":"59","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\SearchBar\\SearchField\\SearchField.tsx":"60","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Loaders\\CatalogPageLoaders\\CatalogPageLoader.tsx":"61","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Header\\User\\UserNav\\UserNav.tsx":"62","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Loaders\\HomePageLoaders\\CategoriesLoader\\CategoriesLoader.tsx":"63","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Loaders\\HomePageLoaders\\SliderLoader\\SliderLoader.tsx":"64","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\StarIcon.tsx":"65","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\EmptyCart.tsx":"66","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\RemoveFromCartIcon.tsx":"67","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\SortingArrows.tsx":"68","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Cart\\CartItem\\CartItem.tsx":"69","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\CategoryItem\\CategoryItem.tsx":"70","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\ClearCartBtn\\ClearCartBtn.tsx":"71","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\ToItemLink\\ToItemLink.tsx":"72","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Switcher\\Switcher.tsx":"73","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\PriceRange\\PriceRange.tsx":"74","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Slider\\SliderButtons\\SwitchBtn\\SwitchBtn.tsx":"75","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Slider\\SliderButtons\\DotsBtns\\DotsBtns.tsx":"76","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\MarkerIcon.tsx":"77","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Cart\\Counter\\Counter.tsx":"78","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\FiltersPanel\\FiltersPanel.tsx":"79","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\FiltersPanel\\CheckboxBrand\\CheckboxBrand.tsx":"80","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\FiltersPanel\\CheckboxCategory\\CheckboxCategory.tsx":"81","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\CatalogPage\\CatalogPage.tsx":"82","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Footer\\FooterNavList\\FooterNavList.tsx":"83","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\addUserToDB.ts":"84","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ProductSelects\\ProductSelects.tsx":"85","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\ProductSelectsState.ts":"86","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ProductSelects\\ColorSelect\\ColorSelect.tsx":"87","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ProductSelects\\MemorySelect\\MemorySelect.tsx":"88"},{"size":147,"mtime":1637055742907,"results":"89","hashOfConfig":"90"},{"size":1134,"mtime":1648139786639,"results":"91","hashOfConfig":"90"},{"size":525,"mtime":1647951119961,"results":"92","hashOfConfig":"90"},{"size":985,"mtime":1647956140021,"results":"93","hashOfConfig":"90"},{"size":913,"mtime":1648324343868,"results":"94","hashOfConfig":"90"},{"size":301,"mtime":1648139468586,"results":"95","hashOfConfig":"90"},{"size":2503,"mtime":1648240783849,"results":"96","hashOfConfig":"90"},{"size":1698,"mtime":1648415087675,"results":"97","hashOfConfig":"90"},{"size":459,"mtime":1646723266537,"results":"98","hashOfConfig":"90"},{"size":378,"mtime":1647809875955,"results":"99","hashOfConfig":"90"},{"size":509,"mtime":1647011321325,"results":"100","hashOfConfig":"90"},{"size":298,"mtime":1647810101971,"results":"101","hashOfConfig":"90"},{"size":166,"mtime":1648134383914,"results":"102","hashOfConfig":"90"},{"size":1595,"mtime":1648422014100,"results":"103","hashOfConfig":"90"},{"size":280,"mtime":1637055743583,"results":"104","hashOfConfig":"90"},{"size":4873,"mtime":1648566880875,"results":"105","hashOfConfig":"90"},{"size":5083,"mtime":1648134471208,"results":"106","hashOfConfig":"90"},{"size":1069,"mtime":1648246178593,"results":"107","hashOfConfig":"90"},{"size":633,"mtime":1647638942366,"results":"108","hashOfConfig":"90"},{"size":438,"mtime":1648205744622,"results":"109","hashOfConfig":"90"},{"size":2353,"mtime":1648146623926,"results":"110","hashOfConfig":"90"},{"size":988,"mtime":1647958027069,"results":"111","hashOfConfig":"90"},{"size":541,"mtime":1647351004825,"results":"112","hashOfConfig":"90"},{"size":6083,"mtime":1648501564522,"results":"113","hashOfConfig":"90"},{"size":410,"mtime":1647286008089,"results":"114","hashOfConfig":"90"},{"size":1799,"mtime":1648390567794,"results":"115","hashOfConfig":"90"},{"size":644,"mtime":1647970986521,"results":"116","hashOfConfig":"90"},{"size":1050,"mtime":1647094931266,"results":"117","hashOfConfig":"90"},{"size":272,"mtime":1646640878087,"results":"118","hashOfConfig":"90"},{"size":1184,"mtime":1646732307226,"results":"119","hashOfConfig":"90"},{"size":317,"mtime":1648558891772,"results":"120","hashOfConfig":"90"},{"size":898,"mtime":1647909023215,"results":"121","hashOfConfig":"90"},{"size":531,"mtime":1647863999992,"results":"122","hashOfConfig":"90"},{"size":404,"mtime":1646734500535,"results":"123","hashOfConfig":"90"},{"size":392,"mtime":1646995289673,"results":"124","hashOfConfig":"90"},{"size":1124,"mtime":1648146393767,"results":"125","hashOfConfig":"90"},{"size":339,"mtime":1648563328397,"results":"126","hashOfConfig":"90"},{"size":839,"mtime":1647351278522,"results":"127","hashOfConfig":"90"},{"size":1324,"mtime":1647963647547,"results":"128","hashOfConfig":"90"},{"size":1451,"mtime":1647346590447,"results":"129","hashOfConfig":"90"},{"size":541,"mtime":1643191461653,"results":"130","hashOfConfig":"90"},{"size":2793,"mtime":1647248157361,"results":"131","hashOfConfig":"90"},{"size":491,"mtime":1643188133458,"results":"132","hashOfConfig":"90"},{"size":5272,"mtime":1648423201713,"results":"133","hashOfConfig":"90"},{"size":1226,"mtime":1648252083998,"results":"134","hashOfConfig":"90"},{"size":4325,"mtime":1648231671200,"results":"135","hashOfConfig":"90"},{"size":1573,"mtime":1647969156698,"results":"136","hashOfConfig":"90"},{"size":1051,"mtime":1646858570808,"results":"137","hashOfConfig":"90"},{"size":1557,"mtime":1647014846549,"results":"138","hashOfConfig":"90"},{"size":1079,"mtime":1647204868385,"results":"139","hashOfConfig":"90"},{"size":2347,"mtime":1646833387433,"results":"140","hashOfConfig":"90"},{"size":745,"mtime":1648159217752,"results":"141","hashOfConfig":"90"},{"size":2984,"mtime":1648208449124,"results":"142","hashOfConfig":"90"},{"size":1452,"mtime":1646938261290,"results":"143","hashOfConfig":"90"},{"size":633,"mtime":1647971296473,"results":"144","hashOfConfig":"90"},{"size":441,"mtime":1647970532703,"results":"145","hashOfConfig":"90"},{"size":326,"mtime":1647973324092,"results":"146","hashOfConfig":"90"},{"size":448,"mtime":1648501369776,"results":"147","hashOfConfig":"90"},{"size":4510,"mtime":1648146631068,"results":"148","hashOfConfig":"90"},{"size":951,"mtime":1647951733859,"results":"149","hashOfConfig":"90"},{"size":1067,"mtime":1648040875048,"results":"150","hashOfConfig":"90"},{"size":2545,"mtime":1647637151891,"results":"151","hashOfConfig":"90"},{"size":579,"mtime":1648035754651,"results":"152","hashOfConfig":"90"},{"size":450,"mtime":1648035761953,"results":"153","hashOfConfig":"90"},{"size":1118,"mtime":1646922734483,"results":"154","hashOfConfig":"90"},{"size":981,"mtime":1647082682170,"results":"155","hashOfConfig":"90"},{"size":834,"mtime":1647794462073,"results":"156","hashOfConfig":"90"},{"size":1309,"mtime":1646666257278,"results":"157","hashOfConfig":"90"},{"size":2315,"mtime":1647699536497,"results":"158","hashOfConfig":"90"},{"size":744,"mtime":1648252343423,"results":"159","hashOfConfig":"90"},{"size":422,"mtime":1647971628648,"results":"160","hashOfConfig":"90"},{"size":442,"mtime":1647794116364,"results":"161","hashOfConfig":"90"},{"size":686,"mtime":1648292647895,"results":"162","hashOfConfig":"90"},{"size":1962,"mtime":1648292121397,"results":"163","hashOfConfig":"90"},{"size":996,"mtime":1647181636866,"results":"164","hashOfConfig":"90"},{"size":342,"mtime":1648050413371,"results":"165","hashOfConfig":"90"},{"size":751,"mtime":1646942630272,"results":"166","hashOfConfig":"90"},{"size":1550,"mtime":1647698186288,"results":"167","hashOfConfig":"90"},{"size":3130,"mtime":1648324109771,"results":"168","hashOfConfig":"90"},{"size":1446,"mtime":1646943756286,"results":"169","hashOfConfig":"90"},{"size":1839,"mtime":1648322592626,"results":"170","hashOfConfig":"90"},{"size":5170,"mtime":1648469500236,"results":"171","hashOfConfig":"90"},{"size":2530,"mtime":1648414508337,"results":"172","hashOfConfig":"90"},{"size":384,"mtime":1648501867574,"results":"173","hashOfConfig":"90"},{"size":1430,"mtime":1648566879438,"results":"174","hashOfConfig":"90"},{"size":511,"mtime":1648559811593,"results":"175","hashOfConfig":"90"},{"size":2373,"mtime":1648566898333,"results":"176","hashOfConfig":"90"},{"size":2208,"mtime":1648566882041,"results":"177","hashOfConfig":"90"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"1b2fcw0",{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"180"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"180"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"180"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"180"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"180"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"180"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"180"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"180"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"180"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"180"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"180"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"180"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"180"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"180"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"180"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"180"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"180"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"180"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"180"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"180"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"180"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"180"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"180"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"180"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"180"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"180"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"180"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"180"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"180"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"180"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"180"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"180"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"180"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"180"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"180"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"180"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\index.tsx",[],["393","394"],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\App.tsx",["395","396","397","398"],"import Header from \"./components/Header/Header\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./AppRouter\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.scss\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { useEffect, useState } from \"react\";\nimport PageWidthState from \"./store/PageWidthState\";\nimport { observer } from \"mobx-react-lite\";\nimport SearchState from \"./store/SearchState\";\nimport ScrollToTop from \"./Utils/ScrollToTop\";\n\nconst App = observer(() => {\n\n    const { isMobile } = PageWidthState\n    const { isSearchShown } = SearchState;\n\n    useEffect(() => {\n        window.addEventListener('resize', onWindowResize)\n    }, [])\n\n    const onWindowResize = () => {\n        if (window.innerWidth >= 768) {\n            PageWidthState.setIsMobile(false)\n        } else {\n            PageWidthState.setIsMobile(true)\n\n        }\n    }\n\n    return (\n        <BrowserRouter>\n\n            <Header />\n            <ScrollToTop >\n                <AppRouter />\n            </ScrollToTop>\n            <Footer />\n\n\n        </BrowserRouter>\n    );\n})\n\nexport default App;\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\PageWidthState.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\SearchState.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\AppRouter.tsx",["399","400","401"],"import { BrowserRouter, Route, Routes, useLocation } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport CartPage from \"./pages/CartPage/CartPage\";\nimport NotFound from \"./pages/NotFound/NotFound\";\nimport FiltersPage from \"./pages/CatalogPage/CatalogPage\";\nimport ProductPage from \"./pages/ProductPage/ProductPage\";\nimport OrdersPage from \"./pages/OrdersPage/OrdersPage\";\nimport { useEffect } from \"react\";\n\nconst AppRouter = () => {\n\n\n\n\n\n\treturn (\n\n\t\t<Routes>\n\t\t\t<Route path=\"/\" element={<HomePage />} />\n\t\t\t<Route path=\"/cart\" element={<CartPage />} />\n\t\t\t<Route path=\"/category\" element={<FiltersPage />} />\n\t\t\t<Route path=\"/item\" element={<ProductPage />} />\n\t\t\t<Route path=\"/orders-page\" element={<OrdersPage />} />\n\t\t\t<Route path=\"/device-market-react-mobX\" element={<HomePage />} />\n\t\t\t<Route path=\"*\" element={<NotFound />} />\n\n\t\t</Routes>\n\t);\n};\n\nexport default AppRouter;\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\ScrollToTop.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Header\\Header.tsx",["402","403","404","405"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"./../../components/Logo/Logo\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Cart from \"./Cart/Cart\";\nimport User from \"./User/User\";\n\nimport { observer } from \"mobx-react-lite\";\nimport LoginState from \"../../store/LoginState\";\nimport CatalogLink from \"../buttons/CatalogLink/CatalogLink\";\nimport SearchState from \"../../store/SearchState\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport NavBarItem from \"./NavBarItem/NavBarItem\";\nimport SearchIcon from \"../svg/SearchIcon\";\nimport \"./Header.scss\";\nimport LoginPopup from \"../LoginPopup/LoginPopup\";\n\nconst Header = observer(() => {\n    const headerRef = useRef<HTMLDivElement>(null);\n    const headerNavRef = useRef<HTMLDivElement>(null);\n    const { isPopupShown } = LoginState;\n    const { isSearchShown, headerHeight, searchBarHeight } = SearchState;\n\n    const { isMobile } = PageWidthState;\n\n    useEffect(() => {\n        headerRef.current && SearchState.setHeaderHeight(headerRef.current?.clientHeight)\n    }, [])\n\n    useEffect(() => {\n        if (!isMobile) {\n            document.body.style.setProperty(\"padding-top\", `${headerRef.current?.clientHeight}px`)\n        } else {\n            document.body.style.setProperty(\"padding-top\", `${0}px`)\n\n        }\n    }, [isMobile])\n\n\n\n    const showSearch = () => {\n        SearchState.setIsSearchShown(true)\n        PageWidthState.setScrollYPosition(window.scrollY)\n    }\n\n    return (\n        <>\n            {isPopupShown && <LoginPopup headerRef={headerRef} />}\n\n            <header className={!isSearchShown && isMobile ? \"header\" : \"header header--to-top\"} ref={headerRef} >\n                {isSearchShown ? (\n                    <SearchBar headerRef={headerRef} />\n                ) : (\n                    <div className=\"header__nav\" ref={headerNavRef}>\n                        <Logo logoType=\"navigation\" />\n                        <CatalogLink isNav={true} />\n                        <button\n                            className=\"header__show-mobile-search-btn\"\n                            onClick={showSearch}\n                        >\n                            <NavBarItem itemIcon={<SearchIcon />} itemName={\"Поиск\"} />\n                        </button>\n                        <User />\n                        <Cart />\n                    </div>\n                )}\n            </header>\n        </>\n    );\n});\n\nexport default Header;\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Footer\\Footer.tsx",["406","407","408","409"],"import { observer } from \"mobx-react-lite\";\r\nimport ResponseDataState from \"../../store/ResponseDataState\";\r\nimport { sortByCategory } from \"./../../Utils/sortByCategory\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport LinksList from \"./LinksList/LinksList\";\r\nimport { sortByBrand } from \"../../Utils/sortByBrand\";\r\nimport { useEffect, useState } from \"react\";\r\nimport PageWidthState from \"../../store/PageWidthState\";\r\nimport ArrowIcon from \"../svg/ArrowIcon\";\r\nimport FooterNavList from \"./FooterNavList/FooterNavList\";\r\nimport \"./Footer.scss\";\r\n\r\n\r\nconst Footer = observer(() => {\r\n    const { responseData } = ResponseDataState;\r\n    const { isMobile } = PageWidthState;\r\n\r\n    const [isCategoriesListShown, setIsCategoriesListShown] = useState(true);\r\n    const [isBrandsListShown, setIsBrandsListShown] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (isMobile) {\r\n            setIsCategoriesListShown(false);\r\n            setIsBrandsListShown(false);\r\n        }\r\n        if (!isMobile) {\r\n            setIsCategoriesListShown(true);\r\n            setIsBrandsListShown(true);\r\n        }\r\n    }, [isMobile]);\r\n\r\n\r\n\r\n    return (\r\n        <footer className=\"footer section-wrapper\">\r\n            <div className=\"footer__inner inner\">\r\n                <Logo logoType=\"footer\" />\r\n\r\n                <FooterNavList title='Категории' linkFunction={sortByCategory} items={responseData?.categories.map((category) => {\r\n                    return category.categoryName;\r\n                })} />\r\n\r\n                <FooterNavList title='Бренды' linkFunction={sortByBrand} items={responseData?.brands} />\r\n\r\n\r\n            </div>\r\n        </footer>\r\n    );\r\n});\r\n\r\nexport default Footer;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\ResponseDataState.ts",["410","411"],"import { makeAutoObservable } from \"mobx\";\r\nimport { ICategory } from \"../interfaces/ICategory\";\r\nimport { IItemData } from \"../interfaces/IItemData\";\r\nimport { IResponseData } from \"../interfaces/IResponseData\";\r\n\r\nclass ResponseDataState {\r\n\tresponseData: IResponseData | undefined;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetResponseData(res: IResponseData) {\r\n\t\tthis.responseData = res;\r\n\t}\r\n}\r\n\r\nexport default new ResponseDataState();\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\sortByCategory.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\LoginState.ts",["412"],"import { makeAutoObservable } from \"mobx\";\r\nimport { IItemData } from \"../interfaces/IItemData\";\r\n\r\nclass LoginState {\r\n\tisPopupShown: boolean = false;\r\n\tuserName: string = \"\";\r\n\tuserPassword: string = \"\";\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetIsPopupShown(value: boolean) {\r\n\t\tthis.isPopupShown = value;\r\n\t}\r\n\r\n\tsetUserName(name: string) {\r\n\t\tthis.userName = name;\r\n\t}\r\n\r\n\tsetUserPassword(password: string) {\r\n\t\tthis.userPassword = password;\r\n\t}\r\n}\r\n\r\nexport default new LoginState();\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\sortByBrand.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\CartPage\\CartPage.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\HomePage\\HomePage.tsx",["413","414"],"import React, { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport ApiService from \"../../API/ApiService\";\nimport Categories from \"../../components/categories/Categories\";\nimport Slider from \"./../../components/Slider/Slider\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport \"./HomePage.scss\"\nimport CategoriesLoader from \"../../components/Loaders/HomePageLoaders/CategoriesLoader/CategoriesLoader\";\nimport SliderLoader from \"../../components/Loaders/HomePageLoaders/SliderLoader/SliderLoader\";\n\nconst HomePage = observer(() => {\n\tconst apiService = new ApiService();\n\n\tconst { responseData } = ResponseDataState\n\n\n\n\n\tuseEffect(() => {\n\n\t\tif (!responseData) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tapiService.getData()\n\t\t\t\t\t.then((data) => ResponseDataState.setResponseData(data))\n\n\t\t\t}, 500);\n\t\t}\n\n\n\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{/* <Brands /> */}\n\n\t\t\t{!responseData\n\t\t\t\t?\n\t\t\t\t<>\n\t\t\t\t\t<CategoriesLoader />\n\t\t\t\t\t<SliderLoader />\n\t\t\t\t\t<SliderLoader />\n\t\t\t\t</>\n\t\t\t\t:\n\t\t\t\t<>\n\t\t\t\t\t<Categories sectionName=\"categories\" />\n\t\t\t\t\t<section className=\"popular section-wrapper\">\n\t\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t\t<h2 className=\"section-title\">Популярные товары</h2>\n\t\t\t\t\t\t\t<Slider sectionName=\"popular-items\" slideCount={4.5} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"new-items section-wrapper\">\n\t\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t\t<h2 className=\"section-title\">Новинки</h2>\n\t\t\t\t\t\t\t<Slider sectionName=\"new-items\" slideCount={4.5} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</>\n\t\t\t}\n\n\n\n\t\t</>\n\t);\n});\n\nexport default HomePage;\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\NotFound\\NotFound.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\ProductPage\\ProductPage.tsx",["415","416","417","418","419","420","421","422"],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\OrdersPage\\OrdersPage.tsx",["423"],"import { observer } from \"mobx-react-lite\";\r\nimport BackBtn from \"../../components/buttons/BackBtn/BackBtn\";\r\nimport CatalogLink from \"../../components/buttons/CatalogLink/CatalogLink\";\r\nimport StatusEmptyBlock from \"../../components/StatusEmptyBlock/StatusEmptyBlock\";\r\nimport HistoryIcon from \"../../components/svg/HistoryIcon\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport OrdersPageState from \"../../store/OrdersPageState\";\r\nimport \"./OrdersPage.scss\";\r\n\r\nconst OrdersPage = observer(() => {\r\n    const { itemsFromCart, orderSum, orderDate } = OrdersPageState;\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"order-page\">\r\n            <div className=\"order-page__inner\">\r\n                <h1 className=\"order-page__title section-title\">История заказов</h1>\r\n                {!itemsFromCart.length && (\r\n                    <div className=\"order-page__status-wrap\">\r\n                        <div className=\"order-page__btns-wrap\">\r\n                            <CatalogLink btnName=\"Начать покупки\" />\r\n                            <BackBtn btnName=\"Вернуться назад\" />\r\n                        </div>\r\n                        <StatusEmptyBlock title={\"Вы пока не делали заказов\"} image={<HistoryIcon />} />\r\n                    </div>\r\n\r\n                )}\r\n\r\n                <ul className=\"order-page__orders-list orders-list\">\r\n                    {itemsFromCart\r\n                        .map((item: IItemData[], index: number) => {\r\n                            return (\r\n                                <li className=\"orders-list__item\">\r\n                                    <h2 className=\"orders-list__title\">\r\n                                        Заказ №{index + 1}\r\n                                        <p className=\"orders-list__date\">От {orderDate}</p>\r\n                                    </h2>\r\n\r\n                                    <ul className=\"orders-list__order-items-list order-items-list\">\r\n                                        {item.map((i: IItemData) => {\r\n                                            const {\r\n                                                title,\r\n                                                brand,\r\n                                                categoryType,\r\n                                                color,\r\n                                                features: { memory },\r\n                                                images: { snippetImage },\r\n                                                priceInfo: { fullPrice, discountAmount },\r\n                                                count,\r\n                                            } = i;\r\n\r\n                                            return (\r\n                                                <li className=\"order-items-list__item\">\r\n                                                    <div className=\"order-items-list__img-wrap\">\r\n                                                        <img\r\n                                                            className=\"order-items-list__img\"\r\n                                                            src={snippetImage}\r\n                                                            alt={title}\r\n                                                            width={50}\r\n                                                            height=\"auto\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"order-items-list__text-wrap\">\r\n                                                        <p className=\"order-items-list__title\">\r\n                                                            {`${categoryType} ${title}, ${memory}`}\r\n                                                            <span>{color && `, ${color}`}</span>\r\n                                                        </p>\r\n                                                        <p className=\"order-items-list__price\">\r\n                                                            <span>{count}X</span> {fullPrice - discountAmount} руб.\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                    <div className=\"orders-list__sum-wrapper\">\r\n                                        <p className=\"orders-list__sum\">\r\n                                            <span>Итого: </span> {orderSum} руб.\r\n                                        </p>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        })\r\n                        .reverse()}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default OrdersPage;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Logo\\Logo.tsx",["424","425","426"],"import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport { ResetFilters } from \"../../Utils/ResetFilters\";\nimport NavBarItem from \"../Header/NavBarItem/NavBarItem\";\nimport HomeIcon from \"../svg/HomeIcon\";\nimport LogoImage from \"../svg/LogoImage\";\nimport \"./Logo.scss\";\n\nconst Logo = observer(({ logoType }: { logoType: string }) => {\n\n    const { isMobile } = PageWidthState\n\n\n\n    return (\n        <Link to=\"/\" onClick={ResetFilters}>\n            <div className=\"logo\">\n                {logoType === \"navigation\" ? (\n                    <>\n                        {isMobile ? <NavBarItem itemIcon={<HomeIcon />} itemName={\"Домой\"} /> : <b className=\"logo\"><span>Device</span> <span>Market</span></b>}\n\n\n                    </>\n                ) : (\n                    <b className=\"logo\"><span>Device</span> <span>Market</span></b>\n                )}\n            </div>\n        </Link>\n    );\n})\n\nexport default Logo;\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Header\\Cart\\Cart.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Header\\NavBarItem\\NavBarItem.tsx",["427"],"import React from 'react'\r\nimport { JsxElement } from 'typescript'\r\nimport './NavBarItem.scss'\r\n\r\nconst NavBarItem = ({ itemIcon, itemName }: { itemIcon?: JSX.Element, itemName?: string }) => {\r\n    return (\r\n        <div className='nav-bar-item'>\r\n            <div className='nav-bar-item__icon'>{itemIcon}</div>\r\n            {/* <p className='nav-bar-item__name'>{itemName}</p> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBarItem","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\SearchBar\\SearchBar.tsx",["428","429","430","431","432","433","434","435","436"],"import { observer } from \"mobx-react-lite\";\nimport { RefObject, useEffect, useRef, useState, } from \"react\";\nimport SearchState from \"../../store/SearchState\";\nimport SearchResultsList from \"./SearchResultsList/SearchResultsList\";\nimport SearchField from \"./SearchField/SearchField\";\nimport SearchBarBtn from \"./SearchBarBtn/SearchBarBtn\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport PageWidthState from \"../../store/PageWidthState\";\nimport CloseBtn from \"../svg/CloseBtn\";\nimport \"./SearchBar.scss\";\nimport { ScrollLockOnFixed } from \"../../Utils/ScrollLockOnFixed\";\n\nconst SearchBar = observer(({ setIsNavShown, headerRef }: { setIsNavShown?: React.Dispatch<React.SetStateAction<boolean>>, headerRef: RefObject<HTMLDivElement> }) => {\n\n    const searchBarRef = useRef<HTMLDivElement>(null);\n    const searchInnerRef = useRef<HTMLDivElement>(null);\n\n    const { headerHeight, isResultsShown } = SearchState;\n    const { isMobile, scrollYPosition } = PageWidthState;\n\n    const overlayRef = useRef(null)\n\n    const onOverlayClick = (e: any) => {\n        if (e.target === overlayRef.current) {\n            SearchState.setIsSearchShown(false)\n        }\n    }\n\n\n\n    useEffect(() => {\n        ScrollLockOnFixed(\"disabled\", headerRef)\n\n        return () => {\n            ScrollLockOnFixed(\"enabled\", headerRef)\n        }\n    }, [])\n\n\n\n    return (\n        <div className=\"search-bar__overlay\" onClick={onOverlayClick} ref={overlayRef}>\n            <div className=\"search-bar\"\n                ref={searchBarRef}>\n\n                <div className=\"search-bar__inner\" ref={searchInnerRef}>\n                    <div className=\"search-bar__window\">\n                        <SearchField />\n                        {(isResultsShown) && (\n                            <SearchResultsList searchInnerRef={searchInnerRef} />\n\n                        )}\n                        {/* <button onClick={() => setIsNavShown && setIsNavShown(false)} className=\"search-bar__close-btn\"><CloseBtn /></button> */}\n                        <button onClick={() => SearchState.setIsSearchShown(false)} className=\"search-bar__close-btn\"><CloseBtn /></button>\n                    </div>\n                    {/* <SearchBarBtn /> */}\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default SearchBar;\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Header\\User\\User.tsx",["437"],"import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport LoginState from \"../../../store/LoginState\";\r\n// import LoginPopupState from \"../../../store/LoginPopupState\";\r\nimport UserIcon from \"../../svg/UserIcon\";\r\nimport \"./User.scss\";\r\nimport UserNav from \"./UserNav/UserNav\";\r\nimport NavBarItem from \"../NavBarItem/NavBarItem\";\r\nimport PageWidthState from \"../../../store/PageWidthState\";\r\n\r\nconst User = observer(() => {\r\n    const { userName, userPassword, isPopupShown } = LoginState;\r\n\r\n\r\n\r\n    const showPopup = () => {\r\n        // LoginPopupState.setShowPopup(true);\r\n        LoginState.setIsPopupShown(!isPopupShown);\r\n        PageWidthState.setScrollYPosition(window.scrollY)\r\n\r\n    };\r\n\r\n    return userName && userPassword ? (\r\n        <UserNav />\r\n    ) : (\r\n        <button className=\"user\" onClick={showPopup}>\r\n\r\n            <NavBarItem itemIcon={<UserIcon />} itemName={\"Вход\"} />\r\n        </button>\r\n    );\r\n});\r\n\r\nexport default User;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\SearchIcon.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\LoginPopup\\LoginPopup.tsx",["438"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { RefObject, useEffect, useRef, useState } from \"react\";\r\nimport LoginState from \"../../store/LoginState\";\r\nimport CloseBtn from \"../svg/CloseBtn\";\r\nimport SubmitBtn from \"../buttons/SubmitBtn/SubmitBtn\";\r\nimport { ScrollLockOnFixed } from \"../../Utils/ScrollLockOnFixed\";\r\nimport \"./LoginPopup.scss\";\r\nimport { addUserToDB } from \"../../Utils/addUserToDB\";\r\n\r\n\r\nconst LoginPopup = observer(({ headerRef }: { headerRef: RefObject<HTMLDivElement> }) => {\r\n\r\n    const { userName, userPassword, isPopupShown } = LoginState\r\n\r\n    const overlayRef = useRef(null);\r\n    const closeBtnRef = useRef(null);\r\n    const loginRef: any = useRef(null);\r\n    const loginPopupRef = useRef(null);\r\n\r\n    const [isPassShown, setIsPassShown] = useState(false)\r\n    const [loginValue, setLoginValue] = useState('')\r\n    const [passwordValue, setPasswordValue] = useState('')\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (headerRef) {\r\n\r\n            ScrollLockOnFixed(\"disabled\", headerRef)\r\n        }\r\n\r\n        return () => {\r\n            ScrollLockOnFixed(\"enabled\", headerRef)\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (isPopupShown) {\r\n            loginRef.current.focus();\r\n        }\r\n\r\n    }, [isPopupShown]);\r\n\r\n    const closePopup = (e: any) => {\r\n        if (overlayRef.current === e.target || closeBtnRef.current === e.target) {\r\n            LoginState.setIsPopupShown(!isPopupShown);\r\n        }\r\n    };\r\n\r\n    const inputHandleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.id === \"login-field\") {\r\n            setLoginValue(e.currentTarget.value);\r\n        }\r\n        if (e.currentTarget.id === \"password-field\") {\r\n            setPasswordValue(e.currentTarget.value);\r\n        }\r\n    };\r\n\r\n    const showPassword = () => {\r\n        setIsPassShown(!isPassShown);\r\n    };\r\n\r\n    const userLogIned = () => {\r\n        if (loginValue && passwordValue) {\r\n            // LoginState.setUserName(loginValue)\r\n            // LoginState.setUserPassword(passwordValue)\r\n        }\r\n        addUserToDB(loginValue, passwordValue)\r\n    };\r\n\r\n    const onOverlayClick = (e: any) => {\r\n        if (e.target === overlayRef.current) {\r\n            LoginState.setIsPopupShown(!isPopupShown)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"login-popup\" >\r\n            <div ref={overlayRef} className=\"login-popup__overlay\"\r\n                onClick={onOverlayClick}\r\n            >\r\n                <form className=\"login-popup__form\" ref={loginPopupRef}>\r\n                    <button\r\n                        onClick={(e) => closePopup(e)}\r\n                        ref={closeBtnRef}\r\n                        type=\"button\"\r\n                        className=\"login-popup__close-btn\"\r\n                    >\r\n                        <CloseBtn />\r\n                    </button>\r\n                    {userName && userPassword ? (\r\n                        <div className=\"login-popup__success\">\r\n                            <p>Вы вошли под именем {userName}</p>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"login-popup__login-wrap\">\r\n                            <h3 className=\"login-popup__title\">Вход</h3>\r\n                            <div className=\"login-popup__fields-wrap\">\r\n                                <label className=\"login-popup__input-wrap\" htmlFor=\"login-field\">\r\n                                    <b>Логин:</b>\r\n                                    <input\r\n                                        ref={loginRef}\r\n                                        className=\"login-popup__input\"\r\n                                        type=\"text\"\r\n                                        onChange={(e) => inputHandleChange(e)}\r\n                                        value={loginValue}\r\n                                        placeholder=\"Пример: user123\"\r\n                                        id=\"login-field\"\r\n                                    />\r\n                                </label>\r\n                                <label className=\"login-popup__input-wrap\" htmlFor=\"password-field\">\r\n                                    <b>Пароль:</b>\r\n                                    <input\r\n                                        className=\"login-popup__input\"\r\n                                        type={isPassShown ? \"text\" : \"password\"}\r\n                                        onChange={(e) => inputHandleChange(e)}\r\n                                        value={passwordValue}\r\n                                        placeholder=\"Пример: Password1234\"\r\n                                        id=\"password-field\"\r\n                                    />\r\n                                    <label className=\"login-popup__show-pass-wrap\" htmlFor=\"show-password\">\r\n                                        <input\r\n                                            onClick={showPassword}\r\n                                            type=\"checkbox\"\r\n                                            id=\"show-password\"\r\n                                            checked={isPassShown}\r\n                                            onChange={() => setIsPassShown(!isPassShown)}\r\n                                        />\r\n                                        <span>Показать пароль</span>\r\n                                    </label>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"login-popup__btns-wrap\">\r\n                                <SubmitBtn userLogIned={userLogIned} />\r\n                                {/* <a className=\"login-popup__registration-btn\" type=\"button\">\r\n                                    Зарегистрироваться\r\n                                </a> */}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default LoginPopup","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\ArrowIcon.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Footer\\LinksList\\LinksList.tsx",["439","440","441"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageWidthState from \"../../../store/PageWidthState\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport \"./LinksList.scss\";\r\n\r\ninterface ILinksList {\r\n    items: string[] | undefined;\r\n    linkFunction?: any;\r\n    // isListShown: boolean;\r\n}\r\n\r\nconst LinksList: React.FC<ILinksList> = observer(({ items, linkFunction }) => {\r\n\r\n    const linksListRef = useRef<HTMLDivElement>(null)\r\n    const [isListShown, setIsListShown] = useState(false)\r\n\r\n    useEffect(() => {\r\n        //         if (linksListRef.current !== null) {\r\n        //             if (isListShown) {\r\n        //                 linksListRef.current.classList.add('links-list__wrap--on-open')\r\n        //             }\r\n        // \r\n        //             if (!isListShown) {\r\n        // \r\n        //                 linksListRef.current.classList.remove('links-list__wrap--on-open')\r\n        //             }\r\n        //         }\r\n\r\n    }, [isListShown]);\r\n\r\n\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={isListShown}\r\n            timeout={1500}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            classNames=\"links-list\"\r\n        >\r\n\r\n            <ul className={`links-list`} >\r\n                {items &&\r\n                    items.map((item) => {\r\n                        return (\r\n                            <Link className=\"links-list__item\" to=\"/category\" onClick={() => linkFunction(item)}>\r\n                                <span>{item}</span>\r\n                            </Link>\r\n                        );\r\n                    })}\r\n            </ul>\r\n\r\n\r\n\r\n        </CSSTransition>\r\n\r\n    );\r\n});\r\n\r\nexport default LinksList;\r\n",["442","443"],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\CatalogLink\\CatalogLink.tsx",["444"],"import { Button } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NavBarItem from '../../Header/NavBarItem/NavBarItem'\r\nimport CatalogIcon from '../../svg/CatalogIcon'\r\nimport './CatalogLink.scss'\r\n\r\nconst CatalogLink = ({ isNav, btnName }: { isNav?: boolean, btnName?: string }) => {\r\n    return (\r\n        <Link to='/category' className='catalog-link__wrap'>\r\n\r\n            {isNav && <NavBarItem itemIcon={<CatalogIcon />} itemName={\"Каталог\"} />}\r\n            {!isNav && <button className='catalog-link__btn'>{btnName}</button>}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default CatalogLink","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\FiltersSettingsState.ts",["445","446"],"import { makeAutoObservable } from \"mobx\";\r\nimport { ICategory } from \"../interfaces/ICategory\";\r\nimport { IResponseData } from \"../interfaces/IResponseData\";\r\n\r\nclass FiltersSettingsState {\r\n\tisFiltersShown: boolean = false;\r\n\tselectedCategories: string[] = [];\r\n\tselectedBrands: string[] = [];\r\n\tpriceRange: number[] = [3000, 200000];\r\n\tisPriceRangeReseted: boolean = false;\r\n\tisDiscount: boolean = false;\r\n\tisAvailable: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetIsFiltersShown(value: boolean) {\r\n\t\tthis.isFiltersShown = value;\r\n\t}\r\n\r\n\tsetSelectedCategories(res: string[]) {\r\n\t\tthis.selectedCategories = res;\r\n\t}\r\n\r\n\tsetSelectedBrands(res: string[]) {\r\n\t\tthis.selectedBrands = res;\r\n\t}\r\n\r\n\tsetPriceRange(res: number[]) {\r\n\t\tthis.priceRange = res;\r\n\t}\r\n\r\n\tsetIsPriceRangeReseted(res: boolean) {\r\n\t\tthis.isPriceRangeReseted = res;\r\n\t}\r\n\r\n\tsetIsDiscount(res: boolean) {\r\n\t\tthis.isDiscount = res;\r\n\t}\r\n\r\n\tsetIsAvailable(res: boolean) {\r\n\t\tthis.isAvailable = res;\r\n\t}\r\n}\r\n\r\nexport default new FiltersSettingsState();\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\SortingByState.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\SetFilterSettings.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\ItemDataState.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\setSortByItems.ts",["447"],"import { IItemData } from \"../interfaces/IItemData\";\r\nimport SortingByState from \"../store/SortingByState\";\r\n\r\nexport const setSortByItems = (items: any) => {\r\n\treturn items?.sort((a: any, b: any) => {\r\n\t\tlet typeOfSortA;\r\n\t\tlet typeOfSortB;\r\n\r\n\t\tif (SortingByState.sortingByType === \"popular\") {\r\n\t\t\ttypeOfSortA = a.rating;\r\n\t\t\ttypeOfSortB = b.rating;\r\n\t\t}\r\n\t\tif (SortingByState.sortingByType === \"newest\") {\r\n\t\t\ttypeOfSortA = a.releaseDate;\r\n\t\t\ttypeOfSortB = b.releaseDate;\r\n\t\t}\r\n\t\tif (SortingByState.sortingByType === \"expensive\") {\r\n\t\t\ttypeOfSortA = a.priceInfo.fullPrice;\r\n\t\t\ttypeOfSortB = b.priceInfo.fullPrice;\r\n\t\t}\r\n\t\tif (SortingByState.sortingByType === \"cheap\") {\r\n\t\t\ttypeOfSortA = b.priceInfo.fullPrice;\r\n\t\t\ttypeOfSortB = a.priceInfo.fullPrice;\r\n\t\t}\r\n\r\n\t\tif (typeOfSortA > typeOfSortB) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (typeOfSortA < typeOfSortB) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t});\r\n};\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\OrdersPageState.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\ResetFilters.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\CartState.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\ScrollLockOnFixed.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\API\\ApiService.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\CatalogIcon.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\HistoryIcon.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\HomeIcon.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\CloseBtn.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\CartIcon.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\UserIcon.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Slider\\Slider.tsx",["448","449","450","451","452"],"import { useEffect, useState } from \"react\";\r\nimport { toJS } from \"mobx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport ItemCard from \"../ItemCard/ItemCard\";\r\nimport \"./Slider.scss\";\r\nimport SwitchBtn from \"./SliderButtons/SwitchBtn/SwitchBtn\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport DotsBtns from \"./SliderButtons/DotsBtns/DotsBtns\";\r\nimport ResponseDataState from \"../../store/ResponseDataState\";\r\nimport ItemDataState from \"../../store/ItemDataState\";\r\nimport PageWidthState from \"../../store/PageWidthState\";\r\n\r\ninterface ISliderItems {\r\n    sliderItems?: IItemData[];\r\n    sectionName?: string;\r\n    slideCount?: number;\r\n}\r\n\r\nconst Slider: React.FC<ISliderItems> = observer(({ sectionName, slideCount }) => {\r\n    // const toItemPage = new ToItemPage();\r\n\r\n    const { responseData } = ResponseDataState\r\n    const { itemCardWidth } = PageWidthState\r\n\r\n\r\n\r\n    const [sliderItems, setSliderItems] = useState<IItemData[]>([])\r\n\r\n\r\n    useEffect(() => {\r\n        if (sectionName === \"popular-items\") {\r\n            if (responseData) {\r\n                setSliderItems(responseData?.items.filter((item: IItemData) => {\r\n                    return item.rating > 3.5 && item.isAvailable;\r\n                }))\r\n            }\r\n        }\r\n\r\n        if (sectionName === \"new-items\") {\r\n            if (responseData) {\r\n                setSliderItems(responseData?.items.filter((item: IItemData) => {\r\n                    return item.releaseDate > 2017 && item.isAvailable;\r\n                }))\r\n            }\r\n\r\n\r\n        }\r\n    }, [responseData?.items]);\r\n\r\n\r\n\r\n    SwiperCore.use([Navigation, Pagination]);\r\n\r\n\r\n    // let slidesCount\r\n    // (sectionName === \"popular-items\") ? slidesCount = 2.4 : slidesCount = 4.5\r\n\r\n    return (\r\n\r\n        <div className=\"slider-wrapper\">\r\n            <Swiper\r\n                loop={true}\r\n                breakpoints={{\r\n\r\n                    0: {\r\n                        slidesPerView: 1.1,\r\n                        centeredSlides: false,\r\n                        pagination: {\r\n                            el: `.${sectionName}__dots-pagination`,\r\n                            type: \"bullets\",\r\n                            clickable: true,\r\n                        },\r\n\r\n                        navigation: {\r\n                            nextEl: `.${sectionName}__switch-btn--next`,\r\n                            prevEl: `.${sectionName}__switch-btn--prev`,\r\n                        },\r\n\r\n                    },\r\n                    400: {\r\n                        slidesPerView: 1.5,\r\n                        centeredSlides: false,\r\n                        pagination: {\r\n                            el: `.${sectionName}__dots-pagination`,\r\n                            type: \"bullets\",\r\n                            clickable: true,\r\n                        },\r\n\r\n                        navigation: {\r\n                            nextEl: `.${sectionName}__switch-btn--next`,\r\n                            prevEl: `.${sectionName}__switch-btn--prev`,\r\n                        },\r\n\r\n                    },\r\n                    768: {\r\n                        slidesPerView: 2.2,\r\n                        spaceBetween: 10,\r\n                        centeredSlides: false,\r\n                        pagination: {\r\n                            el: `.${sectionName}__dots-pagination`,\r\n                            type: \"bullets\",\r\n                            clickable: true,\r\n                        },\r\n\r\n                        navigation: {\r\n                            nextEl: `.${sectionName}__switch-btn--next`,\r\n                            prevEl: `.${sectionName}__switch-btn--prev`,\r\n                        },\r\n                    },\r\n                    1000: {\r\n                        slidesPerView: 3.2,\r\n                        spaceBetween: 10,\r\n                        centeredSlides: false,\r\n                        pagination: {\r\n                            el: `.${sectionName}__dots-pagination`,\r\n                            type: \"bullets\",\r\n                            clickable: true,\r\n                        },\r\n\r\n                        navigation: {\r\n                            nextEl: `.${sectionName}__switch-btn--next`,\r\n                            prevEl: `.${sectionName}__switch-btn--prev`,\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                {sliderItems?.map((item: IItemData) => {\r\n                    return (\r\n                        <SwiperSlide key={item.id}>\r\n                            <ItemCard inSliderView=\"inSliderView\" item={item} isBtnLite={true} />\r\n                        </SwiperSlide>\r\n                    );\r\n                })}\r\n            </Swiper>\r\n            <DotsBtns sectionName={sectionName} />\r\n            <SwitchBtn btnType=\"prev\" sectionName={sectionName} />\r\n            <SwitchBtn btnType=\"next\" sectionName={sectionName} />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Slider;\r\n\r\n\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\categories\\Categories.tsx",["453"],"import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { ICategory } from \"../../interfaces/ICategory\";\nimport CategoryItem from \"../CategoryItem/CategoryItem\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\nimport { sortByCategory } from \"../../Utils/sortByCategory\";\nimport \"./Categories.scss\";\n\ninterface ICategoriesItems {\n\tsectionName?: string;\n}\n\nconst Categories: React.FC<ICategoriesItems> = observer(({ sectionName }) => {\n\n\tconst { responseData } = ResponseDataState\n\n\treturn (\n\t\t<div className=\"categories section-wrapper\">\n\t\t\t<div className=\"inner\">\n\t\t\t\t<h2 className=\"categories__title section-title\">Категории</h2>\n\t\t\t\t<div className=\"categories__list\">\n\t\t\t\t\t{\n\t\t\t\t\t\tresponseData?.categories.map((category: ICategory) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto=\"/category\"\n\t\t\t\t\t\t\t\t\tonClick={() => sortByCategory(category)}\n\t\t\t\t\t\t\t\t\tclassName=\"categories__item\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CategoryItem category={category} itemSection='categories' />\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n\nexport default Categories;\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Cart\\Cart.tsx",["454"],"import { useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport CartState from \"../../store/CartState\";\r\nimport OrdersPageState from \"../../store/OrdersPageState\";\r\nimport EmptyCart from \"../../components/svg/EmptyCart\";\r\nimport CatalogLink from \"../../components/buttons/CatalogLink/CatalogLink\";\r\nimport CartItem from \"../../components/Cart/CartItem/CartItem\";\r\nimport \"./Cart.scss\";\r\nimport StatusEmptyBlock from \"../StatusEmptyBlock/StatusEmptyBlock\";\r\nimport BackBtn from \"../buttons/BackBtn/BackBtn\";\r\nimport ClearCartBtn from \"../buttons/ClearCartBtn/ClearCartBtn\";\r\n\r\nconst Cart = observer(() => {\r\n    const { cartItems, priceSum } = CartState;\r\n    const { itemsFromCart } = OrdersPageState;\r\n    const navigate = useNavigate();\r\n    const goBack = () => navigate(-1);\r\n\r\n    const [isOrderSuccess, setIsOrderSuccess] = useState(false);\r\n\r\n\r\n\r\n    const makeOrder = () => {\r\n        OrdersPageState.setItemsFromCart([...itemsFromCart.concat([CartState.cartItems])]);\r\n        OrdersPageState.setOrderSum(priceSum);\r\n        setIsOrderSuccess(true);\r\n        CartState.setCartItems([]);\r\n        CartState.setPriceSum(0);\r\n        OrdersPageState.setOrderDate(new Date().toLocaleDateString());\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            {isOrderSuccess ? (\r\n                <div className=\"order-success\">\r\n                    <p className=\"order-success__title\">\r\n                        Заказ №{OrdersPageState.itemsFromCart.length} успешно оформлен\r\n                    </p>\r\n                    <p className=\"order-success__description\">\r\n                        Отследить статус можно в\r\n                        <Link to=\"/orders-page\">\r\n                            <span className=\"order-success__link\">Истории заказов</span>\r\n                        </Link>\r\n                    </p>\r\n                    <div className=\"order-success__btns-wrap\">\r\n                        <Link to=\"/orders-page\">\r\n                            <button className=\"order-success__to-order-btn stroked-btn\">К заказу</button>\r\n                        </Link>\r\n                        <CatalogLink btnName=\"Продолжить покупки\" />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"cart__inner\">\r\n                    <h2 className=\"cart__title section-title\">Корзина</h2>\r\n                    <div className=\"cart__btns-wrap\">\r\n                        <BackBtn btnName=\"Вернуться назад\" />\r\n                        {cartItems.length > 0 ? (\r\n                            <ClearCartBtn />\r\n                        ) : <CatalogLink btnName=\"Перейти в каталог\" />}\r\n                    </div>\r\n                    <ul className=\"cart__list\">\r\n                        {cartItems.length === 0 ? (\r\n                            <StatusEmptyBlock title={\"В корзину ничего не добавлено\"} image={<EmptyCart />} />\r\n                        ) : (\r\n                            cartItems.map((item: IItemData) => {\r\n                                return (\r\n                                    <li>\r\n                                        <CartItem item={item} />\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        )}\r\n                    </ul>\r\n                    {cartItems.length > 0 ? (\r\n                        <>\r\n                            <div className=\"cart__price-block total-price-block\">\r\n                                <p className=\"total-price-block__items-count\">Итого: </p>\r\n                                <b className=\"total-price-block__price\">{CartState.priceSum} руб.</b>\r\n                            </div>\r\n                            <button onClick={makeOrder} className=\"cart__checkout-btn\">\r\n                                Оформить\r\n                            </button>\r\n                        </>\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Cart;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\ToCartBtn\\ToCartBtn.tsx",["455","456","457"],"import { toJS } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { IItemData } from \"../../../interfaces/IItemData\";\nimport CartState from \"../../../store/CartState\";\nimport CartIcon from \"../../svg/CartIcon\";\nimport CloseBtn from \"../../svg/CloseBtn\";\nimport RemoveFromCartIcon from \"../../svg/RemoveFromCartIcon\";\nimport \"./ToCartBtn.scss\";\n\n\n\nconst ToCartBtn = observer(({ item, isBtnLite }: { item: IItemData, isBtnLite?: boolean }) => {\n\tconst { cartItems, priceSum } = CartState;\n\tconst { priceInfo: { fullPrice, discountAmount } } = item;\n\n\n\tconst [isItemInCart, setIsItemInCart] = useState(false)\n\n\tuseEffect(() => {\n\n\t\tsetIsItemInCart(false)\n\t\tcartItems.forEach(i => {\n\t\t\tif (i.id === item.id) {\n\t\t\t\tconsole.log(true)\n\t\t\t\tsetIsItemInCart(true)\n\t\t\t}\n\t\t})\n\n\t})\n\n\n\tconst addToCart = () => {\n\t\tCartState.setCartItems([...cartItems.concat(item)]);\n\t\tCartState.setPriceSum(priceSum + fullPrice - discountAmount)\n\t};\n\n\tconst removeFromCart = () => {\n\t\tCartState.setCartItems([\n\t\t\t...cartItems.filter((i) => {\n\t\t\t\treturn i.id !== item.id;\n\t\t\t}),\n\t\t]);\n\t\tCartState.setPriceSum(priceSum - (fullPrice - discountAmount))\n\t};\n\n\n\treturn (\n\t\t<>\n\t\t\t{isItemInCart ?\n\t\t\t\t<button className=\"to-cart-btn to-cart-btn--remove\" onClick={removeFromCart}>\n\t\t\t\t\t{isBtnLite ? <RemoveFromCartIcon /> : 'Удалить из корзины'}\n\n\t\t\t\t</button>\n\n\t\t\t\t:\n\t\t\t\t<button className=\"to-cart-btn\" onClick={addToCart}>\n\t\t\t\t\t{!isBtnLite && \"В корзину\"} <CartIcon />\n\t\t\t\t</button>}\n\n\n\t\t</>\n\t);\n\n});\n\nexport default ToCartBtn;\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ReviewsList\\ReviewsList.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ProductRating\\ProductRating.tsx",["458"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport StarIcon from \"../svg/StarIcon\";\r\nimport \"./ProductRating.scss\";\r\n\r\nconst ProductRating = ({ rating }: { rating: number }) => {\r\n\r\n    const [starsIds] = useState<number[]>([1, 2, 3, 4, 5]);\r\n    const [ratingPercentage, setRatingPercentage] = useState<number>(100);\r\n\r\n    const listRef = useRef<HTMLUListElement>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (null !== listRef.current) {\r\n            setRatingPercentage(rating * 100 / 5)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"product-rating\">\r\n            <div className=\"product-rating__wrap\">\r\n                <ul className=\"stars-list\" ref={listRef}>\r\n                    {starsIds.map(() => {\r\n                        return (\r\n                            <li className={\"stars-list__item\"}>\r\n                                <StarIcon />\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n                <ul className=\"stars-list stars-list--active\" style={{ width: `${ratingPercentage}%` }}>\r\n                    {starsIds.map(() => {\r\n                        return (\r\n                            <li className={\"stars-list__item\"}>\r\n                                <StarIcon />\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <div className=\"product-rating__counter\">{rating}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductRating;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\TabsList\\TabsList.tsx",["459"],"import React, { useState } from \"react\";\r\nimport \"./TabsList.scss\";\r\n\r\nconst TabsList = ({ tabName, setTabName }: { tabName: string; setTabName: any }) => {\r\n\r\n\r\n\r\n    return (\r\n        <ul className=\"tabs-list\">\r\n            <li className=\"tabs-list__item\">\r\n                <button\r\n                    className={\r\n                        tabName === \"features\" ? \"tabs-list__button tabs-list__button--active\" : \"tabs-list__button\"\r\n                    }\r\n                    onClick={() => setTabName(\"features\")}\r\n                >\r\n                    Описание\r\n                </button>\r\n            </li>\r\n            <li className=\"tabs-list__item\">\r\n                <button\r\n                    className={\r\n                        tabName === \"reviews\" ? \"tabs-list__button tabs-list__button--active\" : \"tabs-list__button\"\r\n                    }\r\n                    onClick={() => setTabName(\"reviews\")}\r\n                >\r\n                    Отзывы\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TabsList;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Features\\Features.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ProductPrice\\ProductPrice.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ItemCard\\ItemCard.tsx",["460","461","462","463","464","465","466","467","468","469"],"import { spawn } from \"child_process\";\r\nimport { toJS } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport ItemDataState from \"../../store/ItemDataState\";\r\nimport ProductPrice from \"../ProductPrice/ProductPrice\";\r\nimport ProductRating from \"../ProductRating/ProductRating\";\r\nimport ToCartBtn from \"../buttons/ToCartBtn/ToCartBtn\";\r\nimport CartState from \"../../store/CartState\";\r\nimport ResponseDataState from \"../../store/ResponseDataState\";\r\nimport ToItemLink from \"../buttons/ToItemLink/ToItemLink\";\r\nimport \"./ItemCard.scss\";\r\nimport PageWidthState from \"../../store/PageWidthState\";\r\n\r\ninterface ICardTypeOfView {\r\n    inPageView?: string;\r\n    inSliderView?: string;\r\n    item: IItemData;\r\n    isBtnLite?: boolean\r\n}\r\n\r\nconst ItemCard: React.FC<ICardTypeOfView> = observer(({ inPageView, inSliderView, item, isBtnLite }) => {\r\n    const { cartItems } = CartState;\r\n    const { responseData } = ResponseDataState;\r\n    const { itemCardWidth } = PageWidthState;\r\n\r\n    const itemCardRef = useRef<HTMLDivElement>(null)\r\n\r\n    const {\r\n        images: { snippetImage },\r\n        title,\r\n        priceInfo,\r\n        priceInfo: { discount, discountAmount, fullPrice },\r\n        isAvailable,\r\n        reviewsInfo: { reviews },\r\n        color,\r\n        rating,\r\n        categoryType,\r\n        features: { memory },\r\n    } = item;\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={isAvailable ? \"item-card\" : \"item-card item-card--not-available\"} ref={itemCardRef}>\r\n            <Link className=\"item-card__img-link\" to=\"/item\" onClick={() => ItemDataState.setItemData(item)}>\r\n                <img className=\"item-card__img\" src={snippetImage} alt=\"img\" height=\"100\" />\r\n            </Link>\r\n            <Link className=\"item-card__title-link\" to=\"/item\" onClick={() => ItemDataState.setItemData(item)}>\r\n                <h3 className=\"item-card__title\">{`${categoryType} ${title} ${color ? color : \"\"}, ${memory}`}</h3>\r\n            </Link>\r\n\r\n\r\n\r\n            <Link className=\"item-card__rating-link\" to=\"/item\" onClick={() => ItemDataState.setItemData(item)}>\r\n                <div className=\"item-card__rating-wrap\">\r\n                    <ProductRating rating={rating} />\r\n                    <p className=\"item-card__reviews\">Отзывы ({reviews.length})</p>\r\n                </div>\r\n            </Link>\r\n            <ProductPrice priceInfo={priceInfo} isAvailable={isAvailable} />\r\n            <div className=\"item-card__buttons\">\r\n                {/* {isAvailable && <ToCartBtn item={item} isBtnLite={isBtnLite} />} */}\r\n                {isAvailable && <ToCartBtn item={item} isBtnLite={isBtnLite} />}\r\n                {isBtnLite && <Link to=\"/item\" onClick={() => ItemDataState.setItemData(item)}><ToItemLink /></Link>}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ItemCard;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\SortingBySelect\\SortingSelect.tsx",["470","471"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport SortingByState from \"../../store/SortingByState\";\r\nimport SortingArrows from \"../svg/SortingArrows\";\r\nimport './SortingSelect.scss'\r\n\r\nconst SortingSelect = observer(\r\n    ({ itemsToShow, setItemsToShow }: { itemsToShow: IItemData[] | undefined; setItemsToShow: any }) => {\r\n        const [selectValues, setSelectValues] = useState(\"\");\r\n        const { sortingByType } = SortingByState\r\n\r\n        const sortBy = (e: any) => {\r\n            setSelectValues(e.currentTarget.value);\r\n            SortingByState.setSortingByType(e.currentTarget.value)\r\n\r\n\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <select className=\"sorting-select\" value={sortingByType} onChange={(e) => sortBy(e)}>\r\n                    <option selected value=\"popular\">\r\n                        Сначала популярные\r\n                    </option>\r\n                    <option value=\"newest\">Сначала новые</option>\r\n                    <option selected value=\"cheap\">\r\n                        Сначала дешевые\r\n                    </option>\r\n                    <option value=\"expensive\">Сначала дорогие</option>\r\n                </select>\r\n                <SortingArrows />\r\n            </>\r\n        );\r\n    }\r\n);\r\n\r\nexport default SortingSelect;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\StatusEmptyBlock\\StatusEmptyBlock.tsx",["472","473"],"import React from 'react'\r\nimport CatalogLink from '../buttons/CatalogLink/CatalogLink'\r\nimport EmptyCart from '../svg/EmptyCart'\r\nimport './StatusEmptyBlock.scss'\r\n\r\nconst StatusEmpty = ({ title, image }: { title: string, image: JSX.Element }) => {\r\n    return (\r\n        <div className=\"cart__empty-cart-block empty-cart-block\">\r\n            <p className=\"empty-cart-block__title\">{title}</p>\r\n            <div className=\"empty-cart-block__img-wrap\">\r\n                {image}\r\n            </div>\r\n            {/* <CatalogLink btnName=\"Перейти в каталог\" /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusEmpty","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\BackBtn\\BackBtn.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\ResetFiltersBtn\\ResetFiltersBtn.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\SubmitBtn\\SubmitBtn.tsx",["474"],"import { addUserToDB } from '../../../Utils/addUserToDB'\r\nimport './SubmitBtn.scss'\r\n\r\nconst SubmitBtn = ({ userLogIned }: { userLogIned: any }) => {\r\n\r\n    return (\r\n        <button className=\"submit-btn\" type=\"button\" onClick={userLogIned}>\r\n            {/* <button className=\"submit-btn\" type=\"button\" onClick={() => addUserToDB('pavel@mail.ru', 'asdasdasd')}> */}\r\n            Войти\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SubmitBtn","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\SearchBar\\SearchResultsList\\SearchResultsList.tsx",["475","476","477","478","479","480"],"import React, { RefObject, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IItemData } from \"../../../interfaces/IItemData\";\r\nimport ItemDataState from \"../../../store/ItemDataState\";\r\nimport SearchState from \"../../../store/SearchState\";\r\nimport ToItemLink from \"../../buttons/ToItemLink/ToItemLink\";\r\nimport ResponseDataState from \"../../../store/ResponseDataState\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PageWidthState from \"../../../store/PageWidthState\";\r\nimport \"./SearchResultsList.scss\";\r\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\r\n\r\nconst SearchResultsList = observer(\r\n    ({ resultsHeight, searchInnerRef }: { resultsHeight?: number; searchInnerRef: RefObject<HTMLDivElement> }) => {\r\n        const searchResultsRef = useRef<HTMLUListElement>(null);\r\n\r\n        const { responseData } = ResponseDataState;\r\n        const { searchInputValue, searchResults, isResultsShown, isFocused } = SearchState;\r\n        const { isMobile } = PageWidthState;\r\n\r\n\r\n\r\n        useEffect(() => {\r\n            document.addEventListener(\"click\", outsideSearchClick);\r\n\r\n            return () => {\r\n                document.removeEventListener(\"click\", outsideSearchClick);\r\n            };\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            if (responseData) {\r\n                SearchState.setSearchResults(\r\n                    responseData.items.filter((item) => {\r\n                        return (\r\n                            item.title.toLocaleLowerCase().includes(searchInputValue.toLocaleLowerCase()) ||\r\n                            item.brand.toLocaleLowerCase().includes(searchInputValue.toLocaleLowerCase())\r\n                        );\r\n                    })\r\n                );\r\n            }\r\n        }, [searchInputValue]);\r\n\r\n        const outsideSearchClick = (e: any) => {\r\n            if (!searchInnerRef.current?.contains(e.target as Node)) {\r\n                SearchState.setIsResultsShown(false);\r\n            }\r\n        };\r\n\r\n        const onResultClick = (item: IItemData) => {\r\n            ItemDataState.setItemData(item);\r\n            SearchState.setIsResultsShown(false);\r\n            SearchState.setIsSearchShown(false)\r\n            SearchState.setSearchInputValue('')\r\n            clearAllBodyScrollLocks()\r\n        };\r\n\r\n        return (\r\n            <ul className=\"search__results-list search-results\" ref={searchResultsRef}>\r\n                {searchInputValue &&\r\n                    searchResults.map((item: IItemData) => {\r\n                        const {\r\n                            color,\r\n                            title,\r\n                            priceInfo: { fullPrice, discountAmount },\r\n                            images: { snippetImage },\r\n                            features: { memory },\r\n                        } = item;\r\n\r\n                        return (\r\n                            <li key={item.id} className=\"search-results__item\">\r\n                                <Link to=\"/item\" className=\"search-results__link\" onClick={() => onResultClick(item)}>\r\n                                    <div className=\"search-results__img-wrap\">\r\n                                        <img\r\n                                            className=\"search-results__img\"\r\n                                            src={snippetImage}\r\n                                            alt={title}\r\n                                            height=\"50\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"search-results__text-wrap\">\r\n                                        <p className=\"search-results__title\">\r\n                                            {title}, {color}, {memory}\r\n                                        </p>\r\n                                        <p className=\"search-results__price\">{fullPrice - discountAmount} р.</p>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                {searchInputValue && !searchResults.length && (\r\n                    <p>\r\n                        По запросу <span className=\"search-results__results-not-found\">{searchInputValue} </span>\r\n                        ничего не найдено\r\n                    </p>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n);\r\n\r\nexport default SearchResultsList;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\SearchBar\\SearchField\\SearchField.tsx",["481","482","483","484"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport PageWidthState from '../../../store/PageWidthState';\r\nimport SearchState from '../../../store/SearchState';\r\nimport './SearchField.scss'\r\n\r\nconst SearchField = observer(() => {\r\n\r\n    const { searchInputValue } = SearchState;\r\n\r\n    const onHandleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        SearchState.setIsResultsShown(true);\r\n        SearchState.setSearchInputValue(e.currentTarget.value);\r\n    };\r\n\r\n    const onSearchFocus = () => {\r\n\r\n        SearchState.setIsResultsShown(true)\r\n    }\r\n\r\n    return (\r\n        <input\r\n            value={searchInputValue}\r\n            onChange={(e) => onHandleChange(e)}\r\n            className=\"search-field\"\r\n            type=\"text\"\r\n            placeholder=\"Поиск по товарам\"\r\n            onFocus={onSearchFocus}\r\n        />\r\n    )\r\n})\r\n\r\nexport default SearchField","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Loaders\\CatalogPageLoaders\\CatalogPageLoader.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Header\\User\\UserNav\\UserNav.tsx",["485","486","487"],"import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoginState from '../../../../store/LoginState';\r\nimport UserIcon from '../../../svg/UserIcon';\r\n// import LoginPopupState from '../../../../store/LoginPopupState';\r\nimport \"./UserNav.scss\";\r\nimport NavBarItem from '../../NavBarItem/NavBarItem';\r\n\r\nconst UserNav = observer(() => {\r\n\r\n    const { userName, userPassword, isPopupShown } = LoginState;\r\n\r\n    let settingsListRef = useRef(null)\r\n\r\n    const [isSettingsShown, setIsSettingsShown] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        if (settingsListRef.current) {\r\n            document.addEventListener('click', outsideClick)\r\n            console.log('')\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('click', outsideClick)\r\n        }\r\n    }, [isSettingsShown])\r\n\r\n    const outsideClick = (e: any) => {\r\n        if (e.currentTarget !== settingsListRef.current) {\r\n            setIsSettingsShown(false)\r\n        }\r\n    }\r\n\r\n    const openSettings = (e: any) => {\r\n        setIsSettingsShown(!isSettingsShown)\r\n    }\r\n\r\n    const logOut = () => {\r\n        LoginState.setUserName('')\r\n        LoginState.setUserPassword('')\r\n        LoginState.setIsPopupShown(!isPopupShown)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='user-nav'>\r\n            <div className='user-nav__user-wrapper'\r\n                onClick={openSettings}\r\n            >\r\n                <NavBarItem itemIcon={<UserIcon />} itemName={userName} />\r\n            </div>\r\n            {isSettingsShown &&\r\n                <ul ref={settingsListRef} className='user-nav__settings-list settings-list'>\r\n                    <li className='settings-list__item'>\r\n                        <Link className='settings-list__link' to=\"/orders-page\">\r\n                            История заказов\r\n                        </Link>\r\n                    </li>\r\n                    <li className='settings-list__item'>\r\n                        <a className='settings-list__link' href=\"\">\r\n                            Настройки профиля\r\n                        </a>\r\n                    </li>\r\n                    <li className='settings-list__item'>\r\n                        <a className='settings-list__link' onClick={logOut}>\r\n                            Выйти\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default UserNav;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Loaders\\HomePageLoaders\\CategoriesLoader\\CategoriesLoader.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Loaders\\HomePageLoaders\\SliderLoader\\SliderLoader.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\StarIcon.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\EmptyCart.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\RemoveFromCartIcon.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\SortingArrows.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Cart\\CartItem\\CartItem.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\CategoryItem\\CategoryItem.tsx",["488"],"import { toJS } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { ICategory } from \"../../interfaces/ICategory\";\r\nimport \"./CategoryItem.scss\"\r\n\r\ninterface ICategoryItem {\r\n\tcategory?: ICategory,\r\n\titemSection?: string\r\n}\r\n\r\nconst CategoryItem: React.FC<ICategoryItem> = observer(({ category, itemSection }: any) => {\r\n\r\n\tconst { categoryName, image } = category\r\n\r\n\treturn (\r\n\t\t<div className={`category-item category-item--${itemSection}`} style={{ backgroundImage: `url(${itemSection === 'categories' && image})` }}>\r\n\t\t\t{/* {!footerItem && <img className=\"category-item__img\" src={image} alt=\"item-img\" />} */}\r\n\t\t\t<p className=\"category-item__title\">{categoryName}</p>\r\n\t\t</div>\r\n\t);\r\n})\r\n\r\nexport default CategoryItem;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\ClearCartBtn\\ClearCartBtn.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\buttons\\ToItemLink\\ToItemLink.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Switcher\\Switcher.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\PriceRange\\PriceRange.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Slider\\SliderButtons\\SwitchBtn\\SwitchBtn.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Slider\\SliderButtons\\DotsBtns\\DotsBtns.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\svg\\MarkerIcon.tsx",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Cart\\Counter\\Counter.tsx",["489","490"],"import { IItemData } from '../../../interfaces/IItemData';\r\nimport CartState from '../../../store/CartState'\r\nimport './Counter.scss'\r\n\r\nconst Counter = ({ item }: { item: IItemData }) => {\r\n\r\n    const { cartItems, priceSum } = CartState;\r\n\r\n    const incItem = (item: IItemData) => {\r\n\r\n        cartItems.forEach(i => {\r\n\r\n            const { priceInfo: { fullPrice, discountAmount }, count } = i\r\n\r\n            if (i.id === item.id) {\r\n                i.count++\r\n                CartState.setPriceSum(priceSum + (fullPrice - discountAmount))\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const decItem = (item: IItemData) => {\r\n        cartItems.forEach(i => {\r\n            const { priceInfo: { fullPrice, discountAmount }, count } = i\r\n            if (i.id === item.id) {\r\n                i.count--\r\n                CartState.setPriceSum(priceSum - (fullPrice - discountAmount))\r\n            }\r\n            if (i.count === 0) {\r\n                CartState.setCartItems([...cartItems.filter(cartItem => {\r\n                    return cartItem.id !== item.id\r\n                })])\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"counter\">\r\n            <button className=\"counter__btn counter__btn--dec\"\r\n                onClick={() => decItem(item)}\r\n            >-</button>\r\n            <div className=\"counter__num\">{item.count}</div>\r\n            <button className=\"counter__btn counter__btn--inc\"\r\n                onClick={() => incItem(item)}\r\n            >+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\FiltersPanel\\FiltersPanel.tsx",["491","492","493","494"],"import React, { ReactFragment, useEffect, useRef, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { ICategory } from \"../../interfaces/ICategory\";\nimport CheckboxCategory from \"./CheckboxCategory/CheckboxCategory\";\nimport CheckboxBrand from \"./CheckboxBrand/CheckboxBrand\";\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport PriceRange from \"../PriceRange/PriceRange\";\nimport Switcher from \"../Switcher/Switcher\";\nimport ClearFiltersBtn from \"../buttons/ResetFiltersBtn/ResetFiltersBtn\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport { ScrollLockOnFixed } from \"../../Utils/ScrollLockOnFixed\";\nimport CloseBtn from \"../svg/CloseBtn\";\nimport './FiltersPanel.scss'\n\n\ninterface IFiltersPanel {\n\titemsToShowCount?: number;\n\tshowFilters: any\n}\n\n\nconst FiltersPanel: React.FC<IFiltersPanel> = observer(({ itemsToShowCount, showFilters }) => {\n\n\tconst { isMobile } = PageWidthState;\n\n\tconst filtersRef = useRef(null)\n\tconst showBtnRef = useRef(null)\n\n\n\n\tuseEffect(() => {\n\t\tif (filtersRef.current && isMobile) {\n\t\t\tScrollLockOnFixed(\"disabled\", filtersRef)\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (filtersRef.current && isMobile) {\n\t\t\t\tScrollLockOnFixed(\"enabled\", filtersRef)\n\t\t\t}\n\t\t}\n\t}, [])\n\n\n\n\n\tconst { isAvailable, isDiscount } = FiltersSettingsState\n\tconst { responseData } = ResponseDataState\n\n\n\n\n\treturn (\n\t\t<div className=\"filters-panel\" ref={filtersRef}>\n\t\t\t<div className=\"filters-panel__filter-wrap\" >\n\t\t\t\t<h2 className=\"filters-panel__title\">Фильтры</h2>\n\t\t\t\t<div className=\"filters-panel__reset-wrap\">\n\n\t\t\t\t\t<ClearFiltersBtn />\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={showFilters}\n\t\t\t\t\t\tclassName=\"filters-panel__close-btn\">\n\t\t\t\t\t\t<CloseBtn />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<ul className=\"filters-panel__category-sorting-list\">\n\t\t\t\t\t{responseData?.categories.map((category: ICategory) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"filters-panel__category-sorting-item\">\n\t\t\t\t\t\t\t\t<CheckboxCategory category={category} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"filters-panel__brand-sorting-list\">\n\t\t\t\t\t{responseData?.brands.map((brand: string) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"filters-panel__brand-sorting-item\">\n\t\t\t\t\t\t\t\t<CheckboxBrand brand={brand} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t<PriceRange />\n\t\t\t\t<ul className=\"filters-panel__switch-list\">\n\t\t\t\t\t<li className=\"filters-panel__switch-item\">\n\t\t\t\t\t\t<p className=\"filters-panel__switch-text\">В наличии</p>\n\t\t\t\t\t\t<Switcher name=\"isAvailableSwitch\" state={isAvailable} />\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"filters-panel__switch-item\">\n\t\t\t\t\t\t<p className=\"filters-panel__switch-text\">Скидка</p>\n\t\t\t\t\t\t<Switcher name=\"isDiscountSwitch\" state={isDiscount} />\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t{isMobile &&\n\t\t\t\t\t<div className=\"filters-panel__results-btn-wrap\" ref={showBtnRef}>\n\t\t\t\t\t\t<button className=\"filters-panel__results-btn\"\n\t\t\t\t\t\t\tonClick={showFilters}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tПоказать ({itemsToShowCount}) товаров\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n\nexport default FiltersPanel;\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\FiltersPanel\\CheckboxBrand\\CheckboxBrand.tsx",["495"],"import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport FiltersSettingsState from \"../../../store/FiltersSettingsState\";\r\nimport MarkerIcon from \"../../svg/MarkerIcon\";\r\nimport \"./CheckboxBrand.scss\";\r\n\r\ninterface IInputBrand {\r\n    brand: string\r\n}\r\n\r\n\r\nconst CheckboxCategory: React.FC<IInputBrand> = observer(({ brand }) => {\r\n\r\n    const { selectedBrands } = FiltersSettingsState\r\n\r\n    const addBrand = () => {\r\n        if (!selectedBrands.includes(brand)) {\r\n            FiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)])\r\n        }\r\n\r\n        if (selectedBrands.includes(brand)) {\r\n            FiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)])\r\n            FiltersSettingsState.setSelectedBrands(selectedBrands.filter((item) => {\r\n                return item != brand\r\n            }))\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkbox-wrapper\">\r\n            <input\r\n                className=\"visually-hidden\"\r\n                id={brand}\r\n                type=\"checkbox\"\r\n                name=\"brand-item\"\r\n                checked={selectedBrands.includes(brand) ? true : false}\r\n                onChange={addBrand}\r\n            />\r\n            <div className=\"checkbox-border\">\r\n                <MarkerIcon />\r\n            </div>\r\n            <label htmlFor={brand}>{brand}</label>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CheckboxCategory;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\FiltersPanel\\CheckboxCategory\\CheckboxCategory.tsx",["496","497","498","499","500"],"import { toJS } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { ICategory } from \"../../../interfaces/ICategory\";\r\nimport FiltersSettingsState from \"../../../store/FiltersSettingsState\";\r\nimport \"./CheckboxCategory.scss\";\r\nimport \"../checbox.scss\";\r\nimport MarkerIcon from \"../../svg/MarkerIcon\";\r\n\r\ninterface IInputCategory {\r\n    category: ICategory\r\n}\r\n\r\n\r\nconst CheckboxCategory: React.FC<IInputCategory> = observer(({ category }) => {\r\n\r\n    const { selectedCategories } = FiltersSettingsState\r\n\r\n    const { categoryName } = category\r\n\r\n    const addCategory = () => {\r\n        if (!selectedCategories.includes(category.categoryName)) {\r\n            FiltersSettingsState.setSelectedCategories([...selectedCategories.concat(category.categoryName)])\r\n        }\r\n\r\n        if (selectedCategories.includes(category.categoryName)) {\r\n            FiltersSettingsState.setSelectedCategories([...selectedCategories.concat(category.categoryName)])\r\n            FiltersSettingsState.setSelectedCategories(selectedCategories.filter((item) => {\r\n                return item != categoryName\r\n            }))\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"checkbox-wrapper\">\r\n            <input\r\n                className=\"visually-hidden\"\r\n                id={categoryName}\r\n                type=\"checkbox\"\r\n                name=\"category-item\"\r\n                checked={selectedCategories.includes(categoryName) ? true : false}\r\n                onChange={addCategory}\r\n            />\r\n            <div className=\"checkbox-border\">\r\n                <MarkerIcon />\r\n            </div>\r\n            <label className=\"filter-checkbox\" htmlFor={categoryName}>{categoryName}</label>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CheckboxCategory;\r\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\pages\\CatalogPage\\CatalogPage.tsx",["501","502","503","504","505"],"import { useEffect, useRef, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { IItemData } from \"../../interfaces/IItemData\";\nimport ItemCard from \"../../components/ItemCard/ItemCard\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\nimport ApiService from \"../../API/ApiService\";\nimport SortingBySelect from \"../../components/SortingBySelect/SortingSelect\";\nimport SortingByState from \"../../store/SortingByState\";\nimport { SetFilterSettings } from \"../../Utils/SetFilterSettings\";\nimport { setSortByItems } from \"../../Utils/setSortByItems\";\nimport CatalogIcon from \"../../components/svg/CatalogIcon\";\nimport CatalogPageLoader from \"../../components/Loaders/CatalogPageLoaders/CatalogPageLoader\";\nimport ClearFiltersBtn from \"../../components/buttons/ResetFiltersBtn/ResetFiltersBtn\";\nimport FiltersPanel from \"../../components/FiltersPanel/FiltersPanel\";\nimport \"./CatalogPage.scss\";\nimport PageWidthState from \"../../store/PageWidthState\";\n\n\n\nconst CatalogPage = observer(() => {\n    const apiService = new ApiService();\n\n    const { selectedCategories, selectedBrands, priceRange, isAvailable, isDiscount } = FiltersSettingsState;\n    const { sortingByType } = SortingByState;\n    const { responseData } = ResponseDataState;\n    const { isMobile } = PageWidthState;\n\n    const [itemsToShow, setItemsToShow] = useState([]);\n\n    const [isLoading, setIsLoading] = useState(true);\n\n    const filtersWrapRef = useRef(null)\n\n    useEffect(() => {\n        apiService.getData().then((data) => {\n            ResponseDataState.setResponseData(data);\n            setItemsToShow(SetFilterSettings());\n        });\n    }, []);\n\n    useEffect(() => {\n        if (itemsToShow) {\n            setIsLoading(true);\n            setItemsToShow(SetFilterSettings());\n            setIsLoading(false);\n        }\n    }, [selectedCategories, selectedBrands, priceRange, isAvailable, isDiscount]);\n\n    useEffect(() => {\n        if (itemsToShow) {\n            setItemsToShow(setSortByItems([...itemsToShow]));\n            window.scrollTo(0, 0);\n        }\n    }, [sortingByType]);\n\n    const [isFiltersPanelShown, setIsFiltersPanelShown] = useState(false)\n\n    const showFilters = () => {\n        setIsFiltersPanelShown(!isFiltersPanelShown)\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <>\n                    <CatalogPageLoader />\n                </>\n            ) : (\n                <div className=\"catalog-page\">\n                    <h1 className=\"catalog-page__title section-title\">\n                        Товаров найдено ({itemsToShow && itemsToShow.length})\n                    </h1>\n                    <div className=\"catalog-page__inner\">\n                        <div className=\"catalog-page__filters-wrap\" ref={filtersWrapRef}>\n                            {isFiltersPanelShown || !isMobile && (\n                                <FiltersPanel\n                                    itemsToShowCount={itemsToShow.length}\n                                    showFilters={showFilters}\n                                />\n                            )}\n                        </div>\n\n                        <div className=\"catalog-page__items-wrap\">\n                            {itemsToShow?.length > 0 && (\n                                <>\n                                    <div className=\"catalog-page__mobile-settings\">\n                                        <button className=\"catalog-page__btn-show-filters\" onClick={showFilters}>\n                                            <CatalogIcon />\n                                            <span>Фильтры</span>\n                                        </button>\n                                        <div className=\"catalog-page__sorting-by-wrap\">\n                                            <SortingBySelect\n                                                itemsToShow={itemsToShow}\n                                                setItemsToShow={setItemsToShow}\n                                            />\n                                        </div>\n                                    </div>\n                                    <ul className=\"catalog-page__results-list results-list\">\n                                        {itemsToShow.map((item: IItemData) => {\n                                            return <ItemCard inPageView=\"inPage\" item={item} />;\n                                        })}\n                                    </ul>\n                                </>\n                            )}\n                            {(itemsToShow?.length === 0 && responseData) && (\n                                <div className=\"catalog-page__results-not-found\">\n                                    <p>По данным параметрам ничего не найдено</p>\n                                    <ClearFiltersBtn />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n});\n\nexport default CatalogPage;\n","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\Footer\\FooterNavList\\FooterNavList.tsx",["506","507","508"],"\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PageWidthState from '../../../store/PageWidthState';\r\nimport ArrowIcon from '../../svg/ArrowIcon';\r\nimport './FooterNavList.scss'\r\n\r\ninterface IFooterNavList {\r\n    title?: string | undefined;\r\n    items?: string[] | undefined;\r\n    linkFunction: any;\r\n}\r\n\r\nconst FooterNavList: React.FC<IFooterNavList> = ({ title, items, linkFunction }) => {\r\n\r\n    const { isMobile } = PageWidthState;\r\n\r\n    const [isListShown, setIsListShown] = useState(false)\r\n    const [arrow, setArrow] = useState(false)\r\n    const [listWrapHeight, setListWrapHeight] = useState(0)\r\n\r\n    const listWrapRef = useRef<HTMLUListElement>(null)\r\n\r\n\r\n\r\n    return (\r\n        <div className='footer-nav-list'>\r\n            <button className='footer-nav-list__title-button' onClick={() => isMobile && setIsListShown(!isListShown)}>\r\n                <h3 className='footer-nav-list__title'>{title}</h3>\r\n                {isMobile &&\r\n\r\n\r\n                    <span className={isListShown ? 'footer-nav-list__arrow opened' : 'footer-nav-list__arrow opened closed'}><ArrowIcon /></span>\r\n                }\r\n            </button>\r\n\r\n            <CSSTransition\r\n                in={isMobile ? isListShown : !isListShown}\r\n                timeout={300}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                onEntering={() => listWrapRef.current && setListWrapHeight(listWrapRef.current.clientHeight)}\r\n                onExiting={() => setListWrapHeight(0)}\r\n\r\n\r\n                classNames=\"footer-nav-list__links-list-wrap\"\r\n            >\r\n                <div className='footer-nav-list__links-list-wrap' style={{ height: `${isMobile && listWrapHeight}px` }}>\r\n                    <ul className='footer-nav-list__links-list' ref={listWrapRef}>\r\n                        {items && items.map((item) => {\r\n                            return (\r\n                                <li className='footer-nav-list__item'>\r\n                                    <Link to=\"/category\" className='footer-nav-list__item-link' onClick={() => linkFunction(item)}>\r\n                                        {item}\r\n                                    </Link>\r\n                                </li>\r\n\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterNavList","C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\Utils\\addUserToDB.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ProductSelects\\ProductSelects.tsx",["509","510"],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\store\\ProductSelectsState.ts",[],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ProductSelects\\ColorSelect\\ColorSelect.tsx",["511"],"C:\\Users\\Pavel\\Desktop\\js\\device-market-master\\client\\src\\components\\ProductSelects\\MemorySelect\\MemorySelect.tsx",["512"],{"ruleId":"513","replacedBy":"514"},{"ruleId":"515","replacedBy":"516"},{"ruleId":"517","severity":1,"message":"518","line":6,"column":8,"nodeType":"519","messageId":"520","endLine":6,"endColumn":17},{"ruleId":"517","severity":1,"message":"521","line":7,"column":21,"nodeType":"519","messageId":"520","endLine":7,"endColumn":29},{"ruleId":"517","severity":1,"message":"522","line":15,"column":13,"nodeType":"519","messageId":"520","endLine":15,"endColumn":21},{"ruleId":"517","severity":1,"message":"523","line":16,"column":13,"nodeType":"519","messageId":"520","endLine":16,"endColumn":26},{"ruleId":"517","severity":1,"message":"524","line":1,"column":10,"nodeType":"519","messageId":"520","endLine":1,"endColumn":23},{"ruleId":"517","severity":1,"message":"525","line":1,"column":40,"nodeType":"519","messageId":"520","endLine":1,"endColumn":51},{"ruleId":"517","severity":1,"message":"526","line":9,"column":10,"nodeType":"519","messageId":"520","endLine":9,"endColumn":19},{"ruleId":"517","severity":1,"message":"521","line":1,"column":36,"nodeType":"519","messageId":"520","endLine":1,"endColumn":44},{"ruleId":"517","severity":1,"message":"527","line":2,"column":10,"nodeType":"519","messageId":"520","endLine":2,"endColumn":14},{"ruleId":"517","severity":1,"message":"528","line":22,"column":28,"nodeType":"519","messageId":"520","endLine":22,"endColumn":40},{"ruleId":"517","severity":1,"message":"529","line":22,"column":42,"nodeType":"519","messageId":"520","endLine":22,"endColumn":57},{"ruleId":"517","severity":1,"message":"530","line":5,"column":8,"nodeType":"519","messageId":"520","endLine":5,"endColumn":17},{"ruleId":"517","severity":1,"message":"531","line":9,"column":8,"nodeType":"519","messageId":"520","endLine":9,"endColumn":17},{"ruleId":"517","severity":1,"message":"532","line":18,"column":12,"nodeType":"519","messageId":"520","endLine":18,"endColumn":33},{"ruleId":"517","severity":1,"message":"533","line":19,"column":12,"nodeType":"519","messageId":"520","endLine":19,"endColumn":29},{"ruleId":"517","severity":1,"message":"534","line":2,"column":10,"nodeType":"519","messageId":"520","endLine":2,"endColumn":19},{"ruleId":"517","severity":1,"message":"535","line":3,"column":10,"nodeType":"519","messageId":"520","endLine":3,"endColumn":19},{"ruleId":"517","severity":1,"message":"535","line":2,"column":10,"nodeType":"519","messageId":"520","endLine":2,"endColumn":19},{"ruleId":"517","severity":1,"message":"521","line":1,"column":28,"nodeType":"519","messageId":"520","endLine":1,"endColumn":36},{"ruleId":"536","severity":1,"message":"537","line":31,"column":5,"nodeType":"538","endLine":31,"endColumn":7,"suggestions":"539"},{"ruleId":"517","severity":1,"message":"525","line":2,"column":16,"nodeType":"519","messageId":"520","endLine":2,"endColumn":27},{"ruleId":"517","severity":1,"message":"535","line":4,"column":10,"nodeType":"519","messageId":"520","endLine":4,"endColumn":19},{"ruleId":"517","severity":1,"message":"540","line":7,"column":8,"nodeType":"519","messageId":"520","endLine":7,"endColumn":21},{"ruleId":"517","severity":1,"message":"541","line":9,"column":8,"nodeType":"519","messageId":"520","endLine":9,"endColumn":19},{"ruleId":"517","severity":1,"message":"542","line":16,"column":10,"nodeType":"519","messageId":"520","endLine":16,"endColumn":15},{"ruleId":"517","severity":1,"message":"543","line":18,"column":8,"nodeType":"519","messageId":"520","endLine":18,"endColumn":20},{"ruleId":"517","severity":1,"message":"544","line":31,"column":10,"nodeType":"519","messageId":"520","endLine":31,"endColumn":23},{"ruleId":"517","severity":1,"message":"545","line":31,"column":25,"nodeType":"519","messageId":"520","endLine":31,"endColumn":39},{"ruleId":"517","severity":1,"message":"546","line":44,"column":49,"nodeType":"519","messageId":"520","endLine":44,"endColumn":54},{"ruleId":"517","severity":1,"message":"526","line":2,"column":17,"nodeType":"519","messageId":"520","endLine":2,"endColumn":26},{"ruleId":"517","severity":1,"message":"521","line":2,"column":28,"nodeType":"519","messageId":"520","endLine":2,"endColumn":36},{"ruleId":"517","severity":1,"message":"547","line":8,"column":8,"nodeType":"519","messageId":"520","endLine":8,"endColumn":17},{"ruleId":"517","severity":1,"message":"548","line":2,"column":10,"nodeType":"519","messageId":"520","endLine":2,"endColumn":20},{"ruleId":"517","severity":1,"message":"521","line":2,"column":40,"nodeType":"519","messageId":"520","endLine":2,"endColumn":48},{"ruleId":"517","severity":1,"message":"549","line":6,"column":8,"nodeType":"519","messageId":"520","endLine":6,"endColumn":20},{"ruleId":"517","severity":1,"message":"550","line":7,"column":10,"nodeType":"519","messageId":"520","endLine":7,"endColumn":27},{"ruleId":"517","severity":1,"message":"551","line":7,"column":29,"nodeType":"519","messageId":"520","endLine":7,"endColumn":45},{"ruleId":"517","severity":1,"message":"552","line":7,"column":47,"nodeType":"519","messageId":"520","endLine":7,"endColumn":70},{"ruleId":"517","severity":1,"message":"528","line":18,"column":13,"nodeType":"519","messageId":"520","endLine":18,"endColumn":25},{"ruleId":"517","severity":1,"message":"522","line":19,"column":13,"nodeType":"519","messageId":"520","endLine":19,"endColumn":21},{"ruleId":"517","severity":1,"message":"553","line":19,"column":23,"nodeType":"519","messageId":"520","endLine":19,"endColumn":38},{"ruleId":"536","severity":1,"message":"554","line":37,"column":8,"nodeType":"538","endLine":37,"endColumn":10,"suggestions":"555"},{"ruleId":"517","severity":1,"message":"521","line":2,"column":10,"nodeType":"519","messageId":"520","endLine":2,"endColumn":18},{"ruleId":"536","severity":1,"message":"554","line":36,"column":8,"nodeType":"538","endLine":36,"endColumn":10,"suggestions":"556"},{"ruleId":"517","severity":1,"message":"557","line":4,"column":8,"nodeType":"519","messageId":"520","endLine":4,"endColumn":22},{"ruleId":"517","severity":1,"message":"558","line":16,"column":11,"nodeType":"519","messageId":"520","endLine":16,"endColumn":23},{"ruleId":"517","severity":1,"message":"559","line":17,"column":25,"nodeType":"519","messageId":"520","endLine":17,"endColumn":39},{"ruleId":"513","replacedBy":"560"},{"ruleId":"515","replacedBy":"561"},{"ruleId":"517","severity":1,"message":"562","line":1,"column":10,"nodeType":"519","messageId":"520","endLine":1,"endColumn":16},{"ruleId":"517","severity":1,"message":"534","line":2,"column":10,"nodeType":"519","messageId":"520","endLine":2,"endColumn":19},{"ruleId":"517","severity":1,"message":"563","line":3,"column":10,"nodeType":"519","messageId":"520","endLine":3,"endColumn":23},{"ruleId":"517","severity":1,"message":"535","line":1,"column":10,"nodeType":"519","messageId":"520","endLine":1,"endColumn":19},{"ruleId":"517","severity":1,"message":"564","line":2,"column":10,"nodeType":"519","messageId":"520","endLine":2,"endColumn":14},{"ruleId":"517","severity":1,"message":"527","line":3,"column":10,"nodeType":"519","messageId":"520","endLine":3,"endColumn":14},{"ruleId":"517","severity":1,"message":"565","line":16,"column":8,"nodeType":"519","messageId":"520","endLine":16,"endColumn":21},{"ruleId":"517","severity":1,"message":"566","line":29,"column":13,"nodeType":"519","messageId":"520","endLine":29,"endColumn":26},{"ruleId":"536","severity":1,"message":"567","line":54,"column":8,"nodeType":"538","endLine":54,"endColumn":29,"suggestions":"568"},{"ruleId":"517","severity":1,"message":"569","line":7,"column":8,"nodeType":"519","messageId":"520","endLine":7,"endColumn":28},{"ruleId":"517","severity":1,"message":"570","line":19,"column":11,"nodeType":"519","messageId":"520","endLine":19,"endColumn":17},{"ruleId":"517","severity":1,"message":"564","line":1,"column":10,"nodeType":"519","messageId":"520","endLine":1,"endColumn":14},{"ruleId":"517","severity":1,"message":"571","line":7,"column":8,"nodeType":"519","messageId":"520","endLine":7,"endColumn":16},{"ruleId":"536","severity":1,"message":"572","line":20,"column":2,"nodeType":"519","endLine":20,"endColumn":11,"suggestions":"573"},{"ruleId":"536","severity":1,"message":"574","line":17,"column":8,"nodeType":"538","endLine":17,"endColumn":10,"suggestions":"575"},{"ruleId":"517","severity":1,"message":"521","line":1,"column":17,"nodeType":"519","messageId":"520","endLine":1,"endColumn":25},{"ruleId":"517","severity":1,"message":"576","line":1,"column":10,"nodeType":"519","messageId":"520","endLine":1,"endColumn":15},{"ruleId":"517","severity":1,"message":"564","line":2,"column":10,"nodeType":"519","messageId":"520","endLine":2,"endColumn":14},{"ruleId":"517","severity":1,"message":"526","line":4,"column":17,"nodeType":"519","messageId":"520","endLine":4,"endColumn":26},{"ruleId":"517","severity":1,"message":"521","line":4,"column":36,"nodeType":"519","messageId":"520","endLine":4,"endColumn":44},{"ruleId":"517","severity":1,"message":"577","line":25,"column":13,"nodeType":"519","messageId":"520","endLine":25,"endColumn":22},{"ruleId":"517","severity":1,"message":"578","line":26,"column":13,"nodeType":"519","messageId":"520","endLine":26,"endColumn":25},{"ruleId":"517","severity":1,"message":"566","line":27,"column":13,"nodeType":"519","messageId":"520","endLine":27,"endColumn":26},{"ruleId":"517","severity":1,"message":"579","line":35,"column":22,"nodeType":"519","messageId":"520","endLine":35,"endColumn":30},{"ruleId":"517","severity":1,"message":"580","line":35,"column":32,"nodeType":"519","messageId":"520","endLine":35,"endColumn":46},{"ruleId":"517","severity":1,"message":"581","line":35,"column":48,"nodeType":"519","messageId":"520","endLine":35,"endColumn":57},{"ruleId":"517","severity":1,"message":"526","line":2,"column":17,"nodeType":"519","messageId":"520","endLine":2,"endColumn":26},{"ruleId":"517","severity":1,"message":"582","line":10,"column":16,"nodeType":"519","messageId":"520","endLine":10,"endColumn":28},{"ruleId":"517","severity":1,"message":"583","line":2,"column":8,"nodeType":"519","messageId":"520","endLine":2,"endColumn":19},{"ruleId":"517","severity":1,"message":"584","line":3,"column":8,"nodeType":"519","messageId":"520","endLine":3,"endColumn":17},{"ruleId":"517","severity":1,"message":"585","line":1,"column":10,"nodeType":"519","messageId":"520","endLine":1,"endColumn":21},{"ruleId":"517","severity":1,"message":"586","line":6,"column":8,"nodeType":"519","messageId":"520","endLine":6,"endColumn":18},{"ruleId":"517","severity":1,"message":"587","line":18,"column":50,"nodeType":"519","messageId":"520","endLine":18,"endColumn":64},{"ruleId":"517","severity":1,"message":"588","line":18,"column":66,"nodeType":"519","messageId":"520","endLine":18,"endColumn":75},{"ruleId":"517","severity":1,"message":"522","line":19,"column":17,"nodeType":"519","messageId":"520","endLine":19,"endColumn":25},{"ruleId":"536","severity":1,"message":"589","line":29,"column":12,"nodeType":"538","endLine":29,"endColumn":14,"suggestions":"590"},{"ruleId":"536","severity":1,"message":"591","line":42,"column":12,"nodeType":"538","endLine":42,"endColumn":30,"suggestions":"592"},{"ruleId":"517","severity":1,"message":"526","line":2,"column":17,"nodeType":"519","messageId":"520","endLine":2,"endColumn":26},{"ruleId":"517","severity":1,"message":"593","line":2,"column":28,"nodeType":"519","messageId":"520","endLine":2,"endColumn":34},{"ruleId":"517","severity":1,"message":"521","line":2,"column":36,"nodeType":"519","messageId":"520","endLine":2,"endColumn":44},{"ruleId":"517","severity":1,"message":"557","line":3,"column":8,"nodeType":"519","messageId":"520","endLine":3,"endColumn":22},{"ruleId":"517","severity":1,"message":"594","line":12,"column":23,"nodeType":"519","messageId":"520","endLine":12,"endColumn":35},{"ruleId":"595","severity":1,"message":"596","line":62,"column":25,"nodeType":"597","endLine":62,"endColumn":68},{"ruleId":"595","severity":1,"message":"598","line":67,"column":25,"nodeType":"597","endLine":67,"endColumn":77},{"ruleId":"517","severity":1,"message":"564","line":1,"column":10,"nodeType":"519","messageId":"520","endLine":1,"endColumn":14},{"ruleId":"517","severity":1,"message":"599","line":13,"column":63,"nodeType":"519","messageId":"520","endLine":13,"endColumn":68},{"ruleId":"517","severity":1,"message":"599","line":25,"column":63,"nodeType":"519","messageId":"520","endLine":25,"endColumn":68},{"ruleId":"517","severity":1,"message":"600","line":1,"column":17,"nodeType":"519","messageId":"520","endLine":1,"endColumn":30},{"ruleId":"517","severity":1,"message":"521","line":1,"column":51,"nodeType":"519","messageId":"520","endLine":1,"endColumn":59},{"ruleId":"536","severity":1,"message":"601","line":38,"column":19,"nodeType":"519","endLine":38,"endColumn":26},{"ruleId":"536","severity":1,"message":"602","line":42,"column":5,"nodeType":"538","endLine":42,"endColumn":7,"suggestions":"603"},{"ruleId":"604","severity":1,"message":"605","line":24,"column":29,"nodeType":"606","messageId":"607","endLine":24,"endColumn":31},{"ruleId":"517","severity":1,"message":"564","line":1,"column":10,"nodeType":"519","messageId":"520","endLine":1,"endColumn":14},{"ruleId":"517","severity":1,"message":"526","line":3,"column":17,"nodeType":"519","messageId":"520","endLine":3,"endColumn":26},{"ruleId":"517","severity":1,"message":"593","line":3,"column":28,"nodeType":"519","messageId":"520","endLine":3,"endColumn":34},{"ruleId":"517","severity":1,"message":"521","line":3,"column":36,"nodeType":"519","messageId":"520","endLine":3,"endColumn":44},{"ruleId":"604","severity":1,"message":"605","line":29,"column":29,"nodeType":"606","messageId":"607","endLine":29,"endColumn":31},{"ruleId":"536","severity":1,"message":"608","line":40,"column":8,"nodeType":"538","endLine":40,"endColumn":10,"suggestions":"609"},{"ruleId":"536","severity":1,"message":"610","line":48,"column":8,"nodeType":"538","endLine":48,"endColumn":81,"suggestions":"611"},{"ruleId":"536","severity":1,"message":"612","line":55,"column":8,"nodeType":"538","endLine":55,"endColumn":23,"suggestions":"613"},{"ruleId":"614","severity":1,"message":"615","line":76,"column":50,"nodeType":"616","messageId":"617","endLine":76,"endColumn":52},{"ruleId":"614","severity":1,"message":"615","line":76,"column":63,"nodeType":"616","messageId":"617","endLine":76,"endColumn":65},{"ruleId":"517","severity":1,"message":"526","line":2,"column":17,"nodeType":"519","messageId":"520","endLine":2,"endColumn":26},{"ruleId":"517","severity":1,"message":"618","line":20,"column":12,"nodeType":"519","messageId":"520","endLine":20,"endColumn":17},{"ruleId":"517","severity":1,"message":"619","line":20,"column":19,"nodeType":"519","messageId":"520","endLine":20,"endColumn":27},{"ruleId":"517","severity":1,"message":"521","line":2,"column":28,"nodeType":"519","messageId":"520","endLine":2,"endColumn":36},{"ruleId":"536","severity":1,"message":"620","line":28,"column":8,"nodeType":"538","endLine":28,"endColumn":39,"suggestions":"621"},{"ruleId":"536","severity":1,"message":"620","line":25,"column":8,"nodeType":"538","endLine":25,"endColumn":10,"suggestions":"622"},{"ruleId":"536","severity":1,"message":"620","line":27,"column":8,"nodeType":"538","endLine":27,"endColumn":10,"suggestions":"623"},"no-native-reassign",["624"],"no-negated-in-lhs",["625"],"@typescript-eslint/no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'isMobile' is assigned a value but never used.","'isSearchShown' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'useLocation' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'headerHeight' is assigned a value but never used.","'searchBarHeight' is assigned a value but never used.","'LinksList' is defined but never used.","'ArrowIcon' is defined but never used.","'isCategoriesListShown' is assigned a value but never used.","'isBrandsListShown' is assigned a value but never used.","'ICategory' is defined but never used.","'IItemData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'apiService' and 'responseData'. Either include them or remove the dependency array.","ArrayExpression",["626"],"'ProductSlider' is defined but never used.","'ColorSelect' is defined but never used.","'width' is defined but never used.","'MemorySelect' is defined but never used.","'selectedColor' is assigned a value but never used.","'selectedMemory' is assigned a value but never used.","'brand' is assigned a value but never used.","'LogoImage' is defined but never used.","'JsxElement' is defined but never used.","'SearchBarBtn' is defined but never used.","'disableBodyScroll' is defined but never used.","'enableBodyScroll' is defined but never used.","'clearAllBodyScrollLocks' is defined but never used.","'scrollYPosition' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'headerRef'. Either include it or remove the dependency array.",["627"],["628"],"'PageWidthState' is defined but never used.","'linksListRef' is assigned a value but never used.","'setIsListShown' is assigned a value but never used.",["624"],["625"],"'Button' is defined but never used.","'IResponseData' is defined but never used.","'toJS' is defined but never used.","'ItemDataState' is defined but never used.","'itemCardWidth' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'responseData' and 'sectionName'. Either include them or remove the dependency array.",["629"],"'FiltersSettingsState' is defined but never used.","'goBack' is assigned a value but never used.","'CloseBtn' is defined but never used.","React Hook useEffect contains a call to 'setIsItemInCart'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cartItems, item.id] as a second argument to the useEffect Hook.",["630"],"React Hook useEffect has a missing dependency: 'rating'. Either include it or remove the dependency array. If 'setRatingPercentage' needs the current value of 'rating', you can also switch to useReducer instead of useState and read 'rating' in the reducer.",["631"],"'spawn' is defined but never used.","'cartItems' is assigned a value but never used.","'responseData' is assigned a value but never used.","'discount' is assigned a value but never used.","'discountAmount' is assigned a value but never used.","'fullPrice' is assigned a value but never used.","'selectValues' is assigned a value but never used.","'CatalogLink' is defined but never used.","'EmptyCart' is defined but never used.","'addUserToDB' is defined but never used.","'ToItemLink' is defined but never used.","'isResultsShown' is assigned a value but never used.","'isFocused' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'outsideSearchClick'. Either include it or remove the dependency array.",["632"],"React Hook useEffect has a missing dependency: 'responseData'. Either include it or remove the dependency array.",["633"],"'useRef' is defined but never used.","'userPassword' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'count' is assigned a value but never used.","'ReactFragment' is defined but never used.","The ref value 'filtersRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'filtersRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'isMobile'. Either include it or remove the dependency array.",["634"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'apiService'. Either include it or remove the dependency array.",["635"],"React Hook useEffect has a missing dependency: 'itemsToShow'. Either include it or remove the dependency array.",["636"],"React Hook useEffect has a missing dependency: 'itemsToShow'. Either include it or remove the dependency array. You can also do a functional update 'setItemsToShow(i => ...)' if you only need 'itemsToShow' in the 'setItemsToShow' call.",["637"],"no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'arrow' is assigned a value but never used.","'setArrow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product.title' and 'responseData'. Either include them or remove the dependency array.",["638"],["639"],["640"],"no-global-assign","no-unsafe-negation",{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"643","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"658","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"666","fix":"668"},"Update the dependencies array to be: [apiService, responseData]",{"range":"669","text":"670"},"Update the dependencies array to be: [headerRef]",{"range":"671","text":"672"},{"range":"673","text":"672"},"Update the dependencies array to be: [responseData, responseData?.items, sectionName]",{"range":"674","text":"675"},"Add dependencies array: [cartItems, item.id]",{"range":"676","text":"677"},"Update the dependencies array to be: [rating]",{"range":"678","text":"679"},"Update the dependencies array to be: [outsideSearchClick]",{"range":"680","text":"681"},"Update the dependencies array to be: [responseData, searchInputValue]",{"range":"682","text":"683"},"Update the dependencies array to be: [isMobile]",{"range":"684","text":"685"},"Update the dependencies array to be: [apiService]",{"range":"686","text":"687"},"Update the dependencies array to be: [selectedCategories, selectedBrands, priceRange, isAvailable, isDiscount, itemsToShow]",{"range":"688","text":"689"},"Update the dependencies array to be: [itemsToShow, sortingByType]",{"range":"690","text":"691"},"Update the dependencies array to be: [product.title, responseData, selectedColor, selectedMemory]",{"range":"692","text":"693"},"Update the dependencies array to be: [product.title, responseData]",{"range":"694","text":"695"},{"range":"696","text":"695"},[851,853],"[apiService, responseData]",[1384,1386],"[headerRef]",[1138,1140],[1861,1882],"[responseData, responseData?.items, sectionName]",[826,826],", [cartItems, item.id]",[528,530],"[rating]",[1262,1264],"[outsideSearchClick]",[1785,1803],"[responseData, searchInputValue]",[1305,1307],"[isMobile]",[1724,1726],"[apiService]",[1910,1983],"[selectedCategories, selectedBrands, priceRange, isAvailable, isDiscount, itemsToShow]",[2150,2165],"[itemsToShow, sortingByType]",[1067,1098],"[product.title, responseData, selectedColor, selectedMemory]",[887,889],"[product.title, responseData]",[913,915]]