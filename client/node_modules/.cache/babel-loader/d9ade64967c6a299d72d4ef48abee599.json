{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Product\\\\ProductSelects\\\\ColorSelect\\\\ColorSelect.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport ProductSelectsState from \"../../../../store/ProductSelectsState\";\nimport ResponseDataState from \"../../../../store/ResponseDataState\";\nimport { setColorName } from \"../../../../Utils/setColorName\";\nimport \"./ColorSelect.scss\";\nimport ItemDataState from \"../../../../store/ItemDataState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorSelect = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    product\n  } = _ref;\n  const {\n    responseData\n  } = ResponseDataState;\n  const {\n    itemData,\n    urlName\n  } = ItemDataState;\n  const [colorsList, setColorsList] = useState([]);\n  const {\n    id,\n    color,\n    title\n  } = product;\n  useEffect(() => {\n    let colors = [];\n    responseData && responseData.items.forEach(item => {\n      if (title === item.title && !colors.includes(item.color)) {\n        colors.push(item.color);\n      }\n    });\n    setColorsList(colors);\n    ProductSelectsState.setSelectedColor(product.color);\n  }, [itemData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"color-select__colors-title\",\n      children: \"\\u0426\\u0432\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"color-select__colors-list\",\n      children: colorsList.map(colorItem => {\n        const colorName = setColorName(colorItem);\n        const btnColor = {\n          backgroundColor: `${colorName}`\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: colorItem === product.color ? \"color-select__color-wrap color-select__color-wrap--active\" : \"color-select__color-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: color === colorItem ? \"color-select__color-btn color-select__color-btn--active\" : \"color-select__color-btn\",\n            style: btnColor,\n            type: \"button\",\n            onClick: () => colorsList.length > 1 && ProductSelectsState.setSelectedColor(colorItem),\n            disabled: colorsList.length <= 1 ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}, \"txMIAsmn4s33yruM+JI7J2CdWKo=\"));\n_c2 = ColorSelect;\nexport default ColorSelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColorSelect$observer\");\n$RefreshReg$(_c2, \"ColorSelect\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Product/ProductSelects/ColorSelect/ColorSelect.tsx"],"names":["React","useEffect","useState","observer","ProductSelectsState","ResponseDataState","setColorName","ItemDataState","ColorSelect","product","responseData","itemData","urlName","colorsList","setColorsList","id","color","title","colors","items","forEach","item","includes","push","setSelectedColor","map","colorItem","colorName","btnColor","backgroundColor","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAO,oBAAP;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;AAEA,MAAMC,WAAW,GAAGL,QAAQ,SAAC,QAAyC;AAAA;;AAAA,MAAxC;AAAEM,IAAAA;AAAF,GAAwC;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAmBL,iBAAzB;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBL,aAA9B;AAEA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAW,EAAX,CAA5C;AAEA,QAAM;AAAEa,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,MAAuBR,OAA7B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,MAAgB,GAAG,EAAvB;AAEAR,IAAAA,YAAY,IACRA,YAAY,CAACS,KAAb,CAAmBC,OAAnB,CAA4BC,IAAD,IAAqB;AAC5C,UAAIJ,KAAK,KAAKI,IAAI,CAACJ,KAAf,IAAwB,CAACC,MAAM,CAACI,QAAP,CAAgBD,IAAI,CAACL,KAArB,CAA7B,EAA0D;AACtDE,QAAAA,MAAM,CAACK,IAAP,CAAYF,IAAI,CAACL,KAAjB;AACH;AACJ,KAJD,CADJ;AAMAF,IAAAA,aAAa,CAACI,MAAD,CAAb;AACAd,IAAAA,mBAAmB,CAACoB,gBAApB,CAAqCf,OAAO,CAACO,KAA7C;AACH,GAXQ,EAWN,CAACL,QAAD,CAXM,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,2BAAd;AAAA,gBACKE,UAAU,CAACY,GAAX,CAAgBC,SAAD,IAAuB;AACnC,cAAMC,SAAS,GAAGrB,YAAY,CAACoB,SAAD,CAA9B;AAEA,cAAME,QAAQ,GAAG;AACbC,UAAAA,eAAe,EAAG,GAAEF,SAAU;AADjB,SAAjB;AAIA,4BACI;AACI,UAAA,SAAS,EACLD,SAAS,KAAKjB,OAAO,CAACO,KAAtB,GACM,2DADN,GAEM,0BAJd;AAAA,iCAOI;AACI,YAAA,SAAS,EACLA,KAAK,KAAKU,SAAV,GACM,yDADN,GAEM,yBAJd;AAMI,YAAA,KAAK,EAAEE,QANX;AAOI,YAAA,IAAI,EAAC,QAPT;AAQI,YAAA,OAAO,EAAE,MAAMf,UAAU,CAACiB,MAAX,GAAoB,CAApB,IAAyB1B,mBAAmB,CAACoB,gBAApB,CAAqCE,SAArC,CAR5C;AASI,YAAA,QAAQ,EAAEb,UAAU,CAACiB,MAAX,IAAqB,CAArB,GAAyB,IAAzB,GAAgC;AAT9C;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAqBH,OA5BA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CAzD2B,kCAA5B;MAAMtB,W;AA2DN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { IItemData } from \"../../../../interfaces/IItemData\";\r\nimport ProductSelectsState from \"../../../../store/ProductSelectsState\";\r\nimport ResponseDataState from \"../../../../store/ResponseDataState\";\r\nimport { setColorName } from \"../../../../Utils/setColorName\";\r\nimport \"./ColorSelect.scss\";\r\nimport ItemDataState from \"../../../../store/ItemDataState\";\r\n\r\nconst ColorSelect = observer(({ product }: { product: IItemData }) => {\r\n    const { responseData } = ResponseDataState;\r\n    const { itemData, urlName } = ItemDataState;\r\n\r\n    const [colorsList, setColorsList] = useState<string[]>([]);\r\n\r\n    const { id, color, title } = product;\r\n\r\n    useEffect(() => {\r\n        let colors: string[] = [];\r\n\r\n        responseData &&\r\n            responseData.items.forEach((item: IItemData) => {\r\n                if (title === item.title && !colors.includes(item.color)) {\r\n                    colors.push(item.color);\r\n                }\r\n            });\r\n        setColorsList(colors);\r\n        ProductSelectsState.setSelectedColor(product.color);\r\n    }, [itemData]);\r\n\r\n    return (\r\n        <div className=\"color-select\">\r\n            <h3 className=\"color-select__colors-title\">Цвет</h3>\r\n            <ul className=\"color-select__colors-list\">\r\n                {colorsList.map((colorItem: string) => {\r\n                    const colorName = setColorName(colorItem);\r\n\r\n                    const btnColor = {\r\n                        backgroundColor: `${colorName}`,\r\n                    };\r\n\r\n                    return (\r\n                        <li\r\n                            className={\r\n                                colorItem === product.color\r\n                                    ? \"color-select__color-wrap color-select__color-wrap--active\"\r\n                                    : \"color-select__color-wrap\"\r\n                            }\r\n                        >\r\n                            <button\r\n                                className={\r\n                                    color === colorItem\r\n                                        ? \"color-select__color-btn color-select__color-btn--active\"\r\n                                        : \"color-select__color-btn\"\r\n                                }\r\n                                style={btnColor}\r\n                                type=\"button\"\r\n                                onClick={() => colorsList.length > 1 && ProductSelectsState.setSelectedColor(colorItem)}\r\n                                disabled={colorsList.length <= 1 ? true : false}\r\n                            ></button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ColorSelect;\r\n"]},"metadata":{},"sourceType":"module"}