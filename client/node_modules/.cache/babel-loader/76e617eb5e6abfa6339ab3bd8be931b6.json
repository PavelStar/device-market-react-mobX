{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\pages\\\\CatalogPage\\\\CatalogPage.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport ApiService from \"../../API/ApiService\";\nimport FiltersPanel from \"../../components/FiltersPanel/FiltersPanel\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport ItemsFoundCounter from \"../../components/ItemsFoundCounter/ItemsFoundCounter\"; // import { useFetchData } from './../../hooks/useFetchData'\n\nimport \"./CatalogPage.scss\";\nimport { useFetchData } from \"../../hooks/useFetchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CatalogPage = observer(_c = _s2(() => {\n  var _s = $RefreshSig$();\n\n  _s2();\n\n  const apiService = new ApiService();\n  const {\n    responseData\n  } = ResponseDataState;\n  const {\n    isMobile\n  } = PageWidthState;\n  const [isFiltersPanelShown, setIsFiltersPanelShown] = useState(false);\n  const filtersWrapRef = useRef(null); // const [data, isLoading, error] = useFetchData()\n\n  console.log(\"catalog page\");\n  useEffect(_s(() => {\n    _s();\n\n    // if (!responseData?.items) {\n    //     apiService.getData().then((data) => {\n    //         ResponseDataState.setResponseData(data);\n    //     });\n    // }\n    // console.log(data)\n    useFetchData();\n  }, \"Q3T5A8NiIhI7s8YX0md0bBb7p/8=\", false, function () {\n    return [useFetchData];\n  }), []);\n\n  const showFilters = () => {// setIsFiltersPanelShown(!isFiltersPanelShown);\n  };\n\n  const testHookFn = () => {\n    console.log('first');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testHookFn,\n      children: \"1111\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), false ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catalog-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ItemsFoundCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catalog-page__inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog-page__filters-wrap\",\n          ref: filtersWrapRef,\n          children: !isMobile || isFiltersPanelShown ? /*#__PURE__*/_jsxDEV(FiltersPanel, {\n            showFilters: showFilters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 65\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : 'loading...']\n  }, void 0, true);\n}, \"ynwSwndb2qIKqoC8PcglFj0CV88=\"));\n_c2 = CatalogPage;\nexport default CatalogPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CatalogPage$observer\");\n$RefreshReg$(_c2, \"CatalogPage\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/pages/CatalogPage/CatalogPage.tsx"],"names":["useEffect","useRef","useState","observer","ResponseDataState","ApiService","FiltersPanel","PageWidthState","ItemsFoundCounter","useFetchData","CatalogPage","apiService","responseData","isMobile","isFiltersPanelShown","setIsFiltersPanelShown","filtersWrapRef","console","log","showFilters","testHookFn"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,OAAOC,iBAAP,MAA8B,sDAA9B,C,CACA;;AACA,OAAO,oBAAP;AACA,SAASC,YAAT,QAA6B,0BAA7B;;;AAEA,MAAMC,WAAW,GAAGP,QAAQ,UAAC,MAAM;AAAA;;AAAA;;AAC/B,QAAMQ,UAAU,GAAG,IAAIN,UAAJ,EAAnB;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAmBR,iBAAzB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAeN,cAArB;AAEA,QAAM,CAACO,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,KAAD,CAA9D;AAEA,QAAMc,cAAc,GAAGf,MAAM,CAAC,IAAD,CAA7B,CAR+B,CAU/B;;AAEAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAlB,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACZ;AACA;AACA;AACA;AACA;AAEA;AACAS,IAAAA,YAAY;AACf,GATQ;AAAA,YAQLA,YARK;AAAA,MASN,EATM,CAAT;;AAWA,QAAMU,WAAW,GAAG,MAAM,CACtB;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,qBACG;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,4BAAf;AAA4C,UAAA,GAAG,EAAEJ,cAAjD;AAAA,oBACK,CAACH,QAAD,IAAaC,mBAAb,gBAAmC,QAAC,YAAD;AAAc,YAAA,WAAW,EAAEK;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAAnC,GAAgF;AADrF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAYG,YAdR;AAAA,kBADJ;AAkBH,CAnD2B,kCAA5B;MAAMT,W;AAqDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport ApiService from \"../../API/ApiService\";\nimport FiltersPanel from \"../../components/FiltersPanel/FiltersPanel\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport ResultsBlock from \"../../components/ResultsBlock/ResultsBlock\";\nimport ItemsFoundCounter from \"../../components/ItemsFoundCounter/ItemsFoundCounter\";\n// import { useFetchData } from './../../hooks/useFetchData'\nimport \"./CatalogPage.scss\";\nimport { useFetchData } from \"../../hooks/useFetchData\";\n\nconst CatalogPage = observer(() => {\n    const apiService = new ApiService();\n\n    const { responseData } = ResponseDataState;\n    const { isMobile } = PageWidthState;\n\n    const [isFiltersPanelShown, setIsFiltersPanelShown] = useState(false);\n\n    const filtersWrapRef = useRef(null);\n\n    // const [data, isLoading, error] = useFetchData()\n\n    console.log(\"catalog page\");\n\n    useEffect(() => {\n        // if (!responseData?.items) {\n        //     apiService.getData().then((data) => {\n        //         ResponseDataState.setResponseData(data);\n        //     });\n        // }\n\n        // console.log(data)\n        useFetchData()\n    }, []);\n\n    const showFilters = () => {\n        // setIsFiltersPanelShown(!isFiltersPanelShown);\n    };\n\n    const testHookFn = () => {\n        console.log('first')\n    }\n\n    return (\n        <>\n            <button onClick={testHookFn}>1111</button>\n            {false ? (\n                <div className=\"catalog-page\">\n                    <h1>Каталог</h1>\n                    <ItemsFoundCounter />\n                    <div className=\"catalog-page__inner\">\n                        <div className=\"catalog-page__filters-wrap\" ref={filtersWrapRef}>\n                            {!isMobile || isFiltersPanelShown ? <FiltersPanel showFilters={showFilters} /> : null}\n                        </div>\n\n                        {/* <ResultsBlock responseItems={responseData.items} /> */}\n                    </div>\n                </div>\n            ) : 'loading...'}\n        </>\n    );\n});\n\nexport default CatalogPage;\n"]},"metadata":{},"sourceType":"module"}