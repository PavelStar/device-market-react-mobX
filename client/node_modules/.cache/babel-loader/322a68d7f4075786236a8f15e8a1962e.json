{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nexport const useFetchData = () => {\n  _s();\n\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(true); // const [error, setError] = useState();\n\n  const url = \"https://mocki.io/v1/1e73398f-6067-486c-b37c-415136f22756\";\n  useEffect(() => {\n    const fetching = async () => {\n      try {\n        setIsLoading(false);\n        const res = await axios.get(url);\n        setData(res.data);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(true);\n      }\n    };\n\n    fetching();\n  }, []);\n  return [data, isLoading];\n};\n\n_s(useFetchData, \"F4+y+PdBH0JeHJ0UGrN68qx0cH0=\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/hooks/useFetchData.ts"],"names":["axios","useEffect","useState","useFetchData","data","setData","isLoading","setIsLoading","url","fetching","res","get","e","console","log","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,EAAhC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C,CAFiC,CAGjC;;AACA,QAAMM,GAAW,GAAG,0DAApB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMQ,QAAQ,GAAG,YAAY;AAC5B,UAAI;AACHF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,cAAMG,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUH,GAAV,CAAlB;AACAH,QAAAA,OAAO,CAACK,GAAG,CAACN,IAAL,CAAP;AACA,OAJD,CAIE,OAAOQ,CAAP,EAAe;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACA,OAND,SAMU;AACTR,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD,KAVD;;AAYAE,IAAAA,QAAQ;AACR,GAdQ,EAcN,EAdM,CAAT;AAgBA,SAAO,CAACL,IAAD,EAAOE,SAAP,CAAP;AACA,CAvBM;;GAAMH,Y","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IResponseData } from \"../interfaces/IResponseData\";\r\n\r\nexport const useFetchData = () => {\r\n\tconst [data, setData] = useState();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\t// const [error, setError] = useState();\r\n\tconst url: string = \"https://mocki.io/v1/1e73398f-6067-486c-b37c-415136f22756\";\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetching = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tconst res = await axios.get(url);\r\n\t\t\t\tsetData(res.data);\r\n\t\t\t} catch (e: any) {\r\n\t\t\t\tconsole.log(e.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading(true);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetching();\r\n\t}, []);\r\n\r\n\treturn [data, isLoading];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}