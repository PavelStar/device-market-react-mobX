{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\pages\\\\CatalogPage\\\\CatalogPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport ApiService from \"../../API/ApiService\";\nimport FiltersPanel from \"../../components/FiltersPanel/FiltersPanel\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport ResultsBlock from \"../../components/ResultsBlock/ResultsBlock\";\nimport ItemsFoundCounter from \"../../components/ItemsFoundCounter/ItemsFoundCounter\";\nimport { useFetchData } from './../../hooks/useFetchData';\nimport \"./CatalogPage.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CatalogPage = observer(_c = _s(() => {\n  _s();\n\n  const apiService = new ApiService();\n  const {\n    responseData\n  } = ResponseDataState;\n  const {\n    isMobile\n  } = PageWidthState;\n  const [isFiltersPanelShown, setIsFiltersPanelShown] = useState(false);\n  const filtersWrapRef = useRef(null);\n  console.log(\"catalog page\");\n  useEffect(() => {\n    if (!(responseData === null || responseData === void 0 ? void 0 : responseData.items)) {\n      apiService.getData().then(data => {\n        ResponseDataState.setResponseData(data);\n      });\n    }\n\n    !responseData && useFetchData;\n  }, []);\n\n  const showFilters = () => {// setIsFiltersPanelShown(!isFiltersPanelShown);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: responseData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catalog-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ItemsFoundCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catalog-page__inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog-page__filters-wrap\",\n          ref: filtersWrapRef,\n          children: !isMobile || isFiltersPanelShown ? /*#__PURE__*/_jsxDEV(FiltersPanel, {\n            showFilters: showFilters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 65\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ResultsBlock, {\n          responseItems: responseData.items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : 'loading...'\n  }, void 0, false);\n}, \"ynwSwndb2qIKqoC8PcglFj0CV88=\"));\n_c2 = CatalogPage;\nexport default CatalogPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CatalogPage$observer\");\n$RefreshReg$(_c2, \"CatalogPage\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/pages/CatalogPage/CatalogPage.tsx"],"names":["useEffect","useRef","useState","observer","ResponseDataState","ApiService","FiltersPanel","PageWidthState","ResultsBlock","ItemsFoundCounter","useFetchData","CatalogPage","apiService","responseData","isMobile","isFiltersPanelShown","setIsFiltersPanelShown","filtersWrapRef","console","log","items","getData","then","data","setResponseData","showFilters"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,iBAAP,MAA8B,sDAA9B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAO,oBAAP;;;AAEA,MAAMC,WAAW,GAAGR,QAAQ,SAAC,MAAM;AAAA;;AAC/B,QAAMS,UAAU,GAAG,IAAIP,UAAJ,EAAnB;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAmBT,iBAAzB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeP,cAArB;AAEA,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,IAAgDd,QAAQ,CAAC,KAAD,CAA9D;AAEA,QAAMe,cAAc,GAAGhB,MAAM,CAAC,IAAD,CAA7B;AAIAiB,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,EAACa,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAEO,KAAf,CAAJ,EAA0B;AACtBR,MAAAA,UAAU,CAACS,OAAX,GAAqBC,IAArB,CAA2BC,IAAD,IAAU;AAChCnB,QAAAA,iBAAiB,CAACoB,eAAlB,CAAkCD,IAAlC;AACH,OAFD;AAGH;;AACD,KAACV,YAAD,IAAiBH,YAAjB;AACH,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMe,WAAW,GAAG,MAAM,CACtB;AACH,GAFD;;AAIA,sBACI;AAAA,cACKZ,YAAY,gBACT;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,4BAAf;AAA4C,UAAA,GAAG,EAAEI,cAAjD;AAAA,oBACK,CAACH,QAAD,IAAaC,mBAAb,gBAAmC,QAAC,YAAD;AAAc,YAAA,WAAW,EAAEU;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAAnC,GAAgF;AADrF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,YAAD;AAAc,UAAA,aAAa,EAAEZ,YAAY,CAACO;AAA1C;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,GAYT;AAbR,mBADJ;AAiBH,CA5C2B,kCAA5B;MAAMT,W;AA8CN,eAAeA,WAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport ApiService from \"../../API/ApiService\";\nimport FiltersPanel from \"../../components/FiltersPanel/FiltersPanel\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport ResultsBlock from \"../../components/ResultsBlock/ResultsBlock\";\nimport ItemsFoundCounter from \"../../components/ItemsFoundCounter/ItemsFoundCounter\";\nimport { useFetchData } from './../../hooks/useFetchData'\nimport \"./CatalogPage.scss\";\n\nconst CatalogPage = observer(() => {\n    const apiService = new ApiService();\n\n    const { responseData } = ResponseDataState;\n    const { isMobile } = PageWidthState;\n\n    const [isFiltersPanelShown, setIsFiltersPanelShown] = useState(false);\n\n    const filtersWrapRef = useRef(null);\n\n\n\n    console.log(\"catalog page\");\n\n    useEffect(() => {\n        if (!responseData?.items) {\n            apiService.getData().then((data) => {\n                ResponseDataState.setResponseData(data);\n            });\n        }\n        !responseData && useFetchData\n    }, []);\n\n    const showFilters = () => {\n        // setIsFiltersPanelShown(!isFiltersPanelShown);\n    };\n\n    return (\n        <>\n            {responseData ? (\n                <div className=\"catalog-page\">\n                    <h1>Каталог</h1>\n                    <ItemsFoundCounter />\n                    <div className=\"catalog-page__inner\">\n                        <div className=\"catalog-page__filters-wrap\" ref={filtersWrapRef}>\n                            {!isMobile || isFiltersPanelShown ? <FiltersPanel showFilters={showFilters} /> : null}\n                        </div>\n\n                        <ResultsBlock responseItems={responseData.items} />\n                    </div>\n                </div>\n            ) : 'loading...'}\n        </>\n    );\n});\n\nexport default CatalogPage;\n"]},"metadata":{},"sourceType":"module"}