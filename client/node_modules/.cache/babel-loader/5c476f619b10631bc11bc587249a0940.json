{"ast":null,"code":"import{observer}from\"mobx-react-lite\";import{useEffect,useRef}from\"react\";import SearchState from\"../../store/SearchState\";import SearchResultsList from\"./SearchResultsList/SearchResultsList\";import SearchField from\"./SearchField/SearchField\";import{clearAllBodyScrollLocks}from'body-scroll-lock';import PageWidthState from\"../../store/PageWidthState\";import CloseBtn from\"../svg/CloseBtn\";import\"./SearchBar.scss\";import{ScrollLockOnFixed}from\"../../Utils/ScrollLockOnFixed\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SearchBar=observer(function(_ref){var setIsNavShown=_ref.setIsNavShown,headerRef=_ref.headerRef;var searchBarRef=useRef(null);var searchInnerRef=useRef(null);var headerHeight=SearchState.headerHeight,isResultsShown=SearchState.isResultsShown;var isMobile=PageWidthState.isMobile,scrollYPosition=PageWidthState.scrollYPosition;var overlayRef=useRef(null);var onOverlayClick=function onOverlayClick(e){if(e.target===overlayRef.current){SearchState.setIsSearchShown(false);}};useEffect(function(){ScrollLockOnFixed(\"disabled\",headerRef);return function(){ScrollLockOnFixed(\"enabled\",headerRef);clearAllBodyScrollLocks();};},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"search-bar__overlay\",onClick:onOverlayClick,ref:overlayRef,children:/*#__PURE__*/_jsx(\"div\",{className:\"search-bar\",ref:searchBarRef,children:/*#__PURE__*/_jsx(\"div\",{className:\"search-bar__inner\",ref:searchInnerRef,children:/*#__PURE__*/_jsxs(\"div\",{className:\"search-bar__window\",children:[/*#__PURE__*/_jsx(SearchField,{}),isResultsShown&&/*#__PURE__*/_jsx(SearchResultsList,{searchInnerRef:searchInnerRef}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return SearchState.setIsSearchShown(false);},className:\"search-bar__close-btn\",children:/*#__PURE__*/_jsx(CloseBtn,{})})]})})})});});export default SearchBar;","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/SearchBar/SearchBar.tsx"],"names":["observer","useEffect","useRef","SearchState","SearchResultsList","SearchField","clearAllBodyScrollLocks","PageWidthState","CloseBtn","ScrollLockOnFixed","SearchBar","setIsNavShown","headerRef","searchBarRef","searchInnerRef","headerHeight","isResultsShown","isMobile","scrollYPosition","overlayRef","onOverlayClick","e","target","current","setIsSearchShown"],"mappings":"AAAA,OAASA,QAAT,KAAyB,iBAAzB,CACA,OAAoBC,SAApB,CAA+BC,MAA/B,KAAwD,OAAxD,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,uCAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CAEA,OAA8CC,uBAA9C,KAA6E,kBAA7E,CACA,MAAOC,CAAAA,cAAP,KAA2B,4BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,MAAO,kBAAP,CACA,OAASC,iBAAT,KAAkC,+BAAlC,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGV,QAAQ,CAAC,cAA2I,IAAxIW,CAAAA,aAAwI,MAAxIA,aAAwI,CAAzHC,SAAyH,MAAzHA,SAAyH,CAElK,GAAMC,CAAAA,YAAY,CAAGX,MAAM,CAAiB,IAAjB,CAA3B,CACA,GAAMY,CAAAA,cAAc,CAAGZ,MAAM,CAAiB,IAAjB,CAA7B,CAEA,GAAQa,CAAAA,YAAR,CAAyCZ,WAAzC,CAAQY,YAAR,CAAsBC,cAAtB,CAAyCb,WAAzC,CAAsBa,cAAtB,CACA,GAAQC,CAAAA,QAAR,CAAsCV,cAAtC,CAAQU,QAAR,CAAkBC,eAAlB,CAAsCX,cAAtC,CAAkBW,eAAlB,CAEA,GAAMC,CAAAA,UAAU,CAAGjB,MAAM,CAAC,IAAD,CAAzB,CAEA,GAAMkB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAY,CAC/B,GAAIA,CAAC,CAACC,MAAF,GAAaH,UAAU,CAACI,OAA5B,CAAqC,CACjCpB,WAAW,CAACqB,gBAAZ,CAA6B,KAA7B,EACH,CACJ,CAJD,CAQAvB,SAAS,CAAC,UAAM,CACZQ,iBAAiB,CAAC,UAAD,CAAaG,SAAb,CAAjB,CAEA,MAAO,WAAM,CACTH,iBAAiB,CAAC,SAAD,CAAYG,SAAZ,CAAjB,CACAN,uBAAuB,GAC1B,CAHD,CAIH,CAPQ,CAON,EAPM,CAAT,CAWA,mBACI,YAAK,SAAS,CAAC,qBAAf,CAAqC,OAAO,CAAEc,cAA9C,CAA8D,GAAG,CAAED,UAAnE,uBACI,YAAK,SAAS,CAAC,YAAf,CACI,GAAG,CAAEN,YADT,uBAGI,YAAK,SAAS,CAAC,mBAAf,CAAmC,GAAG,CAAEC,cAAxC,uBACI,aAAK,SAAS,CAAC,oBAAf,wBACI,KAAC,WAAD,IADJ,CAEME,cAAD,eACG,KAAC,iBAAD,EAAmB,cAAc,CAAEF,cAAnC,EAHR,cAOI,eAAQ,OAAO,CAAE,yBAAMX,CAAAA,WAAW,CAACqB,gBAAZ,CAA6B,KAA7B,CAAN,EAAjB,CAA4D,SAAS,CAAC,uBAAtE,uBAA8F,KAAC,QAAD,IAA9F,EAPJ,GADJ,EAHJ,EADJ,EADJ,CAoBH,CAjDyB,CAA1B,CAmDA,cAAed,CAAAA,SAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport { RefObject, useEffect, useRef, useState, } from \"react\";\nimport SearchState from \"../../store/SearchState\";\nimport SearchResultsList from \"./SearchResultsList/SearchResultsList\";\nimport SearchField from \"./SearchField/SearchField\";\nimport SearchBarBtn from \"./SearchBarBtn/SearchBarBtn\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport PageWidthState from \"../../store/PageWidthState\";\nimport CloseBtn from \"../svg/CloseBtn\";\nimport \"./SearchBar.scss\";\nimport { ScrollLockOnFixed } from \"../../Utils/ScrollLockOnFixed\";\n\nconst SearchBar = observer(({ setIsNavShown, headerRef }: { setIsNavShown?: React.Dispatch<React.SetStateAction<boolean>>, headerRef: RefObject<HTMLDivElement> }) => {\n\n    const searchBarRef = useRef<HTMLDivElement>(null);\n    const searchInnerRef = useRef<HTMLDivElement>(null);\n\n    const { headerHeight, isResultsShown } = SearchState;\n    const { isMobile, scrollYPosition } = PageWidthState;\n\n    const overlayRef = useRef(null)\n\n    const onOverlayClick = (e: any) => {\n        if (e.target === overlayRef.current) {\n            SearchState.setIsSearchShown(false)\n        }\n    }\n\n\n\n    useEffect(() => {\n        ScrollLockOnFixed(\"disabled\", headerRef)\n\n        return () => {\n            ScrollLockOnFixed(\"enabled\", headerRef)\n            clearAllBodyScrollLocks()\n        }\n    }, [])\n\n\n\n    return (\n        <div className=\"search-bar__overlay\" onClick={onOverlayClick} ref={overlayRef}>\n            <div className=\"search-bar\"\n                ref={searchBarRef}>\n\n                <div className=\"search-bar__inner\" ref={searchInnerRef}>\n                    <div className=\"search-bar__window\">\n                        <SearchField />\n                        {(isResultsShown) && (\n                            <SearchResultsList searchInnerRef={searchInnerRef} />\n\n                        )}\n                        {/* <button onClick={() => setIsNavShown && setIsNavShown(false)} className=\"search-bar__close-btn\"><CloseBtn /></button> */}\n                        <button onClick={() => SearchState.setIsSearchShown(false)} className=\"search-bar__close-btn\"><CloseBtn /></button>\n                    </div>\n                    {/* <SearchBarBtn /> */}\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}