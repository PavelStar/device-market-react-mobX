{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Product\\\\ProductSelects\\\\MemorySelect\\\\MemorySelect.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ResponseDataState from \"../../../../store/ResponseDataState\";\nimport ProductSelectsState from \"../../../../store/ProductSelectsState\";\nimport { observer } from \"mobx-react-lite\";\nimport { useNavigate } from \"react-router\";\nimport \"./MemorySelect.scss\";\nimport ItemDataState from \"../../../../store/ItemDataState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemorySelect = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    memoryList,\n    onSelectHandleChange\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    responseData\n  } = ResponseDataState;\n  const {\n    selectedColor,\n    selectedMemory,\n    selectedTitle\n  } = ProductSelectsState;\n  const {\n    itemData,\n    urlName\n  } = ItemDataState; // const [memoryList, setMemoryList] = useState<string[]>([]);\n  //     useEffect(() => {\n  //         if (responseData) {\n  // \n  //             let memories: string[] = [];\n  //             responseData.items.forEach((item: IItemData) => {\n  //                 if (product.title === item.title && product.color === item.color) {\n  //                     memories.push(item.features.memory);\n  //                 }\n  //             });\n  //             console.log(product.features.memory)\n  //             setMemoryList(memories);\n  // \n  // \n  // \n  //             showProduct(memories[0]);\n  // \n  // \n  //         }\n  //     }, [selectedColor]);\n  //     const showProduct = (memory: string) => {\n  //         let prevId = product.id;\n  //         let currentItem;\n  // \n  //         if (responseData) {\n  //             currentItem = responseData.items.find(\n  //                 (item) =>\n  //                     item.title === product.title && item.features.memory === memory && item.color === selectedColor\n  //             );\n  //         }\n  //         currentItem && prevId !== currentItem.id && navigate(`/item/${currentItem.id}`);\n  //     };\n  // const onHandleChange = (memory: string) => {\n  //     console.log(memory)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"memory-select__colors-title\",\n      children: \"\\u041E\\u0431\\u044A\\u0435\\u043C \\u043F\\u0430\\u043C\\u044F\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"memory-select__memory-list\",\n      children: itemData && memoryList.map(memory => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: itemData.features.memory === memory ? \"memory-select__memory-wrap memory-select__memory-wrap--active\" : \"memory-select__memory-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: itemData.features.memory === memory ? \"memory-select__memory-btn memory-select__memory-btn--active\" : \"memory-select__memory-btn\",\n            type: \"button\" // onClick={() => showProduct(memory)}\n            ,\n            onClick: () => onSelectHandleChange(memory),\n            disabled: memoryList.length <= 1 ? true : false,\n            children: memory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n}));\n_c2 = MemorySelect;\nexport default MemorySelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MemorySelect$observer\");\n$RefreshReg$(_c2, \"MemorySelect\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Product/ProductSelects/MemorySelect/MemorySelect.tsx"],"names":["React","ResponseDataState","ProductSelectsState","observer","useNavigate","ItemDataState","MemorySelect","memoryList","onSelectHandleChange","navigate","responseData","selectedColor","selectedMemory","selectedTitle","itemData","urlName","map","memory","features","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAEA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,QAAuC,cAAvC;AACA,OAAO,qBAAP;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;AAEA,MAAMC,YAAY,GAAGH,QAAQ,SAAC,QAA+F;AAAA;;AAAA,MAA9F;AAAEI,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA8F;AACzH,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAmBT,iBAAzB;AACA,QAAM;AAAEU,IAAAA,aAAF;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA;AAAjC,MAAmDX,mBAAzD;AACA,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBV,aAA9B,CALyH,CAOzH;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA,gBACKS,QAAQ,IAAIP,UAAU,CAACS,GAAX,CAAgBC,MAAD,IAAoB;AAC5C,4BACI;AACI,UAAA,SAAS,EACLH,QAAQ,CAACI,QAAT,CAAkBD,MAAlB,KAA6BA,MAA7B,GACM,+DADN,GAEM,4BAJd;AAAA,iCAOI;AACI,YAAA,SAAS,EACLH,QAAQ,CAACI,QAAT,CAAkBD,MAAlB,KAA6BA,MAA7B,GACM,6DADN,GAEM,2BAJd;AAMI,YAAA,IAAI,EAAC,QANT,CAOI;AAPJ;AAQI,YAAA,OAAO,EAAE,MAAMT,oBAAoB,CAACS,MAAD,CARvC;AASI,YAAA,QAAQ,EAAEV,UAAU,CAACY,MAAX,IAAqB,CAArB,GAAyB,IAAzB,GAAgC,KAT9C;AAAA,sBAWKF;AAXL;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAuBH,OAxBY;AADjB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CA9E4B;AAAA,UACRb,WADQ;AAAA,GAA7B;MAAME,Y;AAgFN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { IItemData } from \"../../../../interfaces/IItemData\";\r\nimport ResponseDataState from \"../../../../store/ResponseDataState\";\r\nimport ProductSelectsState from \"../../../../store/ProductSelectsState\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport \"./MemorySelect.scss\";\r\nimport ItemDataState from \"../../../../store/ItemDataState\";\r\n\r\nconst MemorySelect = observer(({ memoryList, onSelectHandleChange }: { memoryList: string[], onSelectHandleChange: any }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const { responseData } = ResponseDataState;\r\n    const { selectedColor, selectedMemory, selectedTitle } = ProductSelectsState;\r\n    const { itemData, urlName } = ItemDataState;\r\n\r\n    // const [memoryList, setMemoryList] = useState<string[]>([]);\r\n\r\n    //     useEffect(() => {\r\n    //         if (responseData) {\r\n    // \r\n    //             let memories: string[] = [];\r\n    //             responseData.items.forEach((item: IItemData) => {\r\n    //                 if (product.title === item.title && product.color === item.color) {\r\n    //                     memories.push(item.features.memory);\r\n    //                 }\r\n    //             });\r\n    //             console.log(product.features.memory)\r\n    //             setMemoryList(memories);\r\n    // \r\n    // \r\n    // \r\n    //             showProduct(memories[0]);\r\n    // \r\n    // \r\n    //         }\r\n    //     }, [selectedColor]);\r\n\r\n    //     const showProduct = (memory: string) => {\r\n    //         let prevId = product.id;\r\n    //         let currentItem;\r\n    // \r\n    //         if (responseData) {\r\n    //             currentItem = responseData.items.find(\r\n    //                 (item) =>\r\n    //                     item.title === product.title && item.features.memory === memory && item.color === selectedColor\r\n    //             );\r\n    //         }\r\n    //         currentItem && prevId !== currentItem.id && navigate(`/item/${currentItem.id}`);\r\n    //     };\r\n\r\n    // const onHandleChange = (memory: string) => {\r\n    //     console.log(memory)\r\n    // }\r\n\r\n    return (\r\n        <div className=\"memory-select\">\r\n            <h3 className=\"memory-select__colors-title\">Объем памяти</h3>\r\n            <ul className=\"memory-select__memory-list\">\r\n                {itemData && memoryList.map((memory: string) => {\r\n                    return (\r\n                        <li\r\n                            className={\r\n                                itemData.features.memory === memory\r\n                                    ? \"memory-select__memory-wrap memory-select__memory-wrap--active\"\r\n                                    : \"memory-select__memory-wrap\"\r\n                            }\r\n                        >\r\n                            <button\r\n                                className={\r\n                                    itemData.features.memory === memory\r\n                                        ? \"memory-select__memory-btn memory-select__memory-btn--active\"\r\n                                        : \"memory-select__memory-btn\"\r\n                                }\r\n                                type=\"button\"\r\n                                // onClick={() => showProduct(memory)}\r\n                                onClick={() => onSelectHandleChange(memory)}\r\n                                disabled={memoryList.length <= 1 ? true : false}\r\n                            >\r\n                                {memory}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MemorySelect;\r\n"]},"metadata":{},"sourceType":"module"}