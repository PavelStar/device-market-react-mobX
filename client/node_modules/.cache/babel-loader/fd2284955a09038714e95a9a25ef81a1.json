{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header/Header\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppRouter from \"./AppRouter\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.scss\";\nimport { useEffect } from \"react\";\nimport PageWidthState from \"./store/PageWidthState\";\nimport { observer } from \"mobx-react-lite\";\nimport SearchState from \"./store/SearchState\";\nimport ScrollToTop from \"./Utils/ScrollToTop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = observer(_c = _s(() => {\n  _s();\n\n  const {\n    isMobile\n  } = PageWidthState;\n  const {\n    isSearchShown\n  } = SearchState;\n  useEffect(() => {\n    window.addEventListener('resize', onWindowResize);\n  }, []);\n\n  const onWindowResize = () => {\n    if (window.innerWidth >= 768) {\n      PageWidthState.setIsMobile(false);\n    } else {\n      PageWidthState.setIsMobile(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollToTop, {\n      children: /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/App.tsx"],"names":["Header","HashRouter","AppRouter","Footer","useEffect","PageWidthState","observer","SearchState","ScrollToTop","App","isMobile","isSearchShown","window","addEventListener","onWindowResize","innerWidth","setIsMobile"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,SAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,YAAP;AAEA,SAASC,SAAT,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAEA,MAAMC,GAAG,GAAGH,QAAQ,SAAC,MAAM;AAAA;;AAEvB,QAAM;AAAEI,IAAAA;AAAF,MAAeL,cAArB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAoBJ,WAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,cAAlC;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,MAAM;AACzB,QAAIF,MAAM,CAACG,UAAP,IAAqB,GAAzB,EAA8B;AAC1BV,MAAAA,cAAc,CAACW,WAAf,CAA2B,KAA3B;AACH,KAFD,MAEO;AACHX,MAAAA,cAAc,CAACW,WAAf,CAA2B,IAA3B;AAEH;AACJ,GAPD;;AASA,sBACI,QAAC,UAAD;AAAA,4BAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA9BmB,kCAApB;MAAMP,G;AAgCN,eAAeA,GAAf","sourcesContent":["import Header from \"./components/Header/Header\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport AppRouter from \"./AppRouter\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.scss\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { useEffect, useState } from \"react\";\nimport PageWidthState from \"./store/PageWidthState\";\nimport { observer } from \"mobx-react-lite\";\nimport SearchState from \"./store/SearchState\";\nimport ScrollToTop from \"./Utils/ScrollToTop\";\n\nconst App = observer(() => {\n\n    const { isMobile } = PageWidthState\n    const { isSearchShown } = SearchState;\n\n    useEffect(() => {\n        window.addEventListener('resize', onWindowResize)\n    }, [])\n\n    const onWindowResize = () => {\n        if (window.innerWidth >= 768) {\n            PageWidthState.setIsMobile(false)\n        } else {\n            PageWidthState.setIsMobile(true)\n\n        }\n    }\n\n    return (\n        <HashRouter>\n\n            <Header />\n            <ScrollToTop >\n                <AppRouter />\n            </ScrollToTop>\n            <Footer />\n\n\n        </HashRouter>\n    );\n})\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}