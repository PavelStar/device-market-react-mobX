{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Pavel/Desktop/js/device-market-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{observer}from\"mobx-react-lite\";import React from\"react\";import FiltersSettingsState from\"../../../store/FiltersSettingsState\";import MarkerIcon from\"../../svg/MarkerIcon\";import\"./CheckboxBrand.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CheckboxCategory=observer(function(_ref){var brand=_ref.brand;var selectedBrands=FiltersSettingsState.selectedBrands;var addBrand=function addBrand(){if(!selectedBrands.includes(brand)){FiltersSettingsState.setSelectedBrands(_toConsumableArray(selectedBrands.concat(brand)));}if(selectedBrands.includes(brand)){FiltersSettingsState.setSelectedBrands(_toConsumableArray(selectedBrands.concat(brand)));FiltersSettingsState.setSelectedBrands(selectedBrands.filter(function(item){return item!=brand;}));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-wrapper\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"visually-hidden\",id:brand,type:\"checkbox\",name:\"brand-item\",checked:selectedBrands.includes(brand)?true:false,onChange:addBrand}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-border\",children:/*#__PURE__*/_jsx(MarkerIcon,{})}),/*#__PURE__*/_jsx(\"label\",{htmlFor:brand,children:brand})]});});export default CheckboxCategory;","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/FiltersPanel/CheckboxBrand/CheckboxBrand.tsx"],"names":["observer","React","FiltersSettingsState","MarkerIcon","CheckboxCategory","brand","selectedBrands","addBrand","includes","setSelectedBrands","concat","filter","item"],"mappings":"oLAAA,OAASA,QAAT,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,qCAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAO,sBAAP,C,wFAOA,GAAMC,CAAAA,gBAAuC,CAAGJ,QAAQ,CAAC,cAAe,IAAZK,CAAAA,KAAY,MAAZA,KAAY,CAEpE,GAAQC,CAAAA,cAAR,CAA2BJ,oBAA3B,CAAQI,cAAR,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAI,CAACD,cAAc,CAACE,QAAf,CAAwBH,KAAxB,CAAL,CAAqC,CACjCH,oBAAoB,CAACO,iBAArB,oBAA2CH,cAAc,CAACI,MAAf,CAAsBL,KAAtB,CAA3C,GACH,CAED,GAAIC,cAAc,CAACE,QAAf,CAAwBH,KAAxB,CAAJ,CAAoC,CAChCH,oBAAoB,CAACO,iBAArB,oBAA2CH,cAAc,CAACI,MAAf,CAAsBL,KAAtB,CAA3C,GACAH,oBAAoB,CAACO,iBAArB,CAAuCH,cAAc,CAACK,MAAf,CAAsB,SAACC,IAAD,CAAU,CACnE,MAAOA,CAAAA,IAAI,EAAIP,KAAf,CACH,CAFsC,CAAvC,EAIH,CACJ,CAZD,CAcA,mBACI,aAAK,SAAS,CAAC,kBAAf,wBACI,cACI,SAAS,CAAC,iBADd,CAEI,EAAE,CAAEA,KAFR,CAGI,IAAI,CAAC,UAHT,CAII,IAAI,CAAC,YAJT,CAKI,OAAO,CAAEC,cAAc,CAACE,QAAf,CAAwBH,KAAxB,EAAiC,IAAjC,CAAwC,KALrD,CAMI,QAAQ,CAAEE,QANd,EADJ,cASI,YAAK,SAAS,CAAC,iBAAf,uBACI,KAAC,UAAD,IADJ,EATJ,cAYI,cAAO,OAAO,CAAEF,KAAhB,UAAwBA,KAAxB,EAZJ,GADJ,CAgBH,CAlCuD,CAAxD,CAoCA,cAAeD,CAAAA,gBAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport FiltersSettingsState from \"../../../store/FiltersSettingsState\";\r\nimport MarkerIcon from \"../../svg/MarkerIcon\";\r\nimport \"./CheckboxBrand.scss\";\r\n\r\ninterface IInputBrand {\r\n    brand: string\r\n}\r\n\r\n\r\nconst CheckboxCategory: React.FC<IInputBrand> = observer(({ brand }) => {\r\n\r\n    const { selectedBrands } = FiltersSettingsState\r\n\r\n    const addBrand = () => {\r\n        if (!selectedBrands.includes(brand)) {\r\n            FiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)])\r\n        }\r\n\r\n        if (selectedBrands.includes(brand)) {\r\n            FiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)])\r\n            FiltersSettingsState.setSelectedBrands(selectedBrands.filter((item) => {\r\n                return item != brand\r\n            }))\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkbox-wrapper\">\r\n            <input\r\n                className=\"visually-hidden\"\r\n                id={brand}\r\n                type=\"checkbox\"\r\n                name=\"brand-item\"\r\n                checked={selectedBrands.includes(brand) ? true : false}\r\n                onChange={addBrand}\r\n            />\r\n            <div className=\"checkbox-border\">\r\n                <MarkerIcon />\r\n            </div>\r\n            <label htmlFor={brand}>{brand}</label>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CheckboxCategory;\r\n"]},"metadata":{},"sourceType":"module"}