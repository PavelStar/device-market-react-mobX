{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Cart\\\\Counter\\\\Counter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CartState from '../../../store/CartState';\nimport './Counter.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = _ref => {\n  _s();\n\n  let {\n    countToOrder,\n    setCountToOrder,\n    maxCount,\n    item\n  } = _ref;\n  const {\n    cartItems,\n    priceSum\n  } = CartState;\n  const [itemCount, setItemCount] = useState(1); // console.log(itemPrice)\n\n  const incItem = () => {\n    // setCountToOrder(countToOrder + 1)\n    setItemCount(itemCount + 1);\n    if (itemCount > item.amount) CartState.setCartItems([...cartItems.concat(item)]); // CartState.setPriceSum(priceSum + itemPrice)\n  };\n\n  const decItem = () => {// setCountToOrder(countToOrder - 1)\n    // CartState.setPriceSum(priceSum - itemPrice)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"counter__btn counter__btn--dec\",\n      onClick: decItem,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter__num\",\n      children: countToOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"counter__btn counter__btn--inc\",\n      onClick: incItem // disabled={maxCount === countToOrder ? true : false}\n      ,\n      disabled: itemCount === item.amount ? true : false,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Counter, \"XCK4LMmV5K4JJMIQ6JgpeVJaY/c=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Cart/Counter/Counter.tsx"],"names":["React","useState","CartState","Counter","countToOrder","setCountToOrder","maxCount","item","cartItems","priceSum","itemCount","setItemCount","incItem","amount","setCartItems","concat","decItem"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,gBAAP;;;AASA,MAAMC,OAA2B,GAAG,QAAuD;AAAA;;AAAA,MAAtD;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,eAAhB;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA;AAA3C,GAAsD;AAEvF,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BP,SAAhC;AAEA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAD,CAA1C,CAJuF,CAMvF;;AACA,QAAMW,OAAO,GAAG,MAAM;AAClB;AACAD,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACA,QAAIA,SAAS,GAAGH,IAAI,CAACM,MAArB,EACIX,SAAS,CAACY,YAAV,CAAuB,CAAC,GAAGN,SAAS,CAACO,MAAV,CAAiBR,IAAjB,CAAJ,CAAvB,EAJc,CAKlB;AACH,GAND;;AASA,QAAMS,OAAO,GAAG,MAAM,CAClB;AACA;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,gCAAlB;AACI,MAAA,OAAO,EAAEA,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BZ;AAA/B;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,SAAS,EAAC,gCAAlB;AACI,MAAA,OAAO,EAAEQ,OADb,CAEI;AAFJ;AAGI,MAAA,QAAQ,EAAEF,SAAS,KAAKH,IAAI,CAACM,MAAnB,GAA4B,IAA5B,GAAmC,KAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAlCD;;GAAMV,O;;KAAAA,O;AAoCN,eAAeA,OAAf","sourcesContent":["import { RecordWithTtl } from 'dns';\r\nimport React, { useState } from 'react';\r\nimport { IItemData } from '../../../interfaces/IItemData';\r\nimport CartState from '../../../store/CartState'\r\nimport './Counter.scss'\r\n\r\ninterface ICounter {\r\n    countToOrder: number\r\n    setCountToOrder: React.Dispatch<React.SetStateAction<number>>;\r\n    maxCount: number;\r\n    item: IItemData;\r\n}\r\n\r\nconst Counter: React.FC<ICounter> = ({ countToOrder, setCountToOrder, maxCount, item }) => {\r\n\r\n    const { cartItems, priceSum } = CartState;\r\n\r\n    const [itemCount, setItemCount] = useState(1)\r\n\r\n    // console.log(itemPrice)\r\n    const incItem = () => {\r\n        // setCountToOrder(countToOrder + 1)\r\n        setItemCount(itemCount + 1)\r\n        if (itemCount > item.amount)\r\n            CartState.setCartItems([...cartItems.concat(item)]);\r\n        // CartState.setPriceSum(priceSum + itemPrice)\r\n    }\r\n\r\n\r\n    const decItem = () => {\r\n        // setCountToOrder(countToOrder - 1)\r\n        // CartState.setPriceSum(priceSum - itemPrice)\r\n    }\r\n\r\n    return (\r\n        <div className=\"counter\">\r\n            <button className=\"counter__btn counter__btn--dec\"\r\n                onClick={decItem}\r\n            >-</button>\r\n            <div className=\"counter__num\">{countToOrder}</div>\r\n            <button className=\"counter__btn counter__btn--inc\"\r\n                onClick={incItem}\r\n                // disabled={maxCount === countToOrder ? true : false}\r\n                disabled={itemCount === item.amount ? true : false}\r\n            >+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}