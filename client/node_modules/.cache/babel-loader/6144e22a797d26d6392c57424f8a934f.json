{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Pagination\\\\Pagination.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Pagination.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  _s();\n\n  let {\n    itemsCount,\n    itemsPerPage,\n    startIndex,\n    setStartIndex\n  } = _ref;\n  const [numbersButtons, setNumbersButtons] = useState();\n  useEffect(() => {\n    let arrOfNumbers = [];\n\n    if (itemsCount && itemsPerPage) {\n      for (let i = 1; i <= Math.ceil(itemsCount / itemsPerPage); i++) {\n        arrOfNumbers.push(i);\n      }\n    }\n\n    setNumbersButtons(arrOfNumbers);\n  }, []);\n\n  const switchPage = number => {\n    itemsPerPage && setStartIndex(number * itemsPerPage);\n    console.log('dd', itemsPerPage && startIndex && startIndex / itemsPerPage + 1 === number);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination__list\",\n      children: numbersButtons === null || numbersButtons === void 0 ? void 0 : numbersButtons.map(number => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"pagination__item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: itemsPerPage && startIndex && startIndex / itemsPerPage + 1 === number ? \"pagination__btn-number active\" : \"pagination__btn-number\",\n            onClick: () => switchPage(number - 1),\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pagination, \"Hp/nS1WEg114g2Kwn+dEXzy0mPo=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Pagination/Pagination.tsx"],"names":["React","useEffect","useState","Pagination","itemsCount","itemsPerPage","startIndex","setStartIndex","numbersButtons","setNumbersButtons","arrOfNumbers","i","Math","ceil","push","switchPage","number","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,mBAAP;;;AASA,MAAMC,UAAiC,GAAG,QAA6D;AAAA;;AAAA,MAA5D;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA,UAA5B;AAAwCC,IAAAA;AAAxC,GAA4D;AACnG,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,EAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,YAAsB,GAAG,EAA7B;;AAEA,QAAIN,UAAU,IAAIC,YAAlB,EAAgC;AAC5B,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUT,UAAU,GAAGC,YAAvB,CAArB,EAA2DM,CAAC,EAA5D,EAAgE;AAC5DD,QAAAA,YAAY,CAACI,IAAb,CAAkBH,CAAlB;AACH;AACJ;;AAEDF,IAAAA,iBAAiB,CAACC,YAAD,CAAjB;AACH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMK,UAAU,GAAIC,MAAD,IAAoB;AACnCX,IAAAA,YAAY,IAAIE,aAAa,CAACS,MAAM,GAAGX,YAAV,CAA7B;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBb,YAAY,IAAIC,UAAhB,IAA8BA,UAAU,GAAGD,YAAb,GAA4B,CAA5B,KAAkCW,MAAlF;AACH,GAHD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,gBACKR,cADL,aACKA,cADL,uBACKA,cAAc,CAAEW,GAAhB,CAAqBH,MAAD,IAAY;AAC7B,4BACI;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,iCACI;AACI,YAAA,SAAS,EACJX,YAAY,IAAIC,UAAjB,IAAgCA,UAAU,GAAGD,YAAb,GAA4B,CAA5B,KAAkCW,MAAlE,GACM,+BADN,GAEM,wBAJd;AAMI,YAAA,OAAO,EAAE,MAAMD,UAAU,CAACC,MAAM,GAAG,CAAV,CAN7B;AAAA,sBAQKA;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcH,OAfA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA5CD;;GAAMb,U;;KAAAA,U;AA8CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Pagination.scss\";\r\n\r\ninterface IPagination {\r\n    itemsCount: number | undefined;\r\n    itemsPerPage: number | undefined;\r\n    startIndex: number | undefined;\r\n    setStartIndex: any;\r\n}\r\n\r\nconst Pagination: React.FC<IPagination> = ({ itemsCount, itemsPerPage, startIndex, setStartIndex }) => {\r\n    const [numbersButtons, setNumbersButtons] = useState<number[] | undefined>();\r\n\r\n    useEffect(() => {\r\n        let arrOfNumbers: number[] = [];\r\n\r\n        if (itemsCount && itemsPerPage) {\r\n            for (let i = 1; i <= Math.ceil(itemsCount / itemsPerPage); i++) {\r\n                arrOfNumbers.push(i);\r\n            }\r\n        }\r\n\r\n        setNumbersButtons(arrOfNumbers);\r\n    }, []);\r\n\r\n    const switchPage = (number: number) => {\r\n        itemsPerPage && setStartIndex(number * itemsPerPage);\r\n        console.log('dd', itemsPerPage && startIndex && startIndex / itemsPerPage + 1 === number);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <ul className=\"pagination__list\">\r\n                {numbersButtons?.map((number) => {\r\n                    return (\r\n                        <li className=\"pagination__item\">\r\n                            <button\r\n                                className={\r\n                                    (itemsPerPage && startIndex) && startIndex / itemsPerPage + 1 === number\r\n                                        ? \"pagination__btn-number active\"\r\n                                        : \"pagination__btn-number\"\r\n                                }\r\n                                onClick={() => switchPage(number - 1)}\r\n                            >\r\n                                {number}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}