{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Product\\\\ProductSelects\\\\MemorySelect\\\\MemorySelect.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ResponseDataState from '../../../../store/ResponseDataState';\nimport ProductSelectsState from '../../../../store/ProductSelectsState';\nimport './MemorySelect.scss';\nimport { observer } from 'mobx-react-lite';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemorySelect = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    product\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    responseData\n  } = ResponseDataState;\n  const {\n    selectedColor,\n    selectedMemory,\n    selectedTitle\n  } = ProductSelectsState;\n  const [memoryList, setMemoryList] = useState([]);\n  useEffect(() => {\n    if (responseData) {\n      let memory = [];\n      responseData.items.forEach(item => {\n        if (product.title === item.title && !memory.includes(item.features.memory)) {\n          memory.push(item.features.memory);\n        }\n      });\n      setMemoryList(memory);\n    }\n  }, []); //     useEffect(() => {\n  //         console.log(selectedColor)\n  // \n  // \n  // \n  //     }, [selectedColor])\n\n  const showProduct = memory => {\n    let currentItem;\n\n    if (responseData) {\n      currentItem = responseData.items.find(item => item.title === product.title && item.features.memory === memory && item.color === selectedColor);\n    }\n\n    currentItem && navigate(`/item/${currentItem.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"memory-select__colors-title\",\n      children: \"\\u041E\\u0431\\u044A\\u0435\\u043C \\u043F\\u0430\\u043C\\u044F\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"memory-select__memory-list\",\n      children: memoryList.map(memory => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: product.features.memory === memory ? \"memory-select__memory-wrap memory-select__memory-wrap--active\" : \"memory-select__memory-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: product.features.memory === memory ? \"memory-select__memory-btn memory-select__memory-btn--active\" : \"memory-select__memory-btn\",\n            type: \"button\" // onClick={() => memoryList.length > 1 && ProductSelectsState.setSelectedMemory(memory)}\n            ,\n            onClick: () => showProduct(memory),\n            children: memory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}, \"MrArlFHTjBVO1Okdjzz9HJ500rA=\", false, function () {\n  return [useNavigate];\n}));\n_c2 = MemorySelect;\nexport default MemorySelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MemorySelect$observer\");\n$RefreshReg$(_c2, \"MemorySelect\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Product/ProductSelects/MemorySelect/MemorySelect.tsx"],"names":["React","useEffect","useState","ResponseDataState","ProductSelectsState","observer","useNavigate","MemorySelect","product","navigate","responseData","selectedColor","selectedMemory","selectedTitle","memoryList","setMemoryList","memory","items","forEach","item","title","includes","features","push","showProduct","currentItem","find","color","id","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAO,qBAAP;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,YAAY,GAAGF,QAAQ,SAAC,QAAyC;AAAA;;AAAA,MAAxC;AAAEG,IAAAA;AAAF,GAAwC;AAEnE,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAmBP,iBAAzB;AACA,QAAM;AAAEQ,IAAAA,aAAF;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA;AAAjC,MAAmDT,mBAAzD;AAEA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAW,EAAX,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,YAAJ,EAAkB;AACd,UAAIM,MAAgB,GAAG,EAAvB;AAEAN,MAAAA,YAAY,CAACO,KAAb,CAAmBC,OAAnB,CAA4BC,IAAD,IAAqB;AAC5C,YAAIX,OAAO,CAACY,KAAR,KAAkBD,IAAI,CAACC,KAAvB,IAAgC,CAACJ,MAAM,CAACK,QAAP,CAAgBF,IAAI,CAACG,QAAL,CAAcN,MAA9B,CAArC,EAA4E;AACxEA,UAAAA,MAAM,CAACO,IAAP,CAAYJ,IAAI,CAACG,QAAL,CAAcN,MAA1B;AACH;AAEJ,OALD;AAMAD,MAAAA,aAAa,CAACC,MAAD,CAAb;AACH;AAEJ,GAbQ,EAaN,EAbM,CAAT,CATmE,CAwBnE;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,WAAW,GAAIR,MAAD,IAAoB;AACpC,QAAIS,WAAJ;;AACA,QAAIf,YAAJ,EAAkB;AAEde,MAAAA,WAAW,GAAGf,YAAY,CAACO,KAAb,CAAmBS,IAAnB,CAAwBP,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeZ,OAAO,CAACY,KAAvB,IAAgCD,IAAI,CAACG,QAAL,CAAcN,MAAd,KAAyBA,MAAzD,IAAmEG,IAAI,CAACQ,KAAL,KAAehB,aAAlH,CAAd;AACH;;AAEDc,IAAAA,WAAW,IAAIhB,QAAQ,CAAE,SAAQgB,WAAW,CAACG,EAAG,EAAzB,CAAvB;AAEH,GATD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA,gBACKd,UAAU,CAACe,GAAX,CAAgBb,MAAD,IAAoB;AAEhC,4BACI;AAAI,UAAA,SAAS,EAAER,OAAO,CAACc,QAAR,CAAiBN,MAAjB,KAA4BA,MAA5B,GAAqC,+DAArC,GAAuG,4BAAtH;AAAA,iCAGI;AACI,YAAA,SAAS,EACLR,OAAO,CAACc,QAAR,CAAiBN,MAAjB,KAA4BA,MAA5B,GACM,6DADN,GAEM,2BAJd;AAMI,YAAA,IAAI,EAAC,QANT,CAOI;AAPJ;AAQI,YAAA,OAAO,EAAE,MAAMQ,WAAW,CAACR,MAAD,CAR9B;AAAA,sBAWKA;AAXL;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAmBH,OArBA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CA1E4B;AAAA,UAERV,WAFQ;AAAA,GAA7B;MAAMC,Y;AA4EN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { IItemData } from '../../../../interfaces/IItemData'\r\nimport ResponseDataState from '../../../../store/ResponseDataState'\r\nimport ProductSelectsState from '../../../../store/ProductSelectsState'\r\nimport './MemorySelect.scss'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useNavigate } from 'react-router'\r\n\r\nconst MemorySelect = observer(({ product }: { product: IItemData }) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { responseData } = ResponseDataState\r\n    const { selectedColor, selectedMemory, selectedTitle } = ProductSelectsState\r\n\r\n    const [memoryList, setMemoryList] = useState<string[]>([])\r\n\r\n    useEffect(() => {\r\n        if (responseData) {\r\n            let memory: string[] = []\r\n\r\n            responseData.items.forEach((item: IItemData) => {\r\n                if (product.title === item.title && !memory.includes(item.features.memory)) {\r\n                    memory.push(item.features.memory)\r\n                }\r\n\r\n            })\r\n            setMemoryList(memory)\r\n        }\r\n\r\n    }, [])\r\n\r\n    //     useEffect(() => {\r\n    //         console.log(selectedColor)\r\n    // \r\n    // \r\n    // \r\n    //     }, [selectedColor])\r\n\r\n    const showProduct = (memory: string) => {\r\n        let currentItem;\r\n        if (responseData) {\r\n\r\n            currentItem = responseData.items.find(item => item.title === product.title && item.features.memory === memory && item.color === selectedColor)\r\n        }\r\n\r\n        currentItem && navigate(`/item/${currentItem.id}`)\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"memory-select\">\r\n            <h3 className=\"memory-select__colors-title\">Объем памяти</h3>\r\n            <ul className=\"memory-select__memory-list\">\r\n                {memoryList.map((memory: string) => {\r\n\r\n                    return (\r\n                        <li className={product.features.memory === memory ? \"memory-select__memory-wrap memory-select__memory-wrap--active\" : \"memory-select__memory-wrap\"}\r\n                        >\r\n\r\n                            <button\r\n                                className={\r\n                                    product.features.memory === memory\r\n                                        ? \"memory-select__memory-btn memory-select__memory-btn--active\"\r\n                                        : \"memory-select__memory-btn\"\r\n                                }\r\n                                type=\"button\"\r\n                                // onClick={() => memoryList.length > 1 && ProductSelectsState.setSelectedMemory(memory)}\r\n                                onClick={() => showProduct(memory)}\r\n\r\n                            >\r\n                                {memory}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MemorySelect"]},"metadata":{},"sourceType":"module"}