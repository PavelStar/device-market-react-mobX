{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\PriceRange\\\\PriceRange.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Range } from \"rc-slider\";\nimport FiltersSettingsState from '../../store/FiltersSettingsState';\nimport \"rc-slider/assets/index.css\";\nimport \"nouislider/distribute/nouislider.css\";\nimport './PriceRange.scss';\nimport { observer } from 'mobx-react-lite';\nimport { SetFilterSettings } from '../../Utils/SetFilterSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PriceRange = observer(_c = _s(() => {\n  _s();\n\n  const {\n    priceRange,\n    isPriceRangeReseted\n  } = FiltersSettingsState;\n  const [dynamicKey, setDynamicKey] = useState(Date.now());\n  useEffect(() => {\n    if (isPriceRangeReseted) {\n      setDynamicKey(Date.now());\n      FiltersSettingsState.setIsPriceRangeReseted(false);\n    }\n  }, [isPriceRangeReseted]);\n\n  const handleChange = e => {\n    setDynamicKey(Date.now());\n    if (e.target.id === \"1\") FiltersSettingsState.setPriceRange([+e.target.value, priceRange[1]]);\n    if (e.target.id === \"2\") FiltersSettingsState.setPriceRange([priceRange[0], +e.target.value]);\n    FiltersSettingsState.setAllFilteredItems(SetFilterSettings());\n  };\n\n  const onSliderChange = value => {\n    FiltersSettingsState.setPriceRange(value);\n    FiltersSettingsState.setAllFilteredItems(SetFilterSettings());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"price-range\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"price-range__title\",\n      children: \"\\u0426\\u0435\\u043D\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"price-range__inputs-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        onChange: e => handleChange(e),\n        value: priceRange[0],\n        id: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        onChange: e => handleChange(e),\n        value: priceRange[1],\n        id: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Range, {\n        className: \"sorting__range-slider\",\n        min: 0,\n        max: 250000,\n        step: 1000,\n        defaultValue: priceRange // onChange={(value) => onSliderChange(value)}\n        ,\n        onChange: () => setDynamicKey(Date.now()),\n        onAfterChange: value => onSliderChange(value)\n      }, dynamicKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}, \"NM6H5MeVDCBEUq5r51dfyRALqis=\"));\n_c2 = PriceRange;\nexport default PriceRange;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PriceRange$observer\");\n$RefreshReg$(_c2, \"PriceRange\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/PriceRange/PriceRange.tsx"],"names":["useEffect","useState","Range","FiltersSettingsState","observer","SetFilterSettings","PriceRange","priceRange","isPriceRangeReseted","dynamicKey","setDynamicKey","Date","now","setIsPriceRangeReseted","handleChange","e","target","id","setPriceRange","value","setAllFilteredItems","onSliderChange"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;AACA,OAAO,4BAAP;AACA,OAAO,sCAAP;AACA,OAAO,mBAAP;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;;AAEA,MAAMC,UAAU,GAAGF,QAAQ,SAAC,MAAM;AAAA;;AAE9B,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAsCL,oBAA5C;AAEA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACU,IAAI,CAACC,GAAL,EAAD,CAA5C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,mBAAJ,EAAyB;AACrBE,MAAAA,aAAa,CAACC,IAAI,CAACC,GAAL,EAAD,CAAb;AACAT,MAAAA,oBAAoB,CAACU,sBAArB,CAA4C,KAA5C;AACH;AACJ,GALQ,EAKN,CAACL,mBAAD,CALM,CAAT;;AAQA,QAAMM,YAAY,GAAIC,CAAD,IAAsC;AACvDL,IAAAA,aAAa,CAACC,IAAI,CAACC,GAAL,EAAD,CAAb;AACA,QAAIG,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,GAApB,EAAyBd,oBAAoB,CAACe,aAArB,CAAmC,CAAC,CAACH,CAAC,CAACC,MAAF,CAASG,KAAX,EAAkBZ,UAAU,CAAC,CAAD,CAA5B,CAAnC;AACzB,QAAIQ,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,GAApB,EAAyBd,oBAAoB,CAACe,aAArB,CAAmC,CAACX,UAAU,CAAC,CAAD,CAAX,EAAgB,CAACQ,CAAC,CAACC,MAAF,CAASG,KAA1B,CAAnC;AACzBhB,IAAAA,oBAAoB,CAACiB,mBAArB,CAAyCf,iBAAiB,EAA1D;AACH,GALD;;AAOA,QAAMgB,cAAc,GAAIF,KAAD,IAAqB;AACxChB,IAAAA,oBAAoB,CAACe,aAArB,CAAmCC,KAAnC;AACAhB,IAAAA,oBAAoB,CAACiB,mBAArB,CAAyCf,iBAAiB,EAA1D;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,QAAQ,EAAGU,CAAD,IAAYD,YAAY,CAACC,CAAD,CAApD;AAAyD,QAAA,KAAK,EAAER,UAAU,CAAC,CAAD,CAA1E;AAA+E,QAAA,EAAE,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,QAAQ,EAAGQ,CAAD,IAAYD,YAAY,CAACC,CAAD,CAApD;AAAyD,QAAA,KAAK,EAAER,UAAU,CAAC,CAAD,CAA1E;AAA+E,QAAA,EAAE,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA,6BACI,QAAC,KAAD;AACI,QAAA,SAAS,EAAC,uBADd;AAGI,QAAA,GAAG,EAAE,CAHT;AAII,QAAA,GAAG,EAAE,MAJT;AAKI,QAAA,IAAI,EAAE,IALV;AAMI,QAAA,YAAY,EAAEA,UANlB,CAOI;AAPJ;AAQI,QAAA,QAAQ,EAAE,MAAMG,aAAa,CAACC,IAAI,CAACC,GAAL,EAAD,CARjC;AASI,QAAA,aAAa,EAAGO,KAAD,IAAWE,cAAc,CAACF,KAAD;AAT5C,SAESV,UAFT;AAAA;AAAA;AAAA;AAAA;AADJ,qBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAhD0B,kCAA3B;MAAMH,U;AAkDN,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { Range } from \"rc-slider\";\r\nimport FiltersSettingsState from '../../store/FiltersSettingsState';\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport './PriceRange.scss'\r\nimport { observer } from 'mobx-react-lite';\r\nimport { SetFilterSettings } from '../../Utils/SetFilterSettings';\r\n\r\nconst PriceRange = observer(() => {\r\n\r\n    const { priceRange, isPriceRangeReseted } = FiltersSettingsState\r\n\r\n    const [dynamicKey, setDynamicKey] = useState(Date.now());\r\n\r\n    useEffect(() => {\r\n        if (isPriceRangeReseted) {\r\n            setDynamicKey(Date.now())\r\n            FiltersSettingsState.setIsPriceRangeReseted(false)\r\n        }\r\n    }, [isPriceRangeReseted])\r\n\r\n\r\n    const handleChange = (e: { target: HTMLInputElement; }) => {\r\n        setDynamicKey(Date.now());\r\n        if (e.target.id === \"1\") FiltersSettingsState.setPriceRange([+e.target.value, priceRange[1]]);\r\n        if (e.target.id === \"2\") FiltersSettingsState.setPriceRange([priceRange[0], +e.target.value]);\r\n        FiltersSettingsState.setAllFilteredItems(SetFilterSettings());\r\n    };\r\n\r\n    const onSliderChange = (value: number[]) => {\r\n        FiltersSettingsState.setPriceRange(value)\r\n        FiltersSettingsState.setAllFilteredItems(SetFilterSettings());\r\n    }\r\n\r\n    return (\r\n        <div className=\"price-range\">\r\n            <h3 className=\"price-range__title\">Цена</h3>\r\n            <div className=\"price-range__inputs-wrap\">\r\n                <input type=\"tel\" onChange={(e: any) => handleChange(e)} value={priceRange[0]} id=\"1\" />\r\n                <input type=\"tel\" onChange={(e: any) => handleChange(e)} value={priceRange[1]} id=\"2\" />\r\n            </div>\r\n            <>\r\n                <Range\r\n                    className=\"sorting__range-slider\"\r\n                    key={dynamicKey}\r\n                    min={0}\r\n                    max={250000}\r\n                    step={1000}\r\n                    defaultValue={priceRange}\r\n                    // onChange={(value) => onSliderChange(value)}\r\n                    onChange={() => setDynamicKey(Date.now())}\r\n                    onAfterChange={(value) => onSliderChange(value)}\r\n                />\r\n            </>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PriceRange"]},"metadata":{},"sourceType":"module"}