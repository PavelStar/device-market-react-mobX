{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\SearchBar\\\\SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect, useRef } from \"react\";\nimport SearchState from \"../../store/SearchState\";\nimport SearchResultsList from \"./SearchResultsList/SearchResultsList\";\nimport SearchField from \"./SearchField/SearchField\";\nimport { clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport PageWidthState from \"../../store/PageWidthState\";\nimport CloseBtn from \"../svg/CloseBtn\";\nimport \"./SearchBar.scss\";\nimport { ScrollLockOnFixed } from \"../../Utils/ScrollLockOnFixed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    setIsNavShown,\n    headerRef\n  } = _ref;\n  const searchBarRef = useRef(null);\n  const searchInnerRef = useRef(null);\n  const {\n    headerHeight,\n    isResultsShown\n  } = SearchState;\n  const {\n    isMobile,\n    scrollYPosition\n  } = PageWidthState;\n  const overlayRef = useRef(null);\n\n  const onOverlayClick = e => {\n    if (e.target === overlayRef.current) {\n      SearchState.setIsSearchShown(false);\n    }\n  };\n\n  useEffect(() => {\n    ScrollLockOnFixed(\"disabled\", headerRef);\n    return () => {\n      ScrollLockOnFixed(\"enabled\", headerRef);\n      clearAllBodyScrollLocks();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar__overlay\",\n    onClick: onOverlayClick,\n    ref: overlayRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      ref: searchBarRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar__inner\",\n        ref: searchInnerRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar__window\",\n          children: [/*#__PURE__*/_jsxDEV(SearchField, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), isResultsShown && /*#__PURE__*/_jsxDEV(SearchResultsList, {\n            searchInnerRef: searchInnerRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => SearchState.setIsSearchShown(false),\n            className: \"search-bar__close-btn\",\n            children: /*#__PURE__*/_jsxDEV(CloseBtn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 119\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}, \"3YGp46dNT6tuat/4lnPl5LYTxxk=\"));\n_c2 = SearchBar;\nexport default SearchBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar$observer\");\n$RefreshReg$(_c2, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/SearchBar/SearchBar.tsx"],"names":["observer","useEffect","useRef","SearchState","SearchResultsList","SearchField","clearAllBodyScrollLocks","PageWidthState","CloseBtn","ScrollLockOnFixed","SearchBar","setIsNavShown","headerRef","searchBarRef","searchInnerRef","headerHeight","isResultsShown","isMobile","scrollYPosition","overlayRef","onOverlayClick","e","target","current","setIsSearchShown"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SAAoBC,SAApB,EAA+BC,MAA/B,QAAwD,OAAxD;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,SAA8CC,uBAA9C,QAA6E,kBAA7E;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,kBAAP;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,SAAS,GAAGV,QAAQ,SAAC,QAA2I;AAAA;;AAAA,MAA1I;AAAEW,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,GAA0I;AAElK,QAAMC,YAAY,GAAGX,MAAM,CAAiB,IAAjB,CAA3B;AACA,QAAMY,cAAc,GAAGZ,MAAM,CAAiB,IAAjB,CAA7B;AAEA,QAAM;AAAEa,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAmCb,WAAzC;AACA,QAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAgCX,cAAtC;AAEA,QAAMY,UAAU,GAAGjB,MAAM,CAAC,IAAD,CAAzB;;AAEA,QAAMkB,cAAc,GAAIC,CAAD,IAAY;AAC/B,QAAIA,CAAC,CAACC,MAAF,KAAaH,UAAU,CAACI,OAA5B,EAAqC;AACjCpB,MAAAA,WAAW,CAACqB,gBAAZ,CAA6B,KAA7B;AACH;AACJ,GAJD;;AAQAvB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,iBAAiB,CAAC,UAAD,EAAaG,SAAb,CAAjB;AAEA,WAAO,MAAM;AACTH,MAAAA,iBAAiB,CAAC,SAAD,EAAYG,SAAZ,CAAjB;AACAN,MAAAA,uBAAuB;AAC1B,KAHD;AAIH,GAPQ,EAON,EAPM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,OAAO,EAAEc,cAA9C;AAA8D,IAAA,GAAG,EAAED,UAAnE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AACI,MAAA,GAAG,EAAEN,YADT;AAAA,6BAGI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAEC,cAAxC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEME,cAAD,iBACG,QAAC,iBAAD;AAAmB,YAAA,cAAc,EAAEF;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAHR,eAOI;AAAQ,YAAA,OAAO,EAAE,MAAMX,WAAW,CAACqB,gBAAZ,CAA6B,KAA7B,CAAvB;AAA4D,YAAA,SAAS,EAAC,uBAAtE;AAAA,mCAA8F,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA9F;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAjDyB,kCAA1B;MAAMd,S;AAmDN,eAAeA,SAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport { RefObject, useEffect, useRef, useState, } from \"react\";\nimport SearchState from \"../../store/SearchState\";\nimport SearchResultsList from \"./SearchResultsList/SearchResultsList\";\nimport SearchField from \"./SearchField/SearchField\";\nimport SearchBarBtn from \"./SearchBarBtn/SearchBarBtn\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport PageWidthState from \"../../store/PageWidthState\";\nimport CloseBtn from \"../svg/CloseBtn\";\nimport \"./SearchBar.scss\";\nimport { ScrollLockOnFixed } from \"../../Utils/ScrollLockOnFixed\";\n\nconst SearchBar = observer(({ setIsNavShown, headerRef }: { setIsNavShown?: React.Dispatch<React.SetStateAction<boolean>>, headerRef: RefObject<HTMLDivElement> }) => {\n\n    const searchBarRef = useRef<HTMLDivElement>(null);\n    const searchInnerRef = useRef<HTMLDivElement>(null);\n\n    const { headerHeight, isResultsShown } = SearchState;\n    const { isMobile, scrollYPosition } = PageWidthState;\n\n    const overlayRef = useRef(null)\n\n    const onOverlayClick = (e: any) => {\n        if (e.target === overlayRef.current) {\n            SearchState.setIsSearchShown(false)\n        }\n    }\n\n\n\n    useEffect(() => {\n        ScrollLockOnFixed(\"disabled\", headerRef)\n\n        return () => {\n            ScrollLockOnFixed(\"enabled\", headerRef)\n            clearAllBodyScrollLocks()\n        }\n    }, [])\n\n\n\n    return (\n        <div className=\"search-bar__overlay\" onClick={onOverlayClick} ref={overlayRef}>\n            <div className=\"search-bar\"\n                ref={searchBarRef}>\n\n                <div className=\"search-bar__inner\" ref={searchInnerRef}>\n                    <div className=\"search-bar__window\">\n                        <SearchField />\n                        {(isResultsShown) && (\n                            <SearchResultsList searchInnerRef={searchInnerRef} />\n\n                        )}\n                        {/* <button onClick={() => setIsNavShown && setIsNavShown(false)} className=\"search-bar__close-btn\"><CloseBtn /></button> */}\n                        <button onClick={() => SearchState.setIsSearchShown(false)} className=\"search-bar__close-btn\"><CloseBtn /></button>\n                    </div>\n                    {/* <SearchBarBtn /> */}\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}