{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Header\\\\User\\\\User.tsx\";\nimport { observer } from \"mobx-react-lite\";\nimport LoginState from \"../../../store/LoginState\"; // import LoginPopupState from \"../../../store/LoginPopupState\";\n\nimport UserIcon from \"../../svg/UserIcon\";\nimport \"./User.scss\";\nimport UserNav from \"./UserNav/UserNav\";\nimport NavBarItem from \"../NavBarItem/NavBarItem\";\nimport PageWidthState from \"../../../store/PageWidthState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = observer(_c = () => {\n  const {\n    userName,\n    userPassword,\n    isPopupShown\n  } = LoginState;\n\n  const showPopup = () => {\n    // LoginPopupState.setShowPopup(true);\n    LoginState.setIsPopupShown(!isPopupShown);\n    PageWidthState.setScrollYPosition(window.scrollY);\n  };\n\n  return userName && userPassword ? /*#__PURE__*/_jsxDEV(UserNav, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"user\",\n    onClick: showPopup,\n    children: /*#__PURE__*/_jsxDEV(NavBarItem, {\n      itemIcon: /*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 35\n      }, this),\n      itemName: \"Вход\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n});\n_c2 = User;\nexport default User;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"User$observer\");\n$RefreshReg$(_c2, \"User\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Header/User/User.tsx"],"names":["observer","LoginState","UserIcon","UserNav","NavBarItem","PageWidthState","User","userName","userPassword","isPopupShown","showPopup","setIsPopupShown","setScrollYPosition","window","scrollY"],"mappings":";AAAA,SAASA,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,MAAMC,IAAI,GAAGN,QAAQ,MAAC,MAAM;AACxB,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAA2CR,UAAjD;;AAIA,QAAMS,SAAS,GAAG,MAAM;AACpB;AACAT,IAAAA,UAAU,CAACU,eAAX,CAA2B,CAACF,YAA5B;AACAJ,IAAAA,cAAc,CAACO,kBAAf,CAAkCC,MAAM,CAACC,OAAzC;AAEH,GALD;;AAOA,SAAOP,QAAQ,IAAIC,YAAZ,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADG,gBAGH;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAEE,SAAlC;AAAA,2BAEI,QAAC,UAAD;AAAY,MAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAtB;AAAoC,MAAA,QAAQ,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAHJ;AAQH,CApBoB,CAArB;MAAMJ,I;AAsBN,eAAeA,IAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport LoginState from \"../../../store/LoginState\";\r\n// import LoginPopupState from \"../../../store/LoginPopupState\";\r\nimport UserIcon from \"../../svg/UserIcon\";\r\nimport \"./User.scss\";\r\nimport UserNav from \"./UserNav/UserNav\";\r\nimport NavBarItem from \"../NavBarItem/NavBarItem\";\r\nimport PageWidthState from \"../../../store/PageWidthState\";\r\n\r\nconst User = observer(() => {\r\n    const { userName, userPassword, isPopupShown } = LoginState;\r\n\r\n\r\n\r\n    const showPopup = () => {\r\n        // LoginPopupState.setShowPopup(true);\r\n        LoginState.setIsPopupShown(!isPopupShown);\r\n        PageWidthState.setScrollYPosition(window.scrollY)\r\n\r\n    };\r\n\r\n    return userName && userPassword ? (\r\n        <UserNav />\r\n    ) : (\r\n        <button className=\"user\" onClick={showPopup}>\r\n\r\n            <NavBarItem itemIcon={<UserIcon />} itemName={\"Вход\"} />\r\n        </button>\r\n    );\r\n});\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}