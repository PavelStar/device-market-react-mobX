{"ast":null,"code":"import _slicedToArray from\"C:/Users/Pavel/Desktop/js/device-market-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{observer}from'mobx-react-lite';import{useEffect,useRef,useState}from'react';import{Link}from'react-router-dom';import LoginState from'../../../../store/LoginState';import UserIcon from'../../../svg/UserIcon';// import LoginPopupState from '../../../../store/LoginPopupState';\nimport\"./UserNav.scss\";import NavBarItem from'../../NavBarItem/NavBarItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserNav=observer(function(){var userName=LoginState.userName,userPassword=LoginState.userPassword,isPopupShown=LoginState.isPopupShown;var settingsListRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSettingsShown=_useState2[0],setIsSettingsShown=_useState2[1];useEffect(function(){if(settingsListRef.current){document.addEventListener('click',outsideClick);console.log('');}return function(){document.removeEventListener('click',outsideClick);};},[isSettingsShown]);var outsideClick=function outsideClick(e){if(e.currentTarget!==settingsListRef.current){setIsSettingsShown(false);}};var openSettings=function openSettings(e){setIsSettingsShown(!isSettingsShown);};var logOut=function logOut(){LoginState.setUserName('');LoginState.setUserPassword('');LoginState.setIsPopupShown(!isPopupShown);};return/*#__PURE__*/_jsxs(\"div\",{className:\"user-nav\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-nav__user-wrapper\",onClick:openSettings,children:/*#__PURE__*/_jsx(NavBarItem,{itemIcon:/*#__PURE__*/_jsx(UserIcon,{}),itemName:userName})}),isSettingsShown&&/*#__PURE__*/_jsxs(\"ul\",{ref:settingsListRef,className:\"user-nav__settings-list settings-list\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"settings-list__item\",children:/*#__PURE__*/_jsx(Link,{className:\"settings-list__link\",to:\"/orders-page\",children:\"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u043E\\u0432\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"settings-list__item\",children:/*#__PURE__*/_jsx(\"a\",{className:\"settings-list__link\",href:\"\",children:\"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"settings-list__item\",children:/*#__PURE__*/_jsx(\"a\",{className:\"settings-list__link\",onClick:logOut,children:\"\\u0412\\u044B\\u0439\\u0442\\u0438\"})})]})]});});export default UserNav;","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Header/User/UserNav/UserNav.tsx"],"names":["observer","useEffect","useRef","useState","Link","LoginState","UserIcon","NavBarItem","UserNav","userName","userPassword","isPopupShown","settingsListRef","isSettingsShown","setIsSettingsShown","current","document","addEventListener","outsideClick","console","log","removeEventListener","e","currentTarget","openSettings","logOut","setUserName","setUserPassword","setIsPopupShown"],"mappings":"4KAAA,OAASA,QAAT,KAAyB,iBAAzB,CACA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA;AACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,6BAAvB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAGR,QAAQ,CAAC,UAAM,CAE3B,GAAQS,CAAAA,QAAR,CAAiDJ,UAAjD,CAAQI,QAAR,CAAkBC,YAAlB,CAAiDL,UAAjD,CAAkBK,YAAlB,CAAgCC,YAAhC,CAAiDN,UAAjD,CAAgCM,YAAhC,CAEA,GAAIC,CAAAA,eAAe,CAAGV,MAAM,CAAC,IAAD,CAA5B,CAEA,cAA8CC,QAAQ,CAAC,KAAD,CAAtD,wCAAOU,eAAP,eAAwBC,kBAAxB,eAEAb,SAAS,CAAC,UAAM,CAEZ,GAAIW,eAAe,CAACG,OAApB,CAA6B,CACzBC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmCC,YAAnC,EACAC,OAAO,CAACC,GAAR,CAAY,EAAZ,EACH,CAED,MAAO,WAAM,CACTJ,QAAQ,CAACK,mBAAT,CAA6B,OAA7B,CAAsCH,YAAtC,EACH,CAFD,CAGH,CAVQ,CAUN,CAACL,eAAD,CAVM,CAAT,CAYA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACI,CAAD,CAAY,CAC7B,GAAIA,CAAC,CAACC,aAAF,GAAoBX,eAAe,CAACG,OAAxC,CAAiD,CAC7CD,kBAAkB,CAAC,KAAD,CAAlB,CACH,CACJ,CAJD,CAMA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,CAAD,CAAY,CAC7BR,kBAAkB,CAAC,CAACD,eAAF,CAAlB,CACH,CAFD,CAIA,GAAMY,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBpB,UAAU,CAACqB,WAAX,CAAuB,EAAvB,EACArB,UAAU,CAACsB,eAAX,CAA2B,EAA3B,EACAtB,UAAU,CAACuB,eAAX,CAA2B,CAACjB,YAA5B,EAEH,CALD,CAOA,mBACI,aAAK,SAAS,CAAC,UAAf,wBACI,YAAK,SAAS,CAAC,wBAAf,CACI,OAAO,CAAEa,YADb,uBAGI,KAAC,UAAD,EAAY,QAAQ,cAAE,KAAC,QAAD,IAAtB,CAAoC,QAAQ,CAAEf,QAA9C,EAHJ,EADJ,CAMKI,eAAe,eACZ,YAAI,GAAG,CAAED,eAAT,CAA0B,SAAS,CAAC,uCAApC,wBACI,WAAI,SAAS,CAAC,qBAAd,uBACI,KAAC,IAAD,EAAM,SAAS,CAAC,qBAAhB,CAAsC,EAAE,CAAC,cAAzC,mGADJ,EADJ,cAMI,WAAI,SAAS,CAAC,qBAAd,uBACI,UAAG,SAAS,CAAC,qBAAb,CAAmC,IAAI,CAAC,EAAxC,+GADJ,EANJ,cAWI,WAAI,SAAS,CAAC,qBAAd,uBACI,UAAG,SAAS,CAAC,qBAAb,CAAmC,OAAO,CAAEa,MAA5C,4CADJ,EAXJ,GAPR,GADJ,CA8BH,CAnEuB,CAAxB,CAqEA,cAAejB,CAAAA,OAAf","sourcesContent":["import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoginState from '../../../../store/LoginState';\r\nimport UserIcon from '../../../svg/UserIcon';\r\n// import LoginPopupState from '../../../../store/LoginPopupState';\r\nimport \"./UserNav.scss\";\r\nimport NavBarItem from '../../NavBarItem/NavBarItem';\r\n\r\nconst UserNav = observer(() => {\r\n\r\n    const { userName, userPassword, isPopupShown } = LoginState;\r\n\r\n    let settingsListRef = useRef(null)\r\n\r\n    const [isSettingsShown, setIsSettingsShown] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        if (settingsListRef.current) {\r\n            document.addEventListener('click', outsideClick)\r\n            console.log('')\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('click', outsideClick)\r\n        }\r\n    }, [isSettingsShown])\r\n\r\n    const outsideClick = (e: any) => {\r\n        if (e.currentTarget !== settingsListRef.current) {\r\n            setIsSettingsShown(false)\r\n        }\r\n    }\r\n\r\n    const openSettings = (e: any) => {\r\n        setIsSettingsShown(!isSettingsShown)\r\n    }\r\n\r\n    const logOut = () => {\r\n        LoginState.setUserName('')\r\n        LoginState.setUserPassword('')\r\n        LoginState.setIsPopupShown(!isPopupShown)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='user-nav'>\r\n            <div className='user-nav__user-wrapper'\r\n                onClick={openSettings}\r\n            >\r\n                <NavBarItem itemIcon={<UserIcon />} itemName={userName} />\r\n            </div>\r\n            {isSettingsShown &&\r\n                <ul ref={settingsListRef} className='user-nav__settings-list settings-list'>\r\n                    <li className='settings-list__item'>\r\n                        <Link className='settings-list__link' to=\"/orders-page\">\r\n                            История заказов\r\n                        </Link>\r\n                    </li>\r\n                    <li className='settings-list__item'>\r\n                        <a className='settings-list__link' href=\"\">\r\n                            Настройки профиля\r\n                        </a>\r\n                    </li>\r\n                    <li className='settings-list__item'>\r\n                        <a className='settings-list__link' onClick={logOut}>\r\n                            Выйти\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default UserNav;\r\n"]},"metadata":{},"sourceType":"module"}