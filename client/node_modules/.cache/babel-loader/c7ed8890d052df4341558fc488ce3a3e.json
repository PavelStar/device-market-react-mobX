{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Pagination\\\\Pagination.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Pagination.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  _s();\n\n  let {\n    itemsCount,\n    itemsPerPage,\n    startIndex,\n    setStartIndex\n  } = _ref;\n  const [numbersButtons, setNumbersButtons] = useState();\n  const [buttonsCount, setButtonsCount] = useState();\n  useEffect(() => {\n    let arrOfNumbers = [];\n\n    if (itemsCount && itemsPerPage) {\n      setButtonsCount(Math.ceil(itemsCount / itemsPerPage));\n\n      if (buttonsCount) {\n        for (let i = 1; i <= buttonsCount; i++) {\n          arrOfNumbers.push(i);\n        }\n      }\n    }\n\n    setNumbersButtons(arrOfNumbers);\n    console.log(arrOfNumbers);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: numbersButtons === null || numbersButtons === void 0 ? void 0 : numbersButtons.map(number => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => console.log(number),\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pagination, \"imVDc/E3hHaTn5W/thOpodAOYAI=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Pagination/Pagination.tsx"],"names":["React","useEffect","useState","Pagination","itemsCount","itemsPerPage","startIndex","setStartIndex","numbersButtons","setNumbersButtons","buttonsCount","setButtonsCount","arrOfNumbers","Math","ceil","i","push","console","log","map","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,mBAAP;;;AAUA,MAAMC,UAAiC,GAAG,QAA6D;AAAA;;AAAA,MAA5D;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA,UAA5B;AAAwCC,IAAAA;AAAxC,GAA4D;AAGnG,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,EAApD;AAEA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,EAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIW,YAAsB,GAAG,EAA7B;;AACA,QAAIR,UAAU,IAAIC,YAAlB,EAAgC;AAC5BM,MAAAA,eAAe,CAACE,IAAI,CAACC,IAAL,CAAUV,UAAU,GAAGC,YAAvB,CAAD,CAAf;;AACA,UAAIK,YAAJ,EAAkB;AACd,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,YAArB,EAAmCK,CAAC,EAApC,EAAwC;AACpCH,UAAAA,YAAY,CAACI,IAAb,CAAkBD,CAAlB;AACH;AACJ;AAEJ;;AAGDN,IAAAA,iBAAiB,CAACG,YAAD,CAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACH,GAhBQ,EAgBN,EAhBM,CAAT;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAA,gBACKJ,cADL,aACKA,cADL,uBACKA,cAAc,CAAEW,GAAhB,CAAqBC,MAAD,IAAY;AAC7B,4BACI;AAAA,iCAAI;AAAQ,YAAA,OAAO,EAAE,MAAMH,OAAO,CAACC,GAAR,CAAYE,MAAZ,CAAvB;AAAA,sBAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAxCD;;GAAMjB,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Pagination.scss'\r\n\r\n\r\ninterface IPagination {\r\n    itemsCount: number | undefined;\r\n    itemsPerPage: number | undefined;\r\n    startIndex: number | undefined;\r\n    setStartIndex: any;\r\n}\r\n\r\nconst Pagination: React.FC<IPagination> = ({ itemsCount, itemsPerPage, startIndex, setStartIndex }) => {\r\n\r\n\r\n    const [numbersButtons, setNumbersButtons] = useState<number[] | undefined>();\r\n\r\n    const [buttonsCount, setButtonsCount] = useState<number | undefined>()\r\n\r\n    useEffect(() => {\r\n\r\n        let arrOfNumbers: number[] = []\r\n        if (itemsCount && itemsPerPage) {\r\n            setButtonsCount(Math.ceil(itemsCount / itemsPerPage))\r\n            if (buttonsCount) {\r\n                for (let i = 1; i <= buttonsCount; i++) {\r\n                    arrOfNumbers.push(i)\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        setNumbersButtons(arrOfNumbers)\r\n        console.log(arrOfNumbers)\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='pagination'>\r\n            <ul>\r\n                {numbersButtons?.map((number) => {\r\n                    return (\r\n                        <li><button onClick={() => console.log(number)}>{number}</button></li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}