{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\MemorySelect\\\\MemorySelect.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ResponseDataState from '../../store/ResponseDataState';\nimport ProductSelectsState from '../../store/ProductSelectsState';\nimport './MemorySelect.scss';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemorySelect = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    product\n  } = _ref;\n  const {\n    responseData\n  } = ResponseDataState;\n  const {\n    selectedColor\n  } = ProductSelectsState;\n  const [productWithSameTitle, setProductWithSameTitle] = useState([]);\n  const [memoryList, setMemoryList] = useState([]);\n  const [currentProductMemory, setCurrentProductMemory] = useState();\n  useEffect(() => {\n    if (responseData) {\n      let memory = [];\n      responseData.items.forEach(item => {\n        if (product.title === item.title && !memory.includes(item.features.memory)) {\n          memory.push(item.features.memory);\n        }\n      });\n      setMemoryList(memory); // setProductWithSameTitle(responseData.items.filter((item) => {\n      //     return item.title === product.title\n      // }))\n\n      console.log(memory);\n    }\n\n    setCurrentProductMemory(product.features.memory);\n  }, []); // useEffect(() => {\n  //     currentProductMemory && ProductSelectsState.setSelectedMemory(currentProductMemory)\n  // }, [selectedColor])\n  // const changeMemory = (memory: string) => {\n  //     ProductSelectsState.setSelectedMemory(memory)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"memory-select__colors-title\",\n      children: \"\\u041E\\u0431\\u044A\\u0435\\u043C \\u043F\\u0430\\u043C\\u044F\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"memory-select__memory-list\",\n      children: memoryList.map(memory => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: product.features.memory === memory ? \"memory-select__memory-wrap memory-select__memory-wrap--active\" : \"memory-select__memory-wrap\" // style={product.color === color ? borderColor : undefined}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: product.features.memory === memory ? \"memory-select__memory-btn memory-select__memory-btn--active\" : \"memory-select__memory-btn\" // style={btnColor}\n            ,\n            type: \"button\" // onClick={() => changeMemory(memory)}\n            ,\n            children: memory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}, \"Kp190vCGRjE9QNh7BJmmHFt03Z4=\"));\n_c2 = MemorySelect;\nexport default MemorySelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MemorySelect$observer\");\n$RefreshReg$(_c2, \"MemorySelect\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/MemorySelect/MemorySelect.tsx"],"names":["React","useEffect","useState","ResponseDataState","ProductSelectsState","observer","MemorySelect","product","responseData","selectedColor","productWithSameTitle","setProductWithSameTitle","memoryList","setMemoryList","currentProductMemory","setCurrentProductMemory","memory","items","forEach","item","title","includes","features","push","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,OAAO,qBAAP;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,YAAY,GAAGD,QAAQ,SAAC,QAAyC;AAAA;;AAAA,MAAxC;AAAEE,IAAAA;AAAF,GAAwC;AAEnE,QAAM;AAAEC,IAAAA;AAAF,MAAmBL,iBAAzB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAoBL,mBAA1B;AAEA,QAAM,CAACM,oBAAD,EAAuBC,uBAAvB,IAAkDT,QAAQ,CAAc,EAAd,CAAhE;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAW,EAAX,CAA5C;AACA,QAAM,CAACY,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,EAAhE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,YAAJ,EAAkB;AACd,UAAIQ,MAAgB,GAAG,EAAvB;AAEAR,MAAAA,YAAY,CAACS,KAAb,CAAmBC,OAAnB,CAA4BC,IAAD,IAAqB;AAC5C,YAAIZ,OAAO,CAACa,KAAR,KAAkBD,IAAI,CAACC,KAAvB,IAAgC,CAACJ,MAAM,CAACK,QAAP,CAAgBF,IAAI,CAACG,QAAL,CAAcN,MAA9B,CAArC,EAA4E;AACxEA,UAAAA,MAAM,CAACO,IAAP,CAAYJ,IAAI,CAACG,QAAL,CAAcN,MAA1B;AACH;AAEJ,OALD;AAMAH,MAAAA,aAAa,CAACG,MAAD,CAAb,CATc,CAUd;AACA;AACA;;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACH;;AAEDD,IAAAA,uBAAuB,CAACR,OAAO,CAACe,QAAR,CAAiBN,MAAlB,CAAvB;AACH,GAlBQ,EAkBN,EAlBM,CAAT,CATmE,CA6BnE;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA,gBACKJ,UAAU,CAACc,GAAX,CAAgBV,MAAD,IAAoB;AAEhC,4BACI;AAAI,UAAA,SAAS,EAAET,OAAO,CAACe,QAAR,CAAiBN,MAAjB,KAA4BA,MAA5B,GAAqC,+DAArC,GAAuG,4BAAtH,CACA;AADA;AAAA,iCAII;AACI,YAAA,SAAS,EACLT,OAAO,CAACe,QAAR,CAAiBN,MAAjB,KAA4BA,MAA5B,GACM,6DADN,GAEM,2BAJd,CAMI;AANJ;AAOI,YAAA,IAAI,EAAC,QAPT,CAQA;AARA;AAAA,sBAUKA;AAVL;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAmBH,OArBA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAnE4B,kCAA7B;MAAMV,Y;AAqEN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { IItemData } from '../../interfaces/IItemData'\r\nimport ItemDataState from '../../store/ItemDataState'\r\nimport ResponseDataState from '../../store/ResponseDataState'\r\nimport ProductSelectsState from '../../store/ProductSelectsState'\r\nimport './MemorySelect.scss'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nconst MemorySelect = observer(({ product }: { product: IItemData }) => {\r\n\r\n    const { responseData } = ResponseDataState\r\n    const { selectedColor } = ProductSelectsState\r\n\r\n    const [productWithSameTitle, setProductWithSameTitle] = useState<IItemData[]>([])\r\n    const [memoryList, setMemoryList] = useState<string[]>([])\r\n    const [currentProductMemory, setCurrentProductMemory] = useState<string>()\r\n\r\n    useEffect(() => {\r\n        if (responseData) {\r\n            let memory: string[] = []\r\n\r\n            responseData.items.forEach((item: IItemData) => {\r\n                if (product.title === item.title && !memory.includes(item.features.memory)) {\r\n                    memory.push(item.features.memory)\r\n                }\r\n\r\n            })\r\n            setMemoryList(memory)\r\n            // setProductWithSameTitle(responseData.items.filter((item) => {\r\n            //     return item.title === product.title\r\n            // }))\r\n            console.log(memory)\r\n        }\r\n\r\n        setCurrentProductMemory(product.features.memory)\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     currentProductMemory && ProductSelectsState.setSelectedMemory(currentProductMemory)\r\n    // }, [selectedColor])\r\n\r\n    // const changeMemory = (memory: string) => {\r\n    //     ProductSelectsState.setSelectedMemory(memory)\r\n    // }\r\n\r\n    return (\r\n        <div className=\"memory-select\">\r\n            <h3 className=\"memory-select__colors-title\">Объем памяти</h3>\r\n            <ul className=\"memory-select__memory-list\">\r\n                {memoryList.map((memory: string) => {\r\n\r\n                    return (\r\n                        <li className={product.features.memory === memory ? \"memory-select__memory-wrap memory-select__memory-wrap--active\" : \"memory-select__memory-wrap\"}\r\n                        // style={product.color === color ? borderColor : undefined}\r\n                        >\r\n\r\n                            <button\r\n                                className={\r\n                                    product.features.memory === memory\r\n                                        ? \"memory-select__memory-btn memory-select__memory-btn--active\"\r\n                                        : \"memory-select__memory-btn\"\r\n                                }\r\n                                // style={btnColor}\r\n                                type=\"button\"\r\n                            // onClick={() => changeMemory(memory)}\r\n                            >\r\n                                {memory}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MemorySelect"]},"metadata":{},"sourceType":"module"}