{"ast":null,"code":"import{observer}from\"mobx-react-lite\";import LoginState from\"../../../store/LoginState\";// import LoginPopupState from \"../../../store/LoginPopupState\";\nimport UserIcon from\"../../svg/UserIcon\";import\"./User.scss\";import UserNav from\"./UserNav/UserNav\";import NavBarItem from\"../NavBarItem/NavBarItem\";import PageWidthState from\"../../../store/PageWidthState\";import{jsx as _jsx}from\"react/jsx-runtime\";var User=observer(function(){var userName=LoginState.userName,userPassword=LoginState.userPassword,isPopupShown=LoginState.isPopupShown;var showPopup=function showPopup(){// LoginPopupState.setShowPopup(true);\nLoginState.setIsPopupShown(!isPopupShown);PageWidthState.setScrollYPosition(window.scrollY);};return userName&&userPassword?/*#__PURE__*/_jsx(UserNav,{}):/*#__PURE__*/_jsx(\"button\",{className:\"user\",onClick:showPopup,children:/*#__PURE__*/_jsx(NavBarItem,{itemIcon:/*#__PURE__*/_jsx(UserIcon,{}),itemName:\"Вход\"})});});export default User;","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Header/User/User.tsx"],"names":["observer","LoginState","UserIcon","UserNav","NavBarItem","PageWidthState","User","userName","userPassword","isPopupShown","showPopup","setIsPopupShown","setScrollYPosition","window","scrollY"],"mappings":"AAAA,OAASA,QAAT,KAAyB,iBAAzB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,oBAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,C,2CAEA,GAAMC,CAAAA,IAAI,CAAGN,QAAQ,CAAC,UAAM,CACxB,GAAQO,CAAAA,QAAR,CAAiDN,UAAjD,CAAQM,QAAR,CAAkBC,YAAlB,CAAiDP,UAAjD,CAAkBO,YAAlB,CAAgCC,YAAhC,CAAiDR,UAAjD,CAAgCQ,YAAhC,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB;AACAT,UAAU,CAACU,eAAX,CAA2B,CAACF,YAA5B,EACAJ,cAAc,CAACO,kBAAf,CAAkCC,MAAM,CAACC,OAAzC,EAEH,CALD,CAOA,MAAOP,CAAAA,QAAQ,EAAIC,YAAZ,cACH,KAAC,OAAD,IADG,cAGH,eAAQ,SAAS,CAAC,MAAlB,CAAyB,OAAO,CAAEE,SAAlC,uBAEI,KAAC,UAAD,EAAY,QAAQ,cAAE,KAAC,QAAD,IAAtB,CAAoC,QAAQ,CAAE,MAA9C,EAFJ,EAHJ,CAQH,CApBoB,CAArB,CAsBA,cAAeJ,CAAAA,IAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport LoginState from \"../../../store/LoginState\";\r\n// import LoginPopupState from \"../../../store/LoginPopupState\";\r\nimport UserIcon from \"../../svg/UserIcon\";\r\nimport \"./User.scss\";\r\nimport UserNav from \"./UserNav/UserNav\";\r\nimport NavBarItem from \"../NavBarItem/NavBarItem\";\r\nimport PageWidthState from \"../../../store/PageWidthState\";\r\n\r\nconst User = observer(() => {\r\n    const { userName, userPassword, isPopupShown } = LoginState;\r\n\r\n\r\n\r\n    const showPopup = () => {\r\n        // LoginPopupState.setShowPopup(true);\r\n        LoginState.setIsPopupShown(!isPopupShown);\r\n        PageWidthState.setScrollYPosition(window.scrollY)\r\n\r\n    };\r\n\r\n    return userName && userPassword ? (\r\n        <UserNav />\r\n    ) : (\r\n        <button className=\"user\" onClick={showPopup}>\r\n\r\n            <NavBarItem itemIcon={<UserIcon />} itemName={\"Вход\"} />\r\n        </button>\r\n    );\r\n});\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}