{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nexport const useFetchData = async initialValue => {\n  _s();\n\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  try {\n    setIsLoading(true);\n  } catch (e) {\n    setError(e);\n  } finally {\n    setIsLoading(false);\n  }\n\n  const url = \"https://mocki.io/v1/1e73398f-6067-486c-b37c-415136f22756\";\n  const res = await axios.get(url); // const resData: IResponseData = res.data;\n\n  setData(res.data);\n  return [data, isLoading, error];\n};\n\n_s(useFetchData, \"v26ZckLRwefducwzSjrxEZ8tRzg=\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/hooks/useFetchData.ts"],"names":["axios","useState","useFetchData","initialValue","data","setData","isLoading","setIsLoading","error","setError","e","url","res","get"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAOC,YAAP,IAA6B;AAAA;;AACxD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;;AAEA,MAAI;AACHM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,GAFD,CAEE,OAAOG,CAAP,EAAe;AAChBD,IAAAA,QAAQ,CAACC,CAAD,CAAR;AACA,GAJD,SAIU;AACTH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;;AAED,QAAMI,GAAW,GAAG,0DAApB;AACA,QAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,CAAlB,CAdwD,CAexD;;AACAN,EAAAA,OAAO,CAACO,GAAG,CAACR,IAAL,CAAP;AAEA,SAAO,CAACA,IAAD,EAAOE,SAAP,EAAkBE,KAAlB,CAAP;AACA,CAnBM;;GAAMN,Y","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { IResponseData } from \"../interfaces/IResponseData\";\r\n\r\nexport const useFetchData = async (initialValue: any) => {\r\n\tconst [data, setData] = useState();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState();\r\n\r\n\ttry {\r\n\t\tsetIsLoading(true);\r\n\t} catch (e: any) {\r\n\t\tsetError(e);\r\n\t} finally {\r\n\t\tsetIsLoading(false);\r\n\t}\r\n\r\n\tconst url: string = \"https://mocki.io/v1/1e73398f-6067-486c-b37c-415136f22756\";\r\n\tconst res = await axios.get(url);\r\n\t// const resData: IResponseData = res.data;\r\n\tsetData(res.data);\r\n\r\n\treturn [data, isLoading, error];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}