{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Footer\\\\LinksList\\\\LinksList.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Transition } from 'react-transition-group';\nimport \"./LinksList.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LinksList = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    items,\n    linkFunction,\n    isListShown\n  } = _ref;\n  const linksListRef = useRef(null); // const [isListShown, setIsListShown] = useState(false)\n\n  useEffect(() => {//         if (linksListRef.current !== null) {\n    //             if (isListShown) {\n    //                 linksListRef.current.classList.add('links-list__wrap--on-open')\n    //             }\n    // \n    //             if (!isListShown) {\n    // \n    //                 linksListRef.current.classList.remove('links-list__wrap--on-open')\n    //             }\n    //         }\n  }, [isListShown]);\n  return /*#__PURE__*/_jsxDEV(Transition, {\n    in: isListShown,\n    timeout: 2000,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    children: state => {\n      /*#__PURE__*/\n      _jsxDEV(\"ul\", {\n        className: `links-list__list ${state}`,\n        children: items && items.map(item => {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            className: \"links-list__item\",\n            to: \"/category\",\n            onClick: () => linkFunction(item),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}, \"5SEturzQI6v0ZyU4P5uFUC5WQow=\"));\n_c2 = LinksList;\nexport default LinksList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinksList$observer\");\n$RefreshReg$(_c2, \"LinksList\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Footer/LinksList/LinksList.tsx"],"names":["observer","React","useEffect","useRef","Link","Transition","LinksList","items","linkFunction","isListShown","linksListRef","state","map","item"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,kBAAP;;AAQA,MAAMC,SAA+B,GAAGN,QAAQ,SAAC,QAA0C;AAAA;;AAAA,MAAzC;AAAEO,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,GAAyC;AAEvF,QAAMC,YAAY,GAAGP,MAAM,CAAiB,IAAjB,CAA3B,CAFuF,CAGvF;;AAEAD,EAAAA,SAAS,CAAC,MAAM,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GAZQ,EAYN,CAACO,WAAD,CAZM,CAAT;AAgBA,sBACI,QAAC,UAAD;AAAY,IAAA,EAAE,EAAEA,WAAhB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,YAAY,MAAxD;AAAyD,IAAA,aAAa,MAAtE;AAAA,cACKE,KAAK,IAAI;AACN;AAAA;AAAI,QAAA,SAAS,EAAG,oBAAmBA,KAAM,EAAzC;AAAA,kBACKJ,KAAK,IACFA,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AAChB,8BACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,kBAAhB;AAAmC,YAAA,EAAE,EAAC,WAAtC;AAAkD,YAAA,OAAO,EAAE,MAAML,YAAY,CAACK,IAAD,CAA7E;AAAA,mCACI;AAAA,wBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAND;AAFR;AAAA;AAAA;AAAA;AAAA;AAUH;AAZL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAtC+C,kCAAhD;MAAMP,S;AAwCN,eAAeA,SAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageWidthState from \"../../../store/PageWidthState\";\r\nimport { Transition } from 'react-transition-group';\r\nimport \"./LinksList.scss\";\r\n\r\ninterface ILinksList {\r\n    items: string[] | undefined;\r\n    linkFunction?: any;\r\n    isListShown: boolean;\r\n}\r\n\r\nconst LinksList: React.FC<ILinksList> = observer(({ items, linkFunction, isListShown }) => {\r\n\r\n    const linksListRef = useRef<HTMLDivElement>(null)\r\n    // const [isListShown, setIsListShown] = useState(false)\r\n\r\n    useEffect(() => {\r\n        //         if (linksListRef.current !== null) {\r\n        //             if (isListShown) {\r\n        //                 linksListRef.current.classList.add('links-list__wrap--on-open')\r\n        //             }\r\n        // \r\n        //             if (!isListShown) {\r\n        // \r\n        //                 linksListRef.current.classList.remove('links-list__wrap--on-open')\r\n        //             }\r\n        //         }\r\n\r\n    }, [isListShown]);\r\n\r\n\r\n\r\n    return (\r\n        <Transition in={isListShown} timeout={2000} mountOnEnter unmountOnExit>\r\n            {state => {\r\n                <ul className={`links-list__list ${state}`} >\r\n                    {items &&\r\n                        items.map((item) => {\r\n                            return (\r\n                                <Link className=\"links-list__item\" to=\"/category\" onClick={() => linkFunction(item)}>\r\n                                    <span>{item}</span>\r\n                                </Link>\r\n                            );\r\n                        })}\r\n                </ul>\r\n            }}\r\n        </Transition>\r\n\r\n    );\r\n});\r\n\r\nexport default LinksList;\r\n"]},"metadata":{},"sourceType":"module"}