{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Footer\\\\LinksList\\\\LinksList.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Transition } from 'react-transition-group';\nimport \"./LinksList.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LinksList = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    items,\n    linkFunction,\n    isListShown\n  } = _ref;\n  const linksListRef = useRef(null); // const [isListShown, setIsListShown] = useState(false)\n\n  useEffect(() => {\n    if (linksListRef.current !== null) {\n      if (isListShown) {\n        linksListRef.current.classList.add('links-list__wrap--on-open');\n      }\n\n      if (!isListShown) {\n        linksListRef.current.classList.remove('links-list__wrap--on-open');\n      }\n    }\n  }, [isListShown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"links-list__wrap\",\n    ref: linksListRef,\n    children: /*#__PURE__*/_jsxDEV(Transition, {\n      in: isListShown,\n      timeout: 2000,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: state => {\n        /*#__PURE__*/\n        _jsxDEV(\"ul\", {\n          className: `links-list__list ${state}`,\n          children: isListShown && items && items.map(item => {\n            return /*#__PURE__*/_jsxDEV(Link, {\n              className: \"links-list__item\",\n              to: \"/category\",\n              onClick: () => linkFunction(item),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}, \"5SEturzQI6v0ZyU4P5uFUC5WQow=\"));\n_c2 = LinksList;\nexport default LinksList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinksList$observer\");\n$RefreshReg$(_c2, \"LinksList\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Footer/LinksList/LinksList.tsx"],"names":["observer","React","useEffect","useRef","Link","Transition","LinksList","items","linkFunction","isListShown","linksListRef","current","classList","add","remove","state","map","item"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,kBAAP;;AAQA,MAAMC,SAA+B,GAAGN,QAAQ,SAAC,QAA0C;AAAA;;AAAA,MAAzC;AAAEO,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,GAAyC;AAEvF,QAAMC,YAAY,GAAGP,MAAM,CAAiB,IAAjB,CAA3B,CAFuF,CAGvF;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,YAAY,CAACC,OAAb,KAAyB,IAA7B,EAAmC;AAC/B,UAAIF,WAAJ,EAAiB;AACbC,QAAAA,YAAY,CAACC,OAAb,CAAqBC,SAArB,CAA+BC,GAA/B,CAAmC,2BAAnC;AACH;;AAED,UAAI,CAACJ,WAAL,EAAkB;AAEdC,QAAAA,YAAY,CAACC,OAAb,CAAqBC,SAArB,CAA+BE,MAA/B,CAAsC,2BAAtC;AACH;AACJ;AAEJ,GAZQ,EAYN,CAACL,WAAD,CAZM,CAAT;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,GAAG,EAAEC,YAAvC;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAED,WAAhB;AAA6B,MAAA,OAAO,EAAE,IAAtC;AAA4C,MAAA,YAAY,MAAxD;AAAyD,MAAA,aAAa,MAAtE;AAAA,gBACKM,KAAK,IAAI;AACN;AAAA;AAAI,UAAA,SAAS,EAAG,oBAAmBA,KAAM,EAAzC;AAAA,oBACKN,WAAW,IACRF,KADH,IAEGA,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AAChB,gCACI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,kBAAhB;AAAmC,cAAA,EAAE,EAAC,WAAtC;AAAkD,cAAA,OAAO,EAAE,MAAMT,YAAY,CAACS,IAAD,CAA7E;AAAA,qCACI;AAAA,0BAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WAND;AAHR;AAAA;AAAA;AAAA;AAAA;AAWH;AAbL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAzC+C,kCAAhD;MAAMX,S;AA2CN,eAAeA,SAAf","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageWidthState from \"../../../store/PageWidthState\";\r\nimport { Transition } from 'react-transition-group';\r\nimport \"./LinksList.scss\";\r\n\r\ninterface ILinksList {\r\n    items: string[] | undefined;\r\n    linkFunction?: any;\r\n    isListShown: boolean;\r\n}\r\n\r\nconst LinksList: React.FC<ILinksList> = observer(({ items, linkFunction, isListShown }) => {\r\n\r\n    const linksListRef = useRef<HTMLDivElement>(null)\r\n    // const [isListShown, setIsListShown] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (linksListRef.current !== null) {\r\n            if (isListShown) {\r\n                linksListRef.current.classList.add('links-list__wrap--on-open')\r\n            }\r\n\r\n            if (!isListShown) {\r\n\r\n                linksListRef.current.classList.remove('links-list__wrap--on-open')\r\n            }\r\n        }\r\n\r\n    }, [isListShown]);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"links-list__wrap\" ref={linksListRef}>\r\n            <Transition in={isListShown} timeout={2000} mountOnEnter unmountOnExit>\r\n                {state => {\r\n                    <ul className={`links-list__list ${state}`} >\r\n                        {isListShown &&\r\n                            items &&\r\n                            items.map((item) => {\r\n                                return (\r\n                                    <Link className=\"links-list__item\" to=\"/category\" onClick={() => linkFunction(item)}>\r\n                                        <span>{item}</span>\r\n                                    </Link>\r\n                                );\r\n                            })}\r\n                    </ul>\r\n                }}\r\n            </Transition>\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default LinksList;\r\n"]},"metadata":{},"sourceType":"module"}