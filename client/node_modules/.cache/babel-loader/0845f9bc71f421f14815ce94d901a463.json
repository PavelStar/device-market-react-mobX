{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\FiltersPanel\\\\CheckboxCategory\\\\CheckboxCategory.tsx\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport FiltersSettingsState from \"../../../store/FiltersSettingsState\";\nimport \"./CheckboxCategory.scss\";\nimport \"../checbox.scss\";\nimport MarkerIcon from \"../../svg/MarkerIcon\";\nimport { SetFilterSettings } from \"../../../Utils/SetFilterSettings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckboxCategory = observer(_c = _ref => {\n  let {\n    category\n  } = _ref;\n  const {\n    selectedCategories\n  } = FiltersSettingsState;\n  const {\n    categoryName\n  } = category;\n\n  const addCategory = () => {\n    if (!selectedCategories.includes(category.categoryName)) {\n      FiltersSettingsState.setSelectedCategories([...selectedCategories.concat(category.categoryName)]);\n      FiltersSettingsState.setItemsToShow(SetFilterSettings());\n    }\n\n    if (selectedCategories.includes(category.categoryName)) {\n      FiltersSettingsState.setSelectedCategories([...selectedCategories.concat(category.categoryName)]);\n      FiltersSettingsState.setSelectedCategories(selectedCategories.filter(item => {\n        return item != categoryName;\n      }));\n      FiltersSettingsState.setItemsToShow(SetFilterSettings());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkbox-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"visually-hidden\",\n      id: categoryName,\n      type: \"checkbox\",\n      name: \"category-item\",\n      checked: selectedCategories.includes(categoryName) ? true : false,\n      onChange: addCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-border\",\n      children: /*#__PURE__*/_jsxDEV(MarkerIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"filter-checkbox\",\n      htmlFor: categoryName,\n      children: categoryName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n});\n_c2 = CheckboxCategory;\nexport default CheckboxCategory;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckboxCategory$observer\");\n$RefreshReg$(_c2, \"CheckboxCategory\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/FiltersPanel/CheckboxCategory/CheckboxCategory.tsx"],"names":["observer","React","FiltersSettingsState","MarkerIcon","SetFilterSettings","CheckboxCategory","category","selectedCategories","categoryName","addCategory","includes","setSelectedCategories","concat","setItemsToShow","filter","item"],"mappings":";AACA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAmD,OAAnD;AAEA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAO,yBAAP;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;;AAOA,MAAMC,gBAA0C,GAAGL,QAAQ,MAAC,QAAkB;AAAA,MAAjB;AAAEM,IAAAA;AAAF,GAAiB;AAE1E,QAAM;AAAEC,IAAAA;AAAF,MAAyBL,oBAA/B;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAmBF,QAAzB;;AAEA,QAAMG,WAAW,GAAG,MAAM;AACtB,QAAI,CAACF,kBAAkB,CAACG,QAAnB,CAA4BJ,QAAQ,CAACE,YAArC,CAAL,EAAyD;AACrDN,MAAAA,oBAAoB,CAACS,qBAArB,CAA2C,CAAC,GAAGJ,kBAAkB,CAACK,MAAnB,CAA0BN,QAAQ,CAACE,YAAnC,CAAJ,CAA3C;AACAN,MAAAA,oBAAoB,CAACW,cAArB,CAAoCT,iBAAiB,EAArD;AACH;;AAED,QAAIG,kBAAkB,CAACG,QAAnB,CAA4BJ,QAAQ,CAACE,YAArC,CAAJ,EAAwD;AACpDN,MAAAA,oBAAoB,CAACS,qBAArB,CAA2C,CAAC,GAAGJ,kBAAkB,CAACK,MAAnB,CAA0BN,QAAQ,CAACE,YAAnC,CAAJ,CAA3C;AACAN,MAAAA,oBAAoB,CAACS,qBAArB,CAA2CJ,kBAAkB,CAACO,MAAnB,CAA2BC,IAAD,IAAU;AAC3E,eAAOA,IAAI,IAAIP,YAAf;AACH,OAF0C,CAA3C;AAGAN,MAAAA,oBAAoB,CAACW,cAArB,CAAoCT,iBAAiB,EAArD;AAEH;AACJ,GAdD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,EAAE,EAAEI,YAFR;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,IAAI,EAAC,eAJT;AAKI,MAAA,OAAO,EAAED,kBAAkB,CAACG,QAAnB,CAA4BF,YAA5B,IAA4C,IAA5C,GAAmD,KALhE;AAMI,MAAA,QAAQ,EAAEC;AANd;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,OAAO,EAAED,YAA5C;AAAA,gBAA2DA;AAA3D;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA1C0D,CAA3D;MAAMH,gB;AA4CN,eAAeA,gBAAf","sourcesContent":["import { toJS } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { ICategory } from \"../../../interfaces/ICategory\";\r\nimport FiltersSettingsState from \"../../../store/FiltersSettingsState\";\r\nimport \"./CheckboxCategory.scss\";\r\nimport \"../checbox.scss\";\r\nimport MarkerIcon from \"../../svg/MarkerIcon\";\r\nimport { SetFilterSettings } from \"../../../Utils/SetFilterSettings\";\r\n\r\ninterface IInputCategory {\r\n    category: ICategory\r\n}\r\n\r\n\r\nconst CheckboxCategory: React.FC<IInputCategory> = observer(({ category }) => {\r\n\r\n    const { selectedCategories } = FiltersSettingsState\r\n\r\n    const { categoryName } = category\r\n\r\n    const addCategory = () => {\r\n        if (!selectedCategories.includes(category.categoryName)) {\r\n            FiltersSettingsState.setSelectedCategories([...selectedCategories.concat(category.categoryName)])\r\n            FiltersSettingsState.setItemsToShow(SetFilterSettings());\r\n        }\r\n\r\n        if (selectedCategories.includes(category.categoryName)) {\r\n            FiltersSettingsState.setSelectedCategories([...selectedCategories.concat(category.categoryName)])\r\n            FiltersSettingsState.setSelectedCategories(selectedCategories.filter((item) => {\r\n                return item != categoryName\r\n            }))\r\n            FiltersSettingsState.setItemsToShow(SetFilterSettings());\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"checkbox-wrapper\">\r\n            <input\r\n                className=\"visually-hidden\"\r\n                id={categoryName}\r\n                type=\"checkbox\"\r\n                name=\"category-item\"\r\n                checked={selectedCategories.includes(categoryName) ? true : false}\r\n                onChange={addCategory}\r\n            />\r\n            <div className=\"checkbox-border\">\r\n                <MarkerIcon />\r\n            </div>\r\n            <label className=\"filter-checkbox\" htmlFor={categoryName}>{categoryName}</label>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CheckboxCategory;\r\n"]},"metadata":{},"sourceType":"module"}