{"version":3,"sources":["store/PageWidthState.ts","store/FiltersSettingsState.ts","store/ResponseDataState.ts","store/SortingByState.ts","Utils/SetFilterSettings.ts","Utils/setSortByItems.ts","Utils/ResetFilters.ts","components/Header/NavBarItem/NavBarItem.tsx","components/svg/HomeIcon.tsx","components/Logo/Logo.tsx","store/SearchState.ts","store/ItemDataState.ts","components/SearchBar/SearchResultsList/SearchResultsList.tsx","components/SearchBar/SearchField/SearchField.tsx","components/svg/CloseBtn.tsx","Utils/ScrollLockOnFixed.ts","components/SearchBar/SearchBar.tsx","store/CartState.ts","components/svg/CartIcon.tsx","components/Header/Cart/Cart.tsx","store/LoginState.ts","components/svg/UserIcon.tsx","components/Header/User/UserNav/UserNav.tsx","components/Header/User/User.tsx","components/svg/CatalogIcon.tsx","components/buttons/CatalogLink/CatalogLink.tsx","components/svg/SearchIcon.tsx","components/buttons/SubmitBtn/SubmitBtn.tsx","components/LoginPopup/LoginPopup.tsx","components/Header/Header.tsx","API/ApiService.ts","components/CategoryItem/CategoryItem.tsx","Utils/sortByCategory.ts","components/categories/Categories.tsx","components/ProductPrice/ProductPrice.tsx","components/svg/StarIcon.tsx","components/ProductRating/ProductRating.tsx","components/svg/RemoveFromCartIcon.tsx","components/buttons/ToCartBtn/ToCartBtn.tsx","components/svg/ArrowIcon.tsx","components/buttons/ToItemLink/ToItemLink.tsx","components/ItemCard/ItemCard.tsx","components/Slider/SliderButtons/SwitchBtn/SwitchBtn.tsx","components/Slider/SliderButtons/DotsBtns/DotsBtns.tsx","components/Slider/Slider.tsx","components/Loaders/HomePageLoaders/CategoriesLoader/CategoriesLoader.tsx","components/Loaders/HomePageLoaders/SliderLoader/SliderLoader.tsx","pages/HomePage/HomePage.tsx","store/OrdersPageState.ts","components/buttons/BackBtn/BackBtn.tsx","components/buttons/ClearCartBtn/ClearCartBtn.tsx","components/Cart/TotalPriceCounter/TotalPriceCounter.tsx","components/StatusEmptyBlock/StatusEmptyBlock.tsx","components/svg/EmptyCart.tsx","components/Cart/Counter/Counter.tsx","components/Cart/CartItem/CartItem.tsx","components/Cart/CartItems/CartItems.tsx","components/Cart/Cart.tsx","pages/CartPage/CartPage.tsx","pages/NotFound/NotFound.tsx","components/svg/MarkerIcon.tsx","components/FiltersPanel/CheckboxCategory/CheckboxCategory.tsx","components/FiltersPanel/CheckboxBrand/CheckboxBrand.tsx","components/PriceRange/PriceRange.tsx","components/Switcher/Switcher.tsx","components/buttons/ResetFiltersBtn/ResetFiltersBtn.tsx","components/FiltersPanel/FiltersPanel.tsx","components/Pagination/Pagination.tsx","components/svg/SortingArrows.tsx","components/SortingSelect/SortingSelect.tsx","components/ResultsBlock/ResultsList/ResultsList.tsx","components/ResultsBlock/ResultsBlock.tsx","components/ItemsFoundCounter/ItemsFoundCounter.tsx","pages/CatalogPage/CatalogPage.tsx","components/ReviewsList/ReviewsList.tsx","components/Features/Features.tsx","components/TabsList/TabsList.tsx","components/Product/ProductSelects/ColorSelect/ColorSelect.tsx","Utils/setColorName.ts","components/Product/ProductSelects/MemorySelect/MemorySelect.tsx","components/Product/ProductSelects/ProductSelects.tsx","components/Product/ProductGallery/ProductGallery.tsx","pages/ProductPage/ProductPage.tsx","components/svg/HistoryIcon.tsx","pages/OrdersPage/OrdersPage.tsx","AppRouter.tsx","Utils/sortByBrand.ts","components/Footer/FooterNavList/FooterNavList.tsx","components/Footer/Footer.tsx","Utils/ScrollToTop.tsx","App.tsx","index.tsx"],"names":["PageWidthState","isMobile","window","innerWidth","itemCardWidth","scrollYPosition","makeAutoObservable","this","width","position","FiltersSettingsState","itemsFound","allFilteredItems","resultsByPagination","isFiltersShown","selectedCategories","selectedBrands","priceRange","isPriceRangeReseted","isDiscount","isAvailable","count","items","value","res","ResponseDataState","responseData","SortingByState","sortingByType","SetFilterSettings","filter","item","length","includes","category","brand","price","priceInfo","fullPrice","discountAmount","discount","sort","a","b","typeOfSortA","typeOfSortB","rating","releaseDate","ResetFilters","setSelectedCategories","setSelectedBrands","setPriceRange","setIsDiscount","setIsAvailable","setIsPriceRangeReseted","setAllFilteredItems","NavBarItem","itemIcon","itemName","className","HomeIcon","xmlns","height","x","y","enableBackground","version","viewBox","xmlSpace","d","Logo","observer","logoType","to","onClick","SearchState","searchInputValue","isSearchShown","isResultsShown","searchResults","isFocused","headerHeight","searchBarHeight","results","focus","ItemDataState","itemData","urlName","data","id","SearchResultsList","resultsHeight","searchInnerRef","searchResultsRef","useRef","useEffect","document","addEventListener","outsideSearchClick","removeEventListener","setSearchResults","title","toLocaleLowerCase","e","current","contains","target","setIsResultsShown","ref","map","color","snippetImage","images","memory","features","setItemData","setIsSearchShown","setSearchInputValue","clearAllBodyScrollLocks","onResultClick","src","alt","SearchField","onChange","currentTarget","onHandleChange","type","placeholder","onFocus","CloseBtn","ScrollLockOnFixed","scrollType","headerRef","scrollWidthBefore","body","clientWidth","undefined","style","setProperty","classList","add","scrollWidthAfter","paddingRight","borderRight","remove","scrollTo","SearchBar","setIsNavShown","searchBarRef","overlayRef","CartState","cartItems","priceSum","sum","CartIcon","fill","Cart","LoginState","isPopupShown","userName","userPassword","name","password","UserIcon","UserNav","settingsListRef","useState","isSettingsShown","setIsSettingsShown","outsideClick","console","log","href","setUserName","setUserPassword","setIsPopupShown","User","setScrollYPosition","scrollY","CatalogIcon","CatalogLink","isNav","btnName","SearchIcon","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","SubmitBtn","userLogined","LoginPopup","closeBtnRef","loginRef","loginPopupRef","isPassShown","setIsPassShown","loginValue","setLoginValue","passwordValue","setPasswordValue","inputHandleChange","closePopup","htmlFor","checked","Header","headerNavRef","setHeaderHeight","clientHeight","ApiService","axios","get","resData","CategoryItem","itemSection","categoryName","image","backgroundImage","sortByCategory","Categories","sectionName","categories","ProductPrice","StarIcon","fillRule","transform","ProductRating","starsIds","ratingPercentage","setRatingPercentage","listRef","RemoveFromCartIcon","clipRule","ToCartBtn","toCartItem","isBtnLite","isItemInCart","setIsItemInCart","forEach","i","setCartItems","concat","ArrowIcon","ToItemLink","navigate","useNavigate","ItemCard","inPageView","inSliderView","itemCardRef","reviews","reviewsInfo","categoryType","SwitchBtn","btnType","DotsBtns","Slider","slideCount","sliderItems","setSliderItems","SwiperCore","use","Navigation","Pagination","loop","breakpoints","slidesPerView","centeredSlides","pagination","el","clickable","navigation","nextEl","prevEl","spaceBetween","CategoriesLoader","SliderLoader","HomePage","apiService","setTimeout","getData","then","setResponseData","itemsFromCart","orderSum","orderDate","date","BackBtn","ClearCartBtn","setPriceSum","TotalPriceCounter","reduce","StatusEmpty","EmptyCart","Counter","itemPrice","cartItem","disabled","amount","CartItem","sliderImages","CartItems","OrdersPageState","isOrderSuccess","setIsOrderSuccess","setItemsFromCart","setOrderSum","setOrderDate","Date","toLocaleDateString","CartPage","NotFound","MarkerIcon","CheckboxCategory","PriceRange","now","dynamicKey","setDynamicKey","handleChange","min","max","step","defaultValue","onAfterChange","onSliderChange","Switcher","state","Switch","ClearFiltersBtn","FiltersPanel","itemsToShowCount","filtersRef","showBtnRef","showFilters","setIsFiltersShown","brands","itemsPerPage","startIndex","setStartIndex","buttonsList","setButtonsList","selectedBtn","setSelectedBtn","arrOfNumbers","Math","ceil","push","setResultsByPagination","slice","number","buttonHandleClick","SortingArrows","SortingSelect","setSortingByType","sortBy","selected","ResultsList","ResultsBlock","responseItems","ItemsFoundCounter","setItemsFound","CatalogPage","filtersWrapRef","ReviewsList","reviewData","reviewDate","userRating","userMessage","toString","Features","diagonal","platform","TabsList","tabName","setTabName","ColorSelect","colorsList","onSelectHandleChange","colorItem","colorName","expression","setColorName","btnColor","backgroundColor","MemorySelect","memoryList","ProductSelects","product","productsWithSameTitle","setProductsWithSameTitle","setColorsList","setMemoryList","colors","memories","selectValue","selectType","foundedItem","find","ProductGallery","original","thumbnail","useBrowserFullscreen","showPlayButton","ProductPage","params","useParams","String","responseFn","HistoryIcon","OrdersPage","index","reverse","AppRouter","path","element","sortByBrand","FooterNavList","linkFunction","isListShown","setIsListShown","listWrapHeight","setListWrapHeight","listWrapRef","CSSTransition","in","timeout","mountOnEnter","unmountOnExit","onEntering","onExiting","classNames","Footer","setIsCategoriesListShown","setIsBrandsListShown","ScrollToTop","props","location","useLocation","children","App","onWindowResize","setIsMobile","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e7c821df.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nclass PageWidthState {\r\n\tisMobile: boolean = window.innerWidth >= 768 ? false : true;\r\n\titemCardWidth: number | undefined;\r\n\tscrollYPosition: number | undefined;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetIsMobile(width: boolean) {\r\n\t\tthis.isMobile = width;\r\n\t}\r\n\r\n\tsetItemCardWidth(width: number) {\r\n\t\tthis.itemCardWidth = width;\r\n\t}\r\n\r\n\tsetScrollYPosition(position: number) {\r\n\t\tthis.scrollYPosition = position;\r\n\t}\r\n}\r\n\r\nexport default new PageWidthState();\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport { ICategory } from \"../interfaces/ICategory\";\r\nimport { IItemData } from \"../interfaces/IItemData\";\r\nimport { IResponseData } from \"../interfaces/IResponseData\";\r\n\r\nclass FiltersSettingsState {\r\n\titemsFound: number | undefined;\r\n\tallFilteredItems: IItemData[] | undefined;\r\n\tresultsByPagination: IItemData[] | undefined;\r\n\tisFiltersShown: boolean = false;\r\n\tselectedCategories: string[] = [];\r\n\tselectedBrands: string[] = [];\r\n\tpriceRange: number[] = [3000, 200000];\r\n\tisPriceRangeReseted: boolean = false;\r\n\tisDiscount: boolean = false;\r\n\tisAvailable: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetItemsFound(count: number) {\r\n\t\tthis.itemsFound = count;\r\n\t}\r\n\r\n\tsetAllFilteredItems(items: IItemData[]) {\r\n\t\tthis.allFilteredItems = items;\r\n\t}\r\n\r\n\tsetResultsByPagination(items: IItemData[]) {\r\n\t\tthis.resultsByPagination = items;\r\n\t}\r\n\r\n\tsetIsFiltersShown(value: boolean) {\r\n\t\tthis.isFiltersShown = value;\r\n\t}\r\n\r\n\tsetSelectedCategories(res: string[]) {\r\n\t\tthis.selectedCategories = res;\r\n\t}\r\n\r\n\tsetSelectedBrands(res: string[]) {\r\n\t\tthis.selectedBrands = res;\r\n\t}\r\n\r\n\tsetPriceRange(res: number[]) {\r\n\t\tthis.priceRange = res;\r\n\t}\r\n\r\n\tsetIsPriceRangeReseted(res: boolean) {\r\n\t\tthis.isPriceRangeReseted = res;\r\n\t}\r\n\r\n\tsetIsDiscount(res: boolean) {\r\n\t\tthis.isDiscount = res;\r\n\t}\r\n\r\n\tsetIsAvailable(res: boolean) {\r\n\t\tthis.isAvailable = res;\r\n\t}\r\n}\r\n\r\nexport default new FiltersSettingsState();\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport { ICategory } from \"../interfaces/ICategory\";\r\nimport { IItemData } from \"../interfaces/IItemData\";\r\nimport { IResponseData } from \"../interfaces/IResponseData\";\r\n\r\nclass ResponseDataState {\r\n\tresponseData: IResponseData | undefined;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetResponseData(res: IResponseData) {\r\n\t\tthis.responseData = res;\r\n\t}\r\n}\r\n\r\nexport default new ResponseDataState();\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nclass SortingByState {\r\n\tsortingByType: string = \"popular\";\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetSortingByType(res: string) {\r\n\t\tthis.sortingByType = res;\r\n\t}\r\n}\r\n\r\nexport default new SortingByState();\r\n","import ResponseDataState from \"../store/ResponseDataState\";\r\nimport FiltersSettingsState from \"../store/FiltersSettingsState\";\r\nimport { setSortByItems } from \"./setSortByItems\";\r\n\r\nexport const SetFilterSettings = () => {\r\n\tconst { responseData } = ResponseDataState;\r\n\tconst { allFilteredItems, selectedCategories, selectedBrands, priceRange, isAvailable, isDiscount } =\r\n\t\tFiltersSettingsState;\r\n\r\n\treturn setSortByItems(\r\n\t\tresponseData?.items\r\n\t\t\t.filter((item) => {\r\n\t\t\t\tif (selectedCategories.length) {\r\n\t\t\t\t\treturn selectedCategories.includes(item.category);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.filter((item) => {\r\n\t\t\t\tif (selectedBrands.length) {\r\n\t\t\t\t\treturn selectedBrands.includes(item.brand);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.filter((item) => {\r\n\t\t\t\tlet price = item.priceInfo.fullPrice - item.priceInfo.discountAmount;\r\n\t\t\t\treturn price >= priceRange[0] && price <= priceRange[1];\r\n\t\t\t})\r\n\t\t\t.filter((item) => {\r\n\t\t\t\tif (isAvailable) {\r\n\t\t\t\t\treturn item.isAvailable;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.filter((item) => {\r\n\t\t\t\tif (isDiscount) {\r\n\t\t\t\t\treturn item.priceInfo.discount;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t);\r\n};\r\n","import { IItemData } from \"../interfaces/IItemData\";\r\nimport SortingByState from \"../store/SortingByState\";\r\n\r\nexport const setSortByItems = (items: any) => {\r\n\treturn items?.sort((a: any, b: any) => {\r\n\t\tlet typeOfSortA;\r\n\t\tlet typeOfSortB;\r\n\r\n\t\tif (SortingByState.sortingByType === \"popular\") {\r\n\t\t\ttypeOfSortA = a.rating;\r\n\t\t\ttypeOfSortB = b.rating;\r\n\t\t}\r\n\t\tif (SortingByState.sortingByType === \"newest\") {\r\n\t\t\ttypeOfSortA = a.releaseDate;\r\n\t\t\ttypeOfSortB = b.releaseDate;\r\n\t\t}\r\n\t\tif (SortingByState.sortingByType === \"expensive\") {\r\n\t\t\ttypeOfSortA = a.priceInfo.fullPrice;\r\n\t\t\ttypeOfSortB = b.priceInfo.fullPrice;\r\n\t\t}\r\n\t\tif (SortingByState.sortingByType === \"cheap\") {\r\n\t\t\ttypeOfSortA = b.priceInfo.fullPrice;\r\n\t\t\ttypeOfSortB = a.priceInfo.fullPrice;\r\n\t\t}\r\n\r\n\t\tif (typeOfSortA > typeOfSortB) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (typeOfSortA < typeOfSortB) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t});\r\n};\r\n","import FiltersSettingsState from \"../store/FiltersSettingsState\";\r\nimport { SetFilterSettings } from \"./SetFilterSettings\";\r\n\r\nexport const ResetFilters = () => {\r\n\tFiltersSettingsState.setSelectedCategories([]);\r\n\tFiltersSettingsState.setSelectedBrands([]);\r\n\tFiltersSettingsState.setPriceRange([3000, 200000]);\r\n\tFiltersSettingsState.setIsDiscount(false);\r\n\tFiltersSettingsState.setIsAvailable(false);\r\n\tFiltersSettingsState.setIsPriceRangeReseted(true);\r\n\tFiltersSettingsState.setAllFilteredItems(SetFilterSettings());\r\n};\r\n","import React from 'react'\r\nimport { JsxElement } from 'typescript'\r\nimport './NavBarItem.scss'\r\n\r\nconst NavBarItem = ({ itemIcon, itemName }: { itemIcon?: JSX.Element, itemName?: string }) => {\r\n    return (\r\n        <div className='nav-bar-item'>\r\n            <div className='nav-bar-item__icon'>{itemIcon}</div>\r\n            <p className='nav-bar-item__name'>{itemName}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBarItem","import React from 'react'\r\n\r\nconst HomeIcon = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"20\"\r\n            height=\"20\"\r\n            x=\"0\"\r\n            y=\"0\"\r\n            enableBackground=\"new 0 0 460.298 460.297\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 460.298 460.297\"\r\n            xmlSpace=\"preserve\"\r\n        >\r\n            <path d=\"M230.149 120.939L65.986 256.274c0 .191-.048.472-.144.855-.094.38-.144.656-.144.852v137.041c0 4.948 1.809 9.236 5.426 12.847 3.616 3.613 7.898 5.431 12.847 5.431h109.63V303.664h73.097v109.64h109.629c4.948 0 9.236-1.814 12.847-5.435 3.617-3.607 5.432-7.898 5.432-12.847V257.981c0-.76-.104-1.334-.288-1.707L230.149 120.939z\"></path>\r\n            <path d=\"M457.122 225.438L394.6 173.476V56.989c0-2.663-.856-4.853-2.574-6.567-1.704-1.712-3.894-2.568-6.563-2.568h-54.816c-2.666 0-4.855.856-6.57 2.568-1.711 1.714-2.566 3.905-2.566 6.567v55.673l-69.662-58.245c-6.084-4.949-13.318-7.423-21.694-7.423-8.375 0-15.608 2.474-21.698 7.423L3.172 225.438c-1.903 1.52-2.946 3.566-3.14 6.136-.193 2.568.472 4.811 1.997 6.713l17.701 21.128c1.525 1.712 3.521 2.759 5.996 3.142 2.285.192 4.57-.476 6.855-1.998L230.149 95.817l197.57 164.741c1.526 1.328 3.521 1.991 5.996 1.991h.858c2.471-.376 4.463-1.43 5.996-3.138l17.703-21.125c1.522-1.906 2.189-4.145 1.991-6.716-.195-2.563-1.242-4.609-3.141-6.132z\"></path>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default HomeIcon","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport { ResetFilters } from \"../../Utils/ResetFilters\";\nimport NavBarItem from \"../Header/NavBarItem/NavBarItem\";\nimport HomeIcon from \"../svg/HomeIcon\";\nimport LogoImage from \"../svg/LogoImage\";\nimport \"./Logo.scss\";\n\nconst Logo = observer(({ logoType }: { logoType: string }) => {\n\n    const { isMobile } = PageWidthState\n\n\n\n    return (\n        <Link to=\"/\" onClick={ResetFilters}>\n            <div className=\"logo\">\n                {logoType === \"navigation\" ? (\n                    <>\n                        {isMobile ? <NavBarItem itemIcon={<HomeIcon />} itemName={\"Домой\"} /> : <b className=\"logo\"><span>Device</span> <span>Market</span></b>}\n\n\n                    </>\n                ) : (\n                    <b className=\"logo\"><span>Device</span> <span>Market</span></b>\n                )}\n            </div>\n        </Link>\n    );\n})\n\nexport default Logo;\n","import { makeAutoObservable } from \"mobx\";\r\nimport { IItemData } from \"../interfaces/IItemData\";\r\n\r\nclass SearchState {\r\n\tsearchInputValue: string = \"\";\r\n\tisSearchShown: boolean = false;\r\n\tisResultsShown: boolean = false;\r\n\tsearchResults: IItemData[] = [];\r\n\tisFocused: boolean = false;\r\n\theaderHeight: number | undefined;\r\n\tsearchBarHeight: number | undefined;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetSearchInputValue(value: string) {\r\n\t\tthis.searchInputValue = value;\r\n\t}\r\n\r\n\tsetIsSearchShown(value: boolean) {\r\n\t\tthis.isSearchShown = value;\r\n\t}\r\n\r\n\tsetIsResultsShown(value: boolean) {\r\n\t\tthis.isResultsShown = value;\r\n\t}\r\n\r\n\tsetSearchResults(results: IItemData[]) {\r\n\t\tthis.searchResults = results;\r\n\t}\r\n\r\n\tsetIsFocused(focus: boolean) {\r\n\t\tthis.isFocused = focus;\r\n\t}\r\n\r\n\tsetHeaderHeight(height: number) {\r\n\t\tthis.headerHeight = height;\r\n\t}\r\n\r\n\tsetSearchBarHeight(height: number) {\r\n\t\tthis.searchBarHeight = height;\r\n\t}\r\n}\r\n\r\nexport default new SearchState();\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport { IItemData } from \"../interfaces/IItemData\";\r\n\r\nclass ItemDataState {\r\n\titemData: IItemData | undefined;\r\n\turlName: string = \"\";\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetItemData(data: IItemData | undefined) {\r\n\t\tthis.itemData = data;\r\n\t}\r\n\r\n\tsetUrlName(id: string) {\r\n\t\tthis.urlName = id;\r\n\t}\r\n}\r\n\r\nexport default new ItemDataState();\r\n","import React, { RefObject, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IItemData } from \"../../../interfaces/IItemData\";\r\nimport ItemDataState from \"../../../store/ItemDataState\";\r\nimport SearchState from \"../../../store/SearchState\";\r\nimport ToItemLink from \"../../buttons/ToItemLink/ToItemLink\";\r\nimport ResponseDataState from \"../../../store/ResponseDataState\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PageWidthState from \"../../../store/PageWidthState\";\r\nimport \"./SearchResultsList.scss\";\r\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\r\n\r\nconst SearchResultsList = observer(\r\n    ({ resultsHeight, searchInnerRef }: { resultsHeight?: number; searchInnerRef: RefObject<HTMLDivElement> }) => {\r\n        const searchResultsRef = useRef<HTMLUListElement>(null);\r\n\r\n        const { responseData } = ResponseDataState;\r\n        const { searchInputValue, searchResults, isResultsShown, isFocused } = SearchState;\r\n        const { isMobile } = PageWidthState;\r\n\r\n\r\n\r\n        useEffect(() => {\r\n            document.addEventListener(\"click\", outsideSearchClick);\r\n\r\n            return () => {\r\n                document.removeEventListener(\"click\", outsideSearchClick);\r\n            };\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            if (responseData) {\r\n                SearchState.setSearchResults(\r\n                    responseData.items.filter((item) => {\r\n                        return (\r\n                            item.title.toLocaleLowerCase().includes(searchInputValue.toLocaleLowerCase()) ||\r\n                            item.brand.toLocaleLowerCase().includes(searchInputValue.toLocaleLowerCase())\r\n                        );\r\n                    })\r\n                );\r\n            }\r\n        }, [searchInputValue]);\r\n\r\n        const outsideSearchClick = (e: any) => {\r\n            if (!searchInnerRef.current?.contains(e.target as Node)) {\r\n                SearchState.setIsResultsShown(false);\r\n            }\r\n        };\r\n\r\n        const onResultClick = (item: IItemData) => {\r\n            ItemDataState.setItemData(item);\r\n            SearchState.setIsResultsShown(false);\r\n            SearchState.setIsSearchShown(false)\r\n            SearchState.setSearchInputValue('')\r\n            clearAllBodyScrollLocks()\r\n        };\r\n\r\n        return (\r\n            <ul className=\"search__results-list search-results\" ref={searchResultsRef}>\r\n                {searchInputValue &&\r\n                    searchResults.map((item: IItemData) => {\r\n                        const {\r\n                            color,\r\n                            title,\r\n                            priceInfo: { fullPrice, discountAmount },\r\n                            images: { snippetImage },\r\n                            features: { memory },\r\n                        } = item;\r\n\r\n                        return (\r\n                            <li key={item.id} className=\"search-results__item\">\r\n                                <Link to=\"/item\" className=\"search-results__link\" onClick={() => onResultClick(item)}>\r\n                                    <div className=\"search-results__img-wrap\">\r\n                                        <img\r\n                                            className=\"search-results__img\"\r\n                                            src={snippetImage}\r\n                                            alt={title}\r\n                                            height=\"50\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"search-results__text-wrap\">\r\n                                        <p className=\"search-results__title\">\r\n                                            {title}, {color}, {memory}\r\n                                        </p>\r\n                                        <p className=\"search-results__price\">{fullPrice - discountAmount} р.</p>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                {searchInputValue && !searchResults.length && (\r\n                    <p>\r\n                        По запросу <span className=\"search-results__results-not-found\">{searchInputValue} </span>\r\n                        ничего не найдено\r\n                    </p>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n);\r\n\r\nexport default SearchResultsList;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport PageWidthState from '../../../store/PageWidthState';\r\nimport SearchState from '../../../store/SearchState';\r\nimport './SearchField.scss'\r\n\r\nconst SearchField = observer(() => {\r\n\r\n    const { searchInputValue } = SearchState;\r\n\r\n    const onHandleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        SearchState.setIsResultsShown(true);\r\n        SearchState.setSearchInputValue(e.currentTarget.value);\r\n    };\r\n\r\n    const onSearchFocus = () => {\r\n\r\n        SearchState.setIsResultsShown(true)\r\n    }\r\n\r\n    return (\r\n        <input\r\n            value={searchInputValue}\r\n            onChange={(e) => onHandleChange(e)}\r\n            className=\"search-field\"\r\n            type=\"text\"\r\n            placeholder=\"Поиск по товарам\"\r\n            onFocus={onSearchFocus}\r\n        />\r\n    )\r\n})\r\n\r\nexport default SearchField","import React from \"react\";\r\n\r\nconst CloseBtn = () => {\r\n    return (\r\n        <svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <defs>\r\n                <style>\r\n                    {\".cls-1{fill:none;stroke:#000;stroke-linecap:round;stroke-linejoin:round;stroke-width:2px}\"}\r\n                </style>\r\n            </defs>\r\n            <title />\r\n            <g id=\"cross\">\r\n                <path className=\"cls-1\" d=\"m7 7 18 18M7 25 25 7\" />\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default CloseBtn;\r\n","import { RefObject } from \"react\";\r\nimport PageWidthState from \"../store/PageWidthState\";\r\n\r\nexport const ScrollLockOnFixed = (scrollType: string, headerRef: RefObject<HTMLDivElement>) => {\r\n\tconst { scrollYPosition } = PageWidthState;\r\n\r\n\tif (scrollType === \"disabled\") {\r\n\t\tconst scrollWidthBefore = document.body.clientWidth;\r\n\t\tif (scrollYPosition !== undefined) {\r\n\t\t\tdocument.body.style.setProperty(\"top\", `${scrollYPosition * -1}px`);\r\n\t\t\tdocument.body.classList.add(\"body-scroll-disabled\");\r\n\t\t\tconst scrollWidthAfter = document.body.clientWidth;\r\n\t\t\tdocument.body.style.paddingRight = `${scrollWidthAfter - scrollWidthBefore}px`;\r\n\t\t\tif (headerRef.current) {\r\n\t\t\t\theaderRef.current.style.borderRight = `${scrollWidthAfter - scrollWidthBefore}px solid black`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (scrollType === \"enabled\") {\r\n\t\tdocument.body.classList.remove(\"body-scroll-disabled\");\r\n\t\tdocument.body.style.setProperty(\"top\", \"\");\r\n\t\tscrollYPosition && window.scrollTo(0, scrollYPosition);\r\n\t\tdocument.body.style.paddingRight = `${0}px`;\r\n\t\tif (headerRef.current) {\r\n\t\t\theaderRef.current.style.borderRight = `none`;\r\n\t\t}\r\n\t}\r\n};\r\n","import { observer } from \"mobx-react-lite\";\nimport { RefObject, useEffect, useRef, useState, } from \"react\";\nimport SearchState from \"../../store/SearchState\";\nimport SearchResultsList from \"./SearchResultsList/SearchResultsList\";\nimport SearchField from \"./SearchField/SearchField\";\nimport SearchBarBtn from \"./SearchBarBtn/SearchBarBtn\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport PageWidthState from \"../../store/PageWidthState\";\nimport CloseBtn from \"../svg/CloseBtn\";\nimport \"./SearchBar.scss\";\nimport { ScrollLockOnFixed } from \"../../Utils/ScrollLockOnFixed\";\n\nconst SearchBar = observer(({ setIsNavShown, headerRef }: { setIsNavShown?: React.Dispatch<React.SetStateAction<boolean>>, headerRef: RefObject<HTMLDivElement> }) => {\n\n    const searchBarRef = useRef<HTMLDivElement>(null);\n    const searchInnerRef = useRef<HTMLDivElement>(null);\n\n    const { headerHeight, isResultsShown } = SearchState;\n    const { isMobile, scrollYPosition } = PageWidthState;\n\n    const overlayRef = useRef(null)\n\n    const onOverlayClick = (e: any) => {\n        if (e.target === overlayRef.current) {\n            SearchState.setIsSearchShown(false)\n        }\n    }\n\n\n\n    useEffect(() => {\n        ScrollLockOnFixed(\"disabled\", headerRef)\n\n        return () => {\n            ScrollLockOnFixed(\"enabled\", headerRef)\n        }\n    }, [])\n\n\n\n    return (\n        <div className=\"search-bar__overlay\" onClick={onOverlayClick} ref={overlayRef}>\n            <div className=\"search-bar\"\n                ref={searchBarRef}>\n\n                <div className=\"search-bar__inner\" ref={searchInnerRef}>\n                    <div className=\"search-bar__window\">\n                        <SearchField />\n                        {(isResultsShown) && (\n                            <SearchResultsList searchInnerRef={searchInnerRef} />\n\n                        )}\n                        {/* <button onClick={() => setIsNavShown && setIsNavShown(false)} className=\"search-bar__close-btn\"><CloseBtn /></button> */}\n                        <button onClick={() => SearchState.setIsSearchShown(false)} className=\"search-bar__close-btn\"><CloseBtn /></button>\n                    </div>\n                    {/* <SearchBarBtn /> */}\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default SearchBar;\n","import { makeAutoObservable } from \"mobx\";\r\nimport { ICartItem } from \"../interfaces/ICartItem\";\r\nimport { IItemData } from \"../interfaces/IItemData\";\r\n\r\nclass CartState {\r\n\tcartItems: ICartItem[] = [];\r\n\tpriceSum: number = 0;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetCartItems(item: ICartItem[]) {\r\n\t\tthis.cartItems = item;\r\n\t}\r\n\r\n\tsetPriceSum(sum: number) {\r\n\t\tthis.priceSum = sum;\r\n\t}\r\n}\r\n\r\nexport default new CartState();\r\n","import React from 'react'\r\n\r\nconst CartIcon = () => {\r\n    return (\r\n\r\n        // <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        //     <g clipPath=\"url(#clip0_11:189)\">\r\n        //         <path\r\n        //             d=\"M10.5 25.6667C11.1443 25.6667 11.6666 25.1443 11.6666 24.5C11.6666 23.8557 11.1443 23.3333 10.5 23.3333C9.85565 23.3333 9.33331 23.8557 9.33331 24.5C9.33331 25.1443 9.85565 25.6667 10.5 25.6667Z\"\r\n        //             stroke=\"white\"\r\n        //             strokeWidth=\"4\"\r\n        //             strokeLinecap=\"round\"\r\n        //             strokeLinejoin=\"round\"\r\n        //         />\r\n        //         <path\r\n        //             d=\"M23.3334 25.6667C23.9777 25.6667 24.5 25.1443 24.5 24.5C24.5 23.8557 23.9777 23.3333 23.3334 23.3333C22.689 23.3333 22.1667 23.8557 22.1667 24.5C22.1667 25.1443 22.689 25.6667 23.3334 25.6667Z\"\r\n        //             stroke=\"white\"\r\n        //             strokeWidth=\"4\"\r\n        //             strokeLinecap=\"round\"\r\n        //             strokeLinejoin=\"round\"\r\n        //         />\r\n        //         <path\r\n        //             d=\"M1.16669 1.16666H5.83335L8.96002 16.7883C9.06671 17.3255 9.35891 17.8079 9.78549 18.1513C10.2121 18.4947 10.7458 18.6771 11.2934 18.6667H22.6334C23.1809 18.6771 23.7146 18.4947 24.1412 18.1513C24.5678 17.8079 24.86 17.3255 24.9667 16.7883L26.8334 6.99999H7.00002\"\r\n        //             stroke=\"white\"\r\n        //             strokeWidth=\"4\"\r\n        //             strokeLinecap=\"round\"\r\n        //             strokeLinejoin=\"round\"\r\n        //         />\r\n        //     </g>\r\n        //     <defs>\r\n        //         <clipPath id=\"clip0_11:189\">\r\n        //             <rect width=\"28\" height=\"28\" fill=\"white\" />\r\n        //         </clipPath>\r\n        //     </defs>\r\n        // </svg>\r\n\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"20\"\r\n            height=\"20\"\r\n            x=\"0\"\r\n            y=\"0\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 92 92\"\r\n            xmlSpace=\"preserve\"\r\n        >\r\n            <path fill='#fff' d=\"M91.8 27.3L81.1 61c-.8 2.4-2.9 4-5.4 4H34.4c-2.4 0-4.7-1.5-5.5-3.7L13.1 19H4c-2.2 0-4-1.8-4-4s1.8-4 4-4h11.9c1.7 0 3.2 1.1 3.8 2.7L36 57h38l8.5-27H35.4c-2.2 0-4-1.8-4-4s1.8-4 4-4H88c1.3 0 2.5.7 3.2 1.7.8 1 1 2.4.6 3.6zm-55.4 43c-1.7 0-3.4.7-4.6 1.9-1.2 1.2-1.9 2.9-1.9 4.6 0 1.7.7 3.4 1.9 4.6 1.2 1.2 2.9 1.9 4.6 1.9s3.4-.7 4.6-1.9c1.2-1.2 1.9-2.9 1.9-4.6 0-1.7-.7-3.4-1.9-4.6-1.2-1.2-2.9-1.9-4.6-1.9zm35.9 0c-1.7 0-3.4.7-4.6 1.9s-1.9 2.9-1.9 4.6c0 1.7.7 3.4 1.9 4.6 1.2 1.2 2.9 1.9 4.6 1.9 1.7 0 3.4-.7 4.6-1.9 1.2-1.2 1.9-2.9 1.9-4.6 0-1.7-.7-3.4-1.9-4.6s-2.9-1.9-4.6-1.9z\"></path>\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nexport default CartIcon;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport CartState from \"../../../store/CartState\";\nimport CartIcon from \"../../svg/CartIcon\";\nimport NavBarItem from \"../NavBarItem/NavBarItem\";\nimport \"./Cart.scss\";\n\n\nconst Cart = observer(() => {\n    const { cartItems } = CartState\n\n\n    return (\n        <Link to=\"/cart\" className=\"cart__link\">\n            {(cartItems.length > 0) && <div className=\"cart__counter\">{cartItems.length}</div>}\n            <NavBarItem itemIcon={<CartIcon />} itemName={\"Корзина\"} />\n        </Link>\n    );\n})\n\nexport default Cart;\n","import { makeAutoObservable } from \"mobx\";\r\nimport { IItemData } from \"../interfaces/IItemData\";\r\n\r\nclass LoginState {\r\n\tisPopupShown: boolean = false;\r\n\tuserName: string = \"\";\r\n\tuserPassword: string = \"\";\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetIsPopupShown(value: boolean) {\r\n\t\tthis.isPopupShown = value;\r\n\t}\r\n\r\n\tsetUserName(name: string) {\r\n\t\tthis.userName = name;\r\n\t}\r\n\r\n\tsetUserPassword(password: string) {\r\n\t\tthis.userPassword = password;\r\n\t}\r\n}\r\n\r\nexport default new LoginState();\r\n","import React from \"react\";\r\n\r\nconst UserIcon = () => {\r\n    return (\r\n        <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n                className=\"heroicon-ui\"\r\n                d=\"M12 12a5 5 0 1 1 0-10 5 5 0 0 1 0 10zm0-2a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm9 11a1 1 0 0 1-2 0v-2a3 3 0 0 0-3-3H8a3 3 0 0 0-3 3v2a1 1 0 0 1-2 0v-2a5 5 0 0 1 5-5h8a5 5 0 0 1 5 5v2z\"\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default UserIcon;\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoginState from '../../../../store/LoginState';\r\nimport UserIcon from '../../../svg/UserIcon';\r\n// import LoginPopupState from '../../../../store/LoginPopupState';\r\nimport \"./UserNav.scss\";\r\nimport NavBarItem from '../../NavBarItem/NavBarItem';\r\n\r\nconst UserNav = observer(() => {\r\n\r\n    const { userName, userPassword, isPopupShown } = LoginState;\r\n\r\n    let settingsListRef = useRef(null)\r\n\r\n    const [isSettingsShown, setIsSettingsShown] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        if (settingsListRef.current) {\r\n            document.addEventListener('click', outsideClick)\r\n            console.log('')\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('click', outsideClick)\r\n        }\r\n    }, [isSettingsShown])\r\n\r\n    const outsideClick = (e: any) => {\r\n        if (e.currentTarget !== settingsListRef.current) {\r\n            setIsSettingsShown(false)\r\n        }\r\n    }\r\n\r\n    const openSettings = (e: any) => {\r\n        setIsSettingsShown(!isSettingsShown)\r\n    }\r\n\r\n    const logOut = () => {\r\n        LoginState.setUserName('')\r\n        LoginState.setUserPassword('')\r\n        LoginState.setIsPopupShown(!isPopupShown)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='user-nav'>\r\n            <div className='user-nav__user-wrapper'\r\n                onClick={openSettings}\r\n            >\r\n                <NavBarItem itemIcon={<UserIcon />} itemName={userName} />\r\n            </div>\r\n            {isSettingsShown &&\r\n                <ul ref={settingsListRef} className='user-nav__settings-list settings-list'>\r\n                    <li className='settings-list__item'>\r\n                        <Link className='settings-list__link' to=\"/orders-page\">\r\n                            История заказов\r\n                        </Link>\r\n                    </li>\r\n                    <li className='settings-list__item'>\r\n                        <a className='settings-list__link' href=\"\">\r\n                            Настройки профиля\r\n                        </a>\r\n                    </li>\r\n                    <li className='settings-list__item'>\r\n                        <a className='settings-list__link' onClick={logOut}>\r\n                            Выйти\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default UserNav;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport LoginState from \"../../../store/LoginState\";\r\n// import LoginPopupState from \"../../../store/LoginPopupState\";\r\nimport UserIcon from \"../../svg/UserIcon\";\r\nimport \"./User.scss\";\r\nimport UserNav from \"./UserNav/UserNav\";\r\nimport NavBarItem from \"../NavBarItem/NavBarItem\";\r\nimport PageWidthState from \"../../../store/PageWidthState\";\r\n\r\nconst User = observer(() => {\r\n    const { userName, userPassword, isPopupShown } = LoginState;\r\n\r\n\r\n\r\n    const showPopup = () => {\r\n        // LoginPopupState.setShowPopup(true);\r\n        LoginState.setIsPopupShown(!isPopupShown);\r\n        PageWidthState.setScrollYPosition(window.scrollY)\r\n\r\n    };\r\n\r\n    return userName && userPassword ? (\r\n        <UserNav />\r\n    ) : (\r\n        <button className=\"user\" onClick={showPopup}>\r\n\r\n            <NavBarItem itemIcon={<UserIcon />} itemName={\"Вход\"} />\r\n        </button>\r\n    );\r\n});\r\n\r\nexport default User;\r\n","import React from 'react'\r\n\r\nconst CatalogIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\r\n            <g data-name=\"Layer 23\">\r\n                <path d=\"M59.59 50.42H51c-2.28-10-16.45-10-18.73 0H4.41a2 2 0 100 4H32.3c2.29 10 16.46 10 18.73 0h8.56a2 2 0 000-4zM41.67 58c-7.38-.26-7.38-10.9 0-11.16 7.38.26 7.38 10.9 0 11.16zM59.59 30H28.52c-2.28-10-16.45-10-18.73 0H4.41a2 2 0 100 4h5.38c2.28 10 16.45 10 18.73 0h31.07a2 2 0 000-4zm-40.43 7.58c-7.38-.24-7.37-10.93 0-11.16 7.37.24 7.37 10.93 0 11.16z\"></path>\r\n                <path d=\"M4.41 13.58h18.22c2.29 10 16.46 10 18.74 0h18.22a2 2 0 000-4H41.37c-2.29-10-16.46-10-18.74 0H4.41a2 2 0 000 4zM32 6c7.38.26 7.38 10.9 0 11.16-7.38-.26-7.38-10.9 0-11.16z\"></path>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default CatalogIcon","import { Button } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NavBarItem from '../../Header/NavBarItem/NavBarItem'\r\nimport CatalogIcon from '../../svg/CatalogIcon'\r\nimport './CatalogLink.scss'\r\n\r\nconst CatalogLink = ({ isNav, btnName }: { isNav?: boolean, btnName?: string }) => {\r\n    return (\r\n        <Link to='/category' className='catalog-link__wrap'>\r\n\r\n            {isNav && <NavBarItem itemIcon={<CatalogIcon />} itemName={\"Каталог\"} />}\r\n            {!isNav && <button className='catalog-link__btn'>{btnName}</button>}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default CatalogLink","import React from 'react'\r\n\r\nconst SearchIcon = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            className=\"feather feather-search\"\r\n            viewBox=\"0 0 24 24\"\r\n        >\r\n            <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n            <path d=\"M21 21L16.65 16.65\"></path>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default SearchIcon","\r\nimport './SubmitBtn.scss'\r\n\r\nconst SubmitBtn = ({ userLogined }: { userLogined: any }) => {\r\n\r\n    return (\r\n        <button className=\"submit-btn\" type=\"button\" onClick={userLogined}>\r\n            Войти\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SubmitBtn","import { observer } from \"mobx-react-lite\";\r\nimport React, { RefObject, useEffect, useRef, useState } from \"react\";\r\nimport LoginState from \"../../store/LoginState\";\r\nimport CloseBtn from \"../svg/CloseBtn\";\r\nimport SubmitBtn from \"../buttons/SubmitBtn/SubmitBtn\";\r\nimport { ScrollLockOnFixed } from \"../../Utils/ScrollLockOnFixed\";\r\nimport \"./LoginPopup.scss\";\r\n\r\n\r\nconst LoginPopup = observer(({ headerRef }: { headerRef: RefObject<HTMLDivElement> }) => {\r\n\r\n    const { userName, userPassword, isPopupShown } = LoginState\r\n\r\n    const overlayRef = useRef(null);\r\n    const closeBtnRef = useRef(null);\r\n    const loginRef: any = useRef(null);\r\n    const loginPopupRef = useRef(null);\r\n\r\n    const [isPassShown, setIsPassShown] = useState(false)\r\n    const [loginValue, setLoginValue] = useState('')\r\n    const [passwordValue, setPasswordValue] = useState('')\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (headerRef) {\r\n\r\n            ScrollLockOnFixed(\"disabled\", headerRef)\r\n        }\r\n\r\n        return () => {\r\n            ScrollLockOnFixed(\"enabled\", headerRef)\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (isPopupShown) {\r\n            loginRef.current.focus();\r\n        }\r\n\r\n    }, [isPopupShown]);\r\n\r\n    const closePopup = (e: any) => {\r\n        if (overlayRef.current === e.target || closeBtnRef.current === e.target) {\r\n            LoginState.setIsPopupShown(!isPopupShown);\r\n        }\r\n    };\r\n\r\n    const inputHandleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.id === \"login-field\") {\r\n            setLoginValue(e.currentTarget.value);\r\n        }\r\n        if (e.currentTarget.id === \"password-field\") {\r\n            setPasswordValue(e.currentTarget.value);\r\n        }\r\n    };\r\n\r\n    const showPassword = () => {\r\n        setIsPassShown(!isPassShown);\r\n    };\r\n\r\n    const userLogined = () => {\r\n        if (loginValue && passwordValue) {\r\n            LoginState.setUserName(loginValue)\r\n            LoginState.setUserPassword(passwordValue)\r\n        }\r\n    };\r\n\r\n    const onOverlayClick = (e: any) => {\r\n        if (e.target === overlayRef.current) {\r\n            LoginState.setIsPopupShown(!isPopupShown)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"login-popup\" >\r\n            <div ref={overlayRef} className=\"login-popup__overlay\"\r\n                onClick={onOverlayClick}\r\n            >\r\n                <form className=\"login-popup__form\" ref={loginPopupRef}>\r\n                    <button\r\n                        onClick={(e) => closePopup(e)}\r\n                        ref={closeBtnRef}\r\n                        type=\"button\"\r\n                        className=\"login-popup__close-btn\"\r\n                    >\r\n                        <CloseBtn />\r\n                    </button>\r\n                    {userName && userPassword ? (\r\n                        <div className=\"login-popup__success\">\r\n                            <p>Вы вошли под именем <span>{userName}</span></p>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"login-popup__login-wrap\">\r\n                            <h3 className=\"login-popup__title\">Вход</h3>\r\n                            <div className=\"login-popup__fields-wrap\">\r\n                                <label className=\"login-popup__input-wrap\" htmlFor=\"login-field\">\r\n                                    <b>Логин:</b>\r\n                                    <input\r\n                                        ref={loginRef}\r\n                                        className=\"login-popup__input\"\r\n                                        type=\"text\"\r\n                                        onChange={(e) => inputHandleChange(e)}\r\n                                        value={loginValue}\r\n                                        placeholder=\"Пример: user123\"\r\n                                        id=\"login-field\"\r\n                                    />\r\n                                </label>\r\n                                <label className=\"login-popup__input-wrap\" htmlFor=\"password-field\">\r\n                                    <b>Пароль:</b>\r\n                                    <input\r\n                                        className=\"login-popup__input\"\r\n                                        type={isPassShown ? \"text\" : \"password\"}\r\n                                        onChange={(e) => inputHandleChange(e)}\r\n                                        value={passwordValue}\r\n                                        placeholder=\"Пример: Password1234\"\r\n                                        id=\"password-field\"\r\n                                    />\r\n                                    <label className=\"login-popup__show-pass-wrap\" htmlFor=\"show-password\">\r\n                                        <input\r\n                                            onClick={showPassword}\r\n                                            type=\"checkbox\"\r\n                                            id=\"show-password\"\r\n                                            checked={isPassShown}\r\n                                            onChange={() => setIsPassShown(!isPassShown)}\r\n                                        />\r\n                                        <span>Показать пароль</span>\r\n                                    </label>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"login-popup__btns-wrap\">\r\n                                <SubmitBtn userLogined={userLogined} />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default LoginPopup","import React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"./../../components/Logo/Logo\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Cart from \"./Cart/Cart\";\nimport User from \"./User/User\";\n\nimport { observer } from \"mobx-react-lite\";\nimport LoginState from \"../../store/LoginState\";\nimport CatalogLink from \"../buttons/CatalogLink/CatalogLink\";\nimport SearchState from \"../../store/SearchState\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport NavBarItem from \"./NavBarItem/NavBarItem\";\nimport SearchIcon from \"../svg/SearchIcon\";\nimport \"./Header.scss\";\nimport LoginPopup from \"../LoginPopup/LoginPopup\";\n\nconst Header = observer(() => {\n    const headerRef = useRef<HTMLDivElement>(null);\n    const headerNavRef = useRef<HTMLDivElement>(null);\n    const { isPopupShown } = LoginState;\n    const { isSearchShown, headerHeight, searchBarHeight } = SearchState;\n\n    const { isMobile } = PageWidthState;\n\n    useEffect(() => {\n        headerRef.current && SearchState.setHeaderHeight(headerRef.current?.clientHeight)\n    }, [])\n\n    useEffect(() => {\n        if (!isMobile) {\n            document.body.style.setProperty(\"padding-top\", `${headerRef.current?.clientHeight}px`)\n        } else {\n            document.body.style.setProperty(\"padding-top\", `${0}px`)\n\n        }\n    }, [isMobile])\n\n\n\n    const showSearch = () => {\n        SearchState.setIsSearchShown(true)\n        PageWidthState.setScrollYPosition(window.scrollY)\n    }\n\n    return (\n        <>\n            {isPopupShown && <LoginPopup headerRef={headerRef} />}\n\n            <header className={!isSearchShown && isMobile ? \"header\" : \"header header--to-top\"} ref={headerRef} >\n                {isSearchShown ? (\n                    <SearchBar headerRef={headerRef} />\n                ) : (\n                    <div className=\"header__nav\" ref={headerNavRef}>\n                        <Logo logoType=\"navigation\" />\n                        <CatalogLink isNav={true} />\n                        <button\n                            className=\"header__show-mobile-search-btn\"\n                            onClick={showSearch}\n                        >\n                            <NavBarItem itemIcon={<SearchIcon />} itemName={\"Поиск\"} />\n                        </button>\n                        <User />\n                        <Cart />\n                    </div>\n                )}\n            </header>\n        </>\n    );\n});\n\nexport default Header;\n","import axios from \"axios\";\nimport { IResponseData } from \"../interfaces/IResponseData\";\nimport ResponseDataState from \"../store/ResponseDataState\";\n\nclass ApiService {\n\tasync getData() {\n\t\tconst url: string = \"https://mocki.io/v1/f184f3e6-22cb-4ce6-87bf-c51b056621fc\";\n\t\tconst res = await axios.get(url);\n\t\tconst resData: IResponseData = res.data;\n\t\treturn resData;\n\t}\n}\n\nexport default ApiService;\n","import { toJS } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { ICategory } from \"../../interfaces/ICategory\";\r\nimport \"./CategoryItem.scss\"\r\n\r\ninterface ICategoryItem {\r\n\tcategory?: ICategory,\r\n\titemSection?: string\r\n}\r\n\r\nconst CategoryItem: React.FC<ICategoryItem> = observer(({ category, itemSection }: any) => {\r\n\r\n\tconst { categoryName, image } = category\r\n\r\n\treturn (\r\n\t\t<div className={`category-item category-item--${itemSection}`} style={{ backgroundImage: `url(${itemSection === 'categories' && image})` }}>\r\n\t\t\t{/* {!footerItem && <img className=\"category-item__img\" src={image} alt=\"item-img\" />} */}\r\n\t\t\t<p className=\"category-item__title\">{categoryName}</p>\r\n\t\t</div>\r\n\t);\r\n})\r\n\r\nexport default CategoryItem;\r\n","import { ICategory } from \"../interfaces/ICategory\";\r\nimport FiltersSettingsState from \"../store/FiltersSettingsState\";\r\n\r\nexport const sortByCategory = (category: ICategory | string) => {\r\n\tif (typeof category !== \"string\") {\r\n\t\tFiltersSettingsState.setSelectedCategories([category.categoryName]);\r\n\t} else {\r\n\t\tFiltersSettingsState.setSelectedCategories([category]);\r\n\t}\r\n};\r\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { ICategory } from \"../../interfaces/ICategory\";\nimport CategoryItem from \"../CategoryItem/CategoryItem\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\nimport { sortByCategory } from \"../../Utils/sortByCategory\";\nimport \"./Categories.scss\";\n\ninterface ICategoriesItems {\n\tsectionName?: string;\n}\n\nconst Categories: React.FC<ICategoriesItems> = observer(({ sectionName }) => {\n\n\tconst { responseData } = ResponseDataState\n\n\treturn (\n\t\t<div className=\"categories section-wrapper\">\n\t\t\t<div className=\"inner\">\n\t\t\t\t<h2 className=\"categories__title section-title\">Категории</h2>\n\t\t\t\t<div className=\"categories__list\">\n\t\t\t\t\t{\n\t\t\t\t\t\tresponseData?.categories.map((category: ICategory) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto=\"/category\"\n\t\t\t\t\t\t\t\t\tonClick={() => sortByCategory(category)}\n\t\t\t\t\t\t\t\t\tclassName=\"categories__item\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CategoryItem category={category} itemSection='categories' />\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n\nexport default Categories;\n","import React from \"react\";\r\nimport { IPriceInfo } from \"../../interfaces/IPriceInfo\";\r\nimport \"./ProductPrice.scss\";\r\n\r\nconst ProductPrice = ({ priceInfo, isAvailable }: { priceInfo: IPriceInfo, isAvailable: boolean }) => {\r\n\r\n\tconst { fullPrice, discount, discountAmount } = priceInfo\r\n\r\n\treturn (\r\n\t\t<div className=\"price\">\r\n\t\t\t{isAvailable ? (\r\n\r\n\t\t\t\t<div className=\"item-card__price-block\">\r\n\t\t\t\t\t<p className=\"item-card__price\">{fullPrice - discountAmount} руб.</p>\r\n\t\t\t\t\t{discount && <span className=\"item-card__price--discount\">{fullPrice} руб.</span>}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<p className=\"item-card__price item-card__price--not-available\">Нет в наличии</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProductPrice;\r\n","import React from 'react'\r\n\r\nconst StarIcon = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"18\"\r\n            height=\"17\"\r\n            viewBox=\"0 0 18 17\"\r\n        >\r\n            <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\r\n                <g transform=\"translate(-273 -4323)\">\r\n                    <g transform=\"translate(100 4266)\">\r\n                        <g transform=\"translate(170 54)\">\r\n                            <path fillRule=\"nonzero\" d=\"M0 0L24 0 24 24 0 24z\"></path>\r\n                            <path className='star'\r\n                                fill=\"#1D1D1D\"\r\n                                d=\"M12 17.27l4.15 2.51c.76.46 1.69-.22 1.49-1.08l-1.1-4.72 3.67-3.18c.67-.58.31-1.68-.57-1.75l-4.83-.41-1.89-4.46c-.34-.81-1.5-.81-1.84 0L9.19 8.63l-4.83.41c-.88.07-1.24 1.17-.57 1.75l3.67 3.18-1.1 4.72c-.2.86.73 1.54 1.49 1.08l4.15-2.5z\"\r\n                            ></path>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default StarIcon","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport StarIcon from \"../svg/StarIcon\";\r\nimport \"./ProductRating.scss\";\r\n\r\nconst ProductRating = observer(({ rating }: { rating: number }) => {\r\n\r\n    const [starsIds] = useState<number[]>([1, 2, 3, 4, 5]);\r\n    const [ratingPercentage, setRatingPercentage] = useState<number>(100);\r\n\r\n    const listRef = useRef<HTMLUListElement>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (null !== listRef.current) {\r\n            setRatingPercentage(rating * 100 / 5)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"product-rating\">\r\n            <div className=\"product-rating__wrap\">\r\n                <ul className=\"stars-list\" ref={listRef}>\r\n                    {starsIds.map(() => {\r\n                        return (\r\n                            <li className={\"stars-list__item\"}>\r\n                                <StarIcon />\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n                <ul className=\"stars-list stars-list--active\" style={{ width: `${ratingPercentage}%` }}>\r\n                    {starsIds.map(() => {\r\n                        return (\r\n                            <li className={\"stars-list__item\"}>\r\n                                <StarIcon />\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <div className=\"product-rating__counter\">{rating}</div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default ProductRating;\r\n","import React from 'react'\r\n\r\nconst RemoveFromCartIcon = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n        >\r\n            <path\r\n                fill=\"#293644\"\r\n                fillRule=\"evenodd\"\r\n                d=\"M11 2a1 1 0 00-1 1v1h4V3a1 1 0 00-1-1h-2zm5 2V3a3 3 0 00-3-3h-2a3 3 0 00-3 3v1H3a1 1 0 000 2h.105l1.703 15.331A3 3 0 007.79 24h8.42a3 3 0 002.982-2.669L20.895 6H21a1 1 0 100-2h-5zm2.883 2H5.117l1.68 15.11a1 1 0 00.993.89h8.42a1 1 0 00.994-.89L18.883 6zM10 9a1 1 0 011 1v8a1 1 0 11-2 0v-8a1 1 0 011-1zm4 0a1 1 0 011 1v8a1 1 0 11-2 0v-8a1 1 0 011-1z\"\r\n                clipRule=\"evenodd\"\r\n            ></path>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default RemoveFromCartIcon","import { toJS } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { IItemData } from \"../../../interfaces/IItemData\";\nimport CartState from \"../../../store/CartState\";\nimport CartIcon from \"../../svg/CartIcon\";\nimport RemoveFromCartIcon from \"../../svg/RemoveFromCartIcon\";\nimport \"./ToCartBtn.scss\";\n\n\ninterface IToCartBtn {\n\ttoCartItem: IItemData;\n\tisBtnLite?: boolean;\n}\n\nconst ToCartBtn: React.FC<IToCartBtn> = observer(({ toCartItem, isBtnLite }) => {\n\tconst { cartItems, priceSum } = CartState;\n\tconst { priceInfo: { fullPrice, discountAmount } } = toCartItem;\n\n\n\tconst [isItemInCart, setIsItemInCart] = useState(false)\n\n\tuseEffect(() => {\n\n\t\tsetIsItemInCart(false)\n\t\tcartItems.forEach(i => {\n\t\t\tif (i.itemData.id === toCartItem.id) {\n\t\t\t\tsetIsItemInCart(true)\n\t\t\t}\n\t\t})\n\t})\n\n\n\n\n\tconst addToCart = () => {\n\t\tCartState.setCartItems([...cartItems.concat({ count: 1, itemData: toCartItem })]);\n\t};\n\n\tconst removeFromCart = () => {\n\n\t\tlet deleteCount: number | undefined;\n\n\t\tCartState.setCartItems([\n\t\t\t...cartItems.filter((i) => {\n\t\t\t\tif (i.itemData.id === toCartItem.id) deleteCount = i.count\n\t\t\t\treturn i.itemData.id !== toCartItem.id;\n\t\t\t}),\n\t\t]);\n\t};\n\n\n\n\n\treturn (\n\t\t<>\n\t\t\t{isItemInCart ?\n\t\t\t\t<button className=\"to-cart-btn to-cart-btn--remove\" onClick={removeFromCart}>\n\t\t\t\t\t{isBtnLite ? <RemoveFromCartIcon /> : 'Удалить из корзины'}\n\t\t\t\t</button>\n\t\t\t\t:\n\t\t\t\t<button className=\"to-cart-btn\" onClick={addToCart}>\n\t\t\t\t\t{!isBtnLite && \"В корзину\"} <CartIcon />\n\t\t\t\t</button>}\n\t\t</>\n\t);\n\n});\n\nexport default ToCartBtn;\n","import React from 'react'\r\n\r\nconst ArrowIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 129 129\" width={20}>\r\n            <path d=\"M40.4 121.3c-.8.8-1.8 1.2-2.9 1.2s-2.1-.4-2.9-1.2c-1.6-1.6-1.6-4.2 0-5.8l51-51-51-51c-1.6-1.6-1.6-4.2 0-5.8 1.6-1.6 4.2-1.6 5.8 0l53.9 53.9c1.6 1.6 1.6 4.2 0 5.8l-53.9 53.9z\"></path>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default ArrowIcon","import { Link, useNavigate } from \"react-router-dom\";\r\nimport ArrowIcon from \"../../svg/ArrowIcon\";\r\nimport \"./ToItemLink.scss\";\r\n\r\nconst ToItemLink = ({ id }: { id: number }) => {\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        // <Link to=\"/item\" className=\"to-item-link__wrap\">\r\n        //     <button className=\"to-item-link\" type=\"button\">\r\n        //         <span>Подробнее</span>\r\n        //         <ArrowIcon />\r\n        //     </button>\r\n        // </Link>\r\n        <button className=\"to-item-link\" type=\"button\" onClick={() => navigate(`/item/${id}`)}>\r\n            <span>Подробнее</span>\r\n            <ArrowIcon />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ToItemLink;\r\n","import { spawn } from \"child_process\";\r\nimport { toJS } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport ItemDataState from \"../../store/ItemDataState\";\r\nimport ProductPrice from \"../ProductPrice/ProductPrice\";\r\nimport ProductRating from \"../ProductRating/ProductRating\";\r\nimport ToCartBtn from \"../buttons/ToCartBtn/ToCartBtn\";\r\nimport CartState from \"../../store/CartState\";\r\nimport ResponseDataState from \"../../store/ResponseDataState\";\r\nimport ToItemLink from \"../buttons/ToItemLink/ToItemLink\";\r\nimport \"./ItemCard.scss\";\r\nimport PageWidthState from \"../../store/PageWidthState\";\r\n\r\ninterface ICardTypeOfView {\r\n    inPageView?: string;\r\n    inSliderView?: string;\r\n    item: IItemData;\r\n    isBtnLite?: boolean;\r\n}\r\n\r\nconst ItemCard: React.FC<ICardTypeOfView> = observer(({ inPageView, inSliderView, item, isBtnLite }) => {\r\n    const { cartItems } = CartState;\r\n    const { responseData } = ResponseDataState;\r\n    const { itemCardWidth } = PageWidthState;\r\n\r\n    const itemCardRef = useRef<HTMLDivElement>(null);\r\n\r\n    const {\r\n        images: { snippetImage },\r\n        title,\r\n        id,\r\n        priceInfo,\r\n        priceInfo: { discount, discountAmount, fullPrice },\r\n        isAvailable,\r\n        reviewsInfo: { reviews },\r\n        color,\r\n        rating,\r\n        categoryType,\r\n        features: { memory },\r\n    } = item;\r\n\r\n    return (\r\n        <div className={isAvailable ? \"item-card\" : \"item-card item-card--not-available\"} ref={itemCardRef}>\r\n            <Link className=\"item-card__img-link\" to={`/item/${id}`} >\r\n                <img className=\"item-card__img\" src={snippetImage} alt=\"img\" height=\"100\" />\r\n            </Link>\r\n            <Link className=\"item-card__title-link\" to={`/item/${id}`} >\r\n                <h3 className=\"item-card__title\">{`${categoryType} ${title} ${color ? color : \"\"}, ${memory}`}</h3>\r\n            </Link>\r\n\r\n            <Link className=\"item-card__rating-link\" to={`/item/${id}`} >\r\n                <div className=\"item-card__rating-wrap\">\r\n                    <ProductRating rating={rating} />\r\n                    <p className=\"item-card__reviews\">Отзывы ({reviews.length})</p>\r\n                </div>\r\n            </Link>\r\n            <ProductPrice priceInfo={priceInfo} isAvailable={isAvailable} />\r\n            <div className=\"item-card__buttons\">\r\n                {isAvailable && <ToCartBtn toCartItem={item} isBtnLite={isBtnLite} />}\r\n                {isBtnLite && (\r\n                    // <Link to={`/item/${id}`}>\r\n                    // </Link>\r\n                    <ToItemLink id={id} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ItemCard;\r\n","import React from 'react'\r\nimport './SwitchBtn.scss'\r\n\r\ninterface IButtonType {\r\n    btnType?: string,\r\n    sectionName?: string\r\n}\r\n\r\nconst SwitchBtn: React.FC<IButtonType> = ({ btnType, sectionName }) => {\r\n\r\n\r\n\r\n    return (\r\n        <button className={`${sectionName}__switch-btn ${sectionName}__switch-btn--${btnType} switch-btn switch-btn--${btnType}`}>\r\n            <svg width=\"15\" height=\"15\" viewBox=\"0 0 11 20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M0.37999 19.01C0.86999 19.5 1.65999 19.5 2.14999 19.01L10.46 10.7C10.85 10.31 10.85 9.68 10.46 9.29L2.14999 0.980003C1.65999 0.490003 0.86999 0.490003 0.37999 0.980003C-0.11001 1.47 -0.11001 2.26 0.37999 2.75L7.61999 10L0.36999 17.25C-0.11001 17.73 -0.11001 18.53 0.37999 19.01Z\"\r\n                    fill=\"#E5E5E5\"\r\n                />\r\n            </svg>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SwitchBtn","import React from 'react'\r\nimport \"./DotsBtns.scss\"\r\n\r\ninterface IDotsType {\r\n    btnType?: string,\r\n    sectionName?: string\r\n}\r\n\r\nconst DotsBtns: React.FC<IDotsType> = ({ sectionName }) => {\r\n    return (\r\n        <button className={`${sectionName}__dots-pagination dots-pagination`}>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DotsBtns","import { useEffect, useState } from \"react\";\r\nimport { toJS } from \"mobx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport ItemCard from \"../ItemCard/ItemCard\";\r\nimport \"./Slider.scss\";\r\nimport SwitchBtn from \"./SliderButtons/SwitchBtn/SwitchBtn\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport DotsBtns from \"./SliderButtons/DotsBtns/DotsBtns\";\r\nimport ResponseDataState from \"../../store/ResponseDataState\";\r\nimport ItemDataState from \"../../store/ItemDataState\";\r\nimport PageWidthState from \"../../store/PageWidthState\";\r\n\r\ninterface ISliderItems {\r\n    sliderItems?: IItemData[];\r\n    sectionName?: string;\r\n    slideCount?: number;\r\n}\r\n\r\nconst Slider: React.FC<ISliderItems> = observer(({ sectionName, slideCount }) => {\r\n    // const toItemPage = new ToItemPage();\r\n\r\n    const { responseData } = ResponseDataState\r\n    const { itemCardWidth } = PageWidthState\r\n\r\n\r\n\r\n    const [sliderItems, setSliderItems] = useState<IItemData[]>([])\r\n\r\n\r\n    useEffect(() => {\r\n        if (sectionName === \"popular-items\") {\r\n            if (responseData) {\r\n                setSliderItems(responseData?.items.filter((item: IItemData) => {\r\n                    return item.rating > 4.0 && item.isAvailable;\r\n                }))\r\n            }\r\n        }\r\n\r\n        if (sectionName === \"new-items\") {\r\n            if (responseData) {\r\n                setSliderItems(responseData?.items.filter((item: IItemData) => {\r\n                    return item.releaseDate > 2020 && item.isAvailable;\r\n                }))\r\n            }\r\n\r\n\r\n        }\r\n    }, [responseData?.items]);\r\n\r\n\r\n\r\n    SwiperCore.use([Navigation, Pagination]);\r\n\r\n\r\n    // let slidesCount\r\n    // (sectionName === \"popular-items\") ? slidesCount = 2.4 : slidesCount = 4.5\r\n\r\n    return (\r\n\r\n        <div className=\"slider-wrapper\">\r\n            <Swiper\r\n                loop={true}\r\n                breakpoints={{\r\n\r\n                    0: {\r\n                        slidesPerView: 1.1,\r\n                        centeredSlides: false,\r\n                        pagination: {\r\n                            el: `.${sectionName}__dots-pagination`,\r\n                            type: \"bullets\",\r\n                            clickable: true,\r\n                        },\r\n\r\n                        navigation: {\r\n                            nextEl: `.${sectionName}__switch-btn--next`,\r\n                            prevEl: `.${sectionName}__switch-btn--prev`,\r\n                        },\r\n\r\n                    },\r\n                    400: {\r\n                        slidesPerView: 1.5,\r\n                        centeredSlides: false,\r\n                        pagination: {\r\n                            el: `.${sectionName}__dots-pagination`,\r\n                            type: \"bullets\",\r\n                            clickable: true,\r\n                        },\r\n\r\n                        navigation: {\r\n                            nextEl: `.${sectionName}__switch-btn--next`,\r\n                            prevEl: `.${sectionName}__switch-btn--prev`,\r\n                        },\r\n\r\n                    },\r\n                    768: {\r\n                        slidesPerView: 2.2,\r\n                        spaceBetween: 10,\r\n                        centeredSlides: false,\r\n                        pagination: {\r\n                            el: `.${sectionName}__dots-pagination`,\r\n                            type: \"bullets\",\r\n                            clickable: true,\r\n                        },\r\n\r\n                        navigation: {\r\n                            nextEl: `.${sectionName}__switch-btn--next`,\r\n                            prevEl: `.${sectionName}__switch-btn--prev`,\r\n                        },\r\n                    },\r\n                    1000: {\r\n                        slidesPerView: 3.2,\r\n                        spaceBetween: 10,\r\n                        centeredSlides: false,\r\n                        // pagination: {\r\n                        //     el: `.${sectionName}__dots-pagination`,\r\n                        //     type: \"bullets\",\r\n                        //     clickable: true,\r\n                        // },\r\n\r\n                        navigation: {\r\n                            nextEl: `.${sectionName}__switch-btn--next`,\r\n                            prevEl: `.${sectionName}__switch-btn--prev`,\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                {sliderItems?.map((item: IItemData) => {\r\n                    return (\r\n                        <SwiperSlide key={item.id}>\r\n                            <ItemCard inSliderView=\"inSliderView\" item={item} isBtnLite={true} />\r\n                        </SwiperSlide>\r\n                    );\r\n                })}\r\n            </Swiper>\r\n            <DotsBtns sectionName={sectionName} />\r\n            <SwitchBtn btnType=\"prev\" sectionName={sectionName} />\r\n            <SwitchBtn btnType=\"next\" sectionName={sectionName} />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Slider;\r\n\r\n\r\n","import './CategoriesLoader.scss'\r\n\r\nconst CategoriesLoader = () => {\r\n    return (\r\n        <div className='loader-section'>\r\n            <div className='loader-title item'></div>\r\n            <ul className='categories-loader'>\r\n                <li className='categories-loader__item item'></li>\r\n                <li className='categories-loader__item item'></li>\r\n                <li className='categories-loader__item item'></li>\r\n                <li className='categories-loader__item item'></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesLoader","import './SliderLoader.scss'\r\n\r\nconst SliderLoader = () => {\r\n    return (\r\n        <div className='loader-section'>\r\n            <div className='slider-loader'>\r\n                <div className='slider-loader__title loader-title item'></div>\r\n                <div className='slider-loader__item item'></div>\r\n                <div className='slider-loader__dots item'></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SliderLoader","import { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport ApiService from \"../../API/ApiService\";\nimport Categories from \"../../components/categories/Categories\";\nimport Slider from \"./../../components/Slider/Slider\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport \"./HomePage.scss\"\nimport CategoriesLoader from \"../../components/Loaders/HomePageLoaders/CategoriesLoader/CategoriesLoader\";\nimport SliderLoader from \"../../components/Loaders/HomePageLoaders/SliderLoader/SliderLoader\";\nimport ItemDataState from \"../../store/ItemDataState\";\n\nconst HomePage = observer(() => {\n\n\n\tconst apiService = new ApiService();\n\tconst { responseData } = ResponseDataState\n\n\tuseEffect(() => {\n\n\t\tif (!responseData) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tapiService.getData()\n\t\t\t\t\t.then((data) => ResponseDataState.setResponseData(data))\n\t\t\t}, 500);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{!responseData\n\t\t\t\t?\n\t\t\t\t<>\n\t\t\t\t\t<CategoriesLoader />\n\t\t\t\t\t<SliderLoader />\n\t\t\t\t\t<SliderLoader />\n\t\t\t\t</>\n\t\t\t\t:\n\t\t\t\t<>\n\t\t\t\t\t<Categories sectionName=\"categories\" />\n\t\t\t\t\t<section className=\"popular section-wrapper\">\n\t\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t\t<h2 className=\"section-title\">Популярные товары</h2>\n\t\t\t\t\t\t\t<Slider sectionName=\"popular-items\" slideCount={4.5} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"new-items section-wrapper\">\n\t\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t\t<h2 className=\"section-title\">Новинки</h2>\n\t\t\t\t\t\t\t<Slider sectionName=\"new-items\" slideCount={4.5} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</>\n\t\t\t}\n\t\t</>\n\t);\n});\n\nexport default HomePage;\n","import { makeAutoObservable } from \"mobx\";\r\nimport { ICartItem } from \"../interfaces/ICartItem\";\r\nimport { IItemData } from \"../interfaces/IItemData\";\r\n\r\nclass OrdersPageState {\r\n\titemsFromCart: ICartItem[][] = [];\r\n\torderSum: number | undefined;\r\n\torderDate: string | undefined = \"\";\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tsetItemsFromCart(items: ICartItem[][]) {\r\n\t\tthis.itemsFromCart = items;\r\n\t}\r\n\r\n\tsetOrderSum(sum: number) {\r\n\t\tthis.orderSum = sum;\r\n\t}\r\n\r\n\tsetOrderDate(date: string) {\r\n\t\tthis.orderDate = date;\r\n\t}\r\n}\r\n\r\nexport default new OrdersPageState();\r\n","import React from 'react'\r\nimport { useNavigate } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport './BackBtn.scss'\r\n\r\nconst BackBtn = ({ btnName }: { btnName: string }) => {\r\n\r\n    const navigate = useNavigate();\r\n    const goBack = () => navigate(-1);\r\n\r\n    return (\r\n        <Link className=\"back-btn\" to=\"#\" onClick={goBack}>\r\n            <span>{btnName}</span>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default BackBtn","import React from 'react'\r\nimport CartState from '../../../store/CartState';\r\nimport './ClearCartBtn.scss'\r\n\r\nconst ClearCartBtn = () => {\r\n\r\n    const clearCart = () => {\r\n        CartState.setCartItems([]);\r\n        CartState.setPriceSum(0);\r\n    };\r\n\r\n    return (\r\n        <button className=\"clear-cart-btn\" onClick={clearCart}>\r\n            Очистить\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ClearCartBtn","import { observer } from 'mobx-react-lite'\r\nimport { useEffect } from 'react'\r\nimport CartState from '../../../store/CartState'\r\nimport './TotalPriceCounter.scss'\r\n\r\nconst TotalPriceCounter = observer(() => {\r\n\r\n    const { cartItems, priceSum } = CartState\r\n\r\n\r\n    useEffect(() => {\r\n        CartState.setPriceSum(cartItems.reduce((sum, item) => {\r\n            return sum + item.count * (item.itemData.priceInfo.fullPrice - item.itemData.priceInfo.discountAmount)\r\n        }, 0))\r\n    }, [cartItems])\r\n\r\n\r\n\r\n    return (\r\n        <div className='total-price-counter'>\r\n            <p className=\"total-price-counter__items-count\">Итого: </p>\r\n            <b className=\"total-price-counter__price\">{priceSum} руб.</b>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default TotalPriceCounter","import React from 'react'\r\nimport CatalogLink from '../buttons/CatalogLink/CatalogLink'\r\nimport EmptyCart from '../svg/EmptyCart'\r\nimport './StatusEmptyBlock.scss'\r\n\r\nconst StatusEmpty = ({ title, image }: { title: string, image: JSX.Element }) => {\r\n    return (\r\n        <div className=\"cart__empty-cart-block empty-cart-block\">\r\n            <p className=\"empty-cart-block__title\">{title}</p>\r\n            <div className=\"empty-cart-block__img-wrap\">\r\n                {image}\r\n            </div>\r\n            {/* <CatalogLink btnName=\"Перейти в каталог\" /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusEmpty","import React from 'react'\r\n\r\nconst EmptyCart = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"92\"\r\n            height=\"92\"\r\n            x=\"0\"\r\n            y=\"0\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 92 92\"\r\n            xmlSpace=\"preserve\"\r\n        >\r\n            <path d=\"M91.8 27.3L81.1 61c-.8 2.4-2.9 4-5.4 4H34.4c-2.4 0-4.7-1.5-5.5-3.7L13.1 19H4c-2.2 0-4-1.8-4-4s1.8-4 4-4h11.9c1.7 0 3.2 1.1 3.8 2.7L36 57h38l8.5-27H35.4c-2.2 0-4-1.8-4-4s1.8-4 4-4H88c1.3 0 2.5.7 3.2 1.7.8 1 1 2.4.6 3.6zm-55.4 43c-1.7 0-3.4.7-4.6 1.9-1.2 1.2-1.9 2.9-1.9 4.6 0 1.7.7 3.4 1.9 4.6 1.2 1.2 2.9 1.9 4.6 1.9s3.4-.7 4.6-1.9c1.2-1.2 1.9-2.9 1.9-4.6 0-1.7-.7-3.4-1.9-4.6-1.2-1.2-2.9-1.9-4.6-1.9zm35.9 0c-1.7 0-3.4.7-4.6 1.9s-1.9 2.9-1.9 4.6c0 1.7.7 3.4 1.9 4.6 1.2 1.2 2.9 1.9 4.6 1.9 1.7 0 3.4-.7 4.6-1.9 1.2-1.2 1.9-2.9 1.9-4.6 0-1.7-.7-3.4-1.9-4.6s-2.9-1.9-4.6-1.9z\"></path>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default EmptyCart","import { RecordWithTtl } from 'dns';\r\nimport { toJS } from 'mobx';\r\nimport React, { useState } from 'react';\r\nimport { ICartItem } from '../../../interfaces/ICartItem';\r\nimport { IItemData } from '../../../interfaces/IItemData';\r\nimport CartState from '../../../store/CartState'\r\nimport { RemoveFromCart } from '../../../Utils/RemoveFromCart';\r\nimport './Counter.scss'\r\n\r\ninterface ICounter {\r\n    itemPrice?: number;\r\n    cartItem?: ICartItem | undefined;\r\n}\r\n\r\nconst Counter: React.FC<ICounter> = ({ itemPrice, cartItem }) => {\r\n\r\n    const { cartItems, priceSum } = CartState;\r\n\r\n\r\n\r\n    const incItem = () => {\r\n\r\n\r\n        CartState.setCartItems([...cartItems.map((item) => {\r\n            if (item.itemData.id === cartItem?.itemData.id) {\r\n                ++item.count\r\n            }\r\n            return item\r\n        })])\r\n    }\r\n\r\n\r\n    const decItem = () => {\r\n\r\n        CartState.setCartItems([...cartItems.filter((item) => {\r\n\r\n            if (item.itemData.id === cartItem?.itemData.id) {\r\n                --item.count\r\n\r\n            }\r\n            return item.count !== 0\r\n        })])\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"counter\">\r\n            <button className=\"counter__btn counter__btn--dec\"\r\n                onClick={decItem}\r\n            >-</button>\r\n            <div className=\"counter__num\">{cartItem?.count}</div>\r\n            <button className=\"counter__btn counter__btn--inc\"\r\n                onClick={incItem}\r\n                disabled={cartItem?.count === cartItem?.itemData.amount ? true : false}\r\n            >+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter","import { toJS } from 'mobx';\r\nimport { useEffect, useState } from 'react';\r\nimport { ICartItem } from '../../../interfaces/ICartItem';\r\nimport CartState from '../../../store/CartState';\r\nimport CloseBtn from '../../svg/CloseBtn';\r\nimport Counter from '../Counter/Counter';\r\nimport './CartItem.scss'\r\n\r\n\r\nconst CartItem = ({ cartItem }: { cartItem: ICartItem }) => {\r\n\r\n    const { cartItems, priceSum } = CartState;\r\n    const { count, itemData: { categoryType, title, images: { sliderImages, snippetImage }, priceInfo: { fullPrice, discountAmount }, features: { memory } } } = cartItem;\r\n\r\n\r\n\r\n\r\n\r\n    const removeFromCart = () => {\r\n\r\n        let deleteCount: number | undefined;\r\n\r\n        CartState.setCartItems([\r\n            ...cartItems.filter((i) => {\r\n                if (i.itemData.id === cartItem.itemData.id) deleteCount = i.count\r\n                return i.itemData.id !== cartItem.itemData.id;\r\n            }),\r\n        ]);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-item\">\r\n\r\n            <img className=\"cart-item__img\" src={snippetImage} alt=\"img\" />\r\n\r\n            <div className=\"cart-item__text-wrap\">\r\n                <h3 className=\"cart-item__title\">\r\n                    {`${categoryType} ${title}, ${memory}`}\r\n                </h3>\r\n                {cartItem.count > 1 ? (\r\n                    <b className=\"cart-item__price\">\r\n                        <span className=\"cart-item__price-count\">{(fullPrice - discountAmount)} x {cartItem.count} </span>\r\n                        <span className=\"cart-item__total\">{(fullPrice - discountAmount) * cartItem.count} руб.</span>\r\n\r\n                    </b>\r\n                ) :\r\n                    <b className=\"cart-item__price\">\r\n                        {(fullPrice - discountAmount)} руб.\r\n                    </b>\r\n                }\r\n            </div>\r\n\r\n\r\n            <button className=\"cart-item__delete-btn\"\r\n                onClick={() => removeFromCart()}\r\n            >\r\n                <CloseBtn />\r\n            </button>\r\n            <div className=\"cart-item__counter\">\r\n                <Counter itemPrice={cartItem.count * (fullPrice - discountAmount)} cartItem={cartItem} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { ICartItem } from '../../../interfaces/ICartItem';\r\nimport CartState from '../../../store/CartState';\r\nimport StatusEmptyBlock from '../../StatusEmptyBlock/StatusEmptyBlock';\r\nimport EmptyCart from '../../svg/EmptyCart';\r\nimport CartItem from '../CartItem/CartItem';\r\n\r\nconst CartItems = observer(() => {\r\n\r\n    const { cartItems } = CartState;\r\n\r\n    return (\r\n        <ul className=\"cart__list\">\r\n            {cartItems.length === 0 ? (\r\n                <StatusEmptyBlock title={\"В корзину ничего не добавлено\"} image={<EmptyCart />} />\r\n            ) : (\r\n                cartItems.map((item: ICartItem) => {\r\n                    return (\r\n                        <li>\r\n                            <CartItem cartItem={item} />\r\n                        </li>\r\n                    );\r\n                })\r\n            )}\r\n        </ul>\r\n    )\r\n})\r\n\r\nexport default CartItems","import { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport CartState from \"../../store/CartState\";\r\nimport OrdersPageState from \"../../store/OrdersPageState\";\r\nimport EmptyCart from \"../../components/svg/EmptyCart\";\r\nimport CatalogLink from \"../../components/buttons/CatalogLink/CatalogLink\";\r\nimport CartItem from \"../../components/Cart/CartItem/CartItem\";\r\nimport StatusEmptyBlock from \"../StatusEmptyBlock/StatusEmptyBlock\";\r\nimport BackBtn from \"../buttons/BackBtn/BackBtn\";\r\nimport ClearCartBtn from \"../buttons/ClearCartBtn/ClearCartBtn\";\r\nimport \"./Cart.scss\";\r\nimport TotalPriceCounter from \"./TotalPriceCounter/TotalPriceCounter\";\r\nimport { ICartItem } from \"../../interfaces/ICartItem\";\r\nimport CartItems from \"./CartItems/CartItems\";\r\n\r\nconst Cart = observer(() => {\r\n    const { cartItems, priceSum } = CartState;\r\n    const { itemsFromCart } = OrdersPageState;\r\n    const navigate = useNavigate();\r\n    const goBack = () => navigate(-1);\r\n\r\n\r\n    const [isOrderSuccess, setIsOrderSuccess] = useState(false);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     cartItems.length === 0 && CartState.setPriceSum(0)\r\n    // }, [cartItems])\r\n\r\n\r\n    const makeOrder = () => {\r\n        OrdersPageState.setItemsFromCart([...itemsFromCart.concat([CartState.cartItems])]);\r\n        OrdersPageState.setOrderSum(priceSum);\r\n        setIsOrderSuccess(true);\r\n        CartState.setCartItems([]);\r\n        CartState.setPriceSum(0);\r\n        OrdersPageState.setOrderDate(new Date().toLocaleDateString());\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            {isOrderSuccess ? (\r\n                <div className=\"order-success\">\r\n                    <p className=\"order-success__title\">\r\n                        Заказ №{OrdersPageState.itemsFromCart.length} успешно оформлен\r\n                    </p>\r\n                    <p className=\"order-success__description\">\r\n                        Отследить статус можно в\r\n                        <Link to=\"/orders-page\">\r\n                            <span className=\"order-success__link\">Истории заказов</span>\r\n                        </Link>\r\n                    </p>\r\n                    <div className=\"order-success__btns-wrap\">\r\n                        <Link to=\"/orders-page\">\r\n                            <button className=\"order-success__to-order-btn stroked-btn\">К заказу</button>\r\n                        </Link>\r\n                        <CatalogLink btnName=\"Продолжить покупки\" />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"cart__inner\">\r\n                    <h2 className=\"cart__title section-title\">Корзина</h2>\r\n                    <div className=\"cart__btns-wrap\">\r\n                        <BackBtn btnName=\"Вернуться назад\" />\r\n                        {cartItems.length > 0 ? (\r\n                            <ClearCartBtn />\r\n                        ) : <CatalogLink btnName=\"Перейти в каталог\" />}\r\n                    </div>\r\n\r\n                    <CartItems />\r\n\r\n                    {cartItems.length > 0 ? (\r\n                        <>\r\n                            <TotalPriceCounter />\r\n                            <button onClick={makeOrder} className=\"cart__checkout-btn\">\r\n                                Оформить\r\n                            </button>\r\n                        </>\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Cart;\r\n","import Cart from \"../../components/Cart/Cart\";\nimport \"./CartPage.scss\";\n\n\nconst CartPage: React.FC = () => {\n\n\n\n\treturn (\n\t\t<Cart />\n\t);\n}\n\nexport default CartPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n    return (\n        <div>\n            <p>страница не найдена</p>\n            <Link to=\"/\">на главную</Link>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import React from 'react'\r\n\r\nconst MarkerIcon = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            x=\"0\"\r\n            y=\"0\"\r\n            enableBackground=\"new 0 0 80.588 61.158\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 80.588 61.158\"\r\n            xmlSpace=\"preserve\"\r\n            height={20}\r\n            width=\"auto\"\r\n        >\r\n            <path\r\n\r\n                fill=\"#231F20\"\r\n\r\n                d=\"M29.658 61.157a4.673 4.673 0 01-3.305-1.369L1.37 34.808a4.674 4.674 0 010-6.611 4.673 4.673 0 016.611 0l21.485 21.481 42.96-48.117a4.675 4.675 0 116.975 6.227L33.145 59.595a4.678 4.678 0 01-3.355 1.56l-.132.002z\"\r\n            ></path>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default MarkerIcon","import { toJS } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { ICategory } from \"../../../interfaces/ICategory\";\r\nimport FiltersSettingsState from \"../../../store/FiltersSettingsState\";\r\nimport \"./CheckboxCategory.scss\";\r\nimport \"../checbox.scss\";\r\nimport MarkerIcon from \"../../svg/MarkerIcon\";\r\nimport { SetFilterSettings } from \"../../../Utils/SetFilterSettings\";\r\n\r\ninterface IInputCategory {\r\n    category: ICategory\r\n}\r\n\r\n\r\nconst CheckboxCategory: React.FC<IInputCategory> = observer(({ category }) => {\r\n\r\n    const { selectedCategories } = FiltersSettingsState\r\n\r\n    const { categoryName } = category\r\n\r\n    const addCategory = () => {\r\n        if (!selectedCategories.includes(category.categoryName)) {\r\n            FiltersSettingsState.setSelectedCategories([...selectedCategories.concat(category.categoryName)])\r\n        }\r\n\r\n        if (selectedCategories.includes(category.categoryName)) {\r\n            FiltersSettingsState.setSelectedCategories(selectedCategories.filter((item) => {\r\n                return item != categoryName\r\n            }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"checkbox-wrapper\">\r\n            <input\r\n                className=\"visually-hidden\"\r\n                id={categoryName}\r\n                type=\"checkbox\"\r\n                name=\"category-item\"\r\n                checked={selectedCategories.includes(categoryName) ? true : false}\r\n                onChange={addCategory}\r\n            />\r\n            <div className=\"checkbox-border\">\r\n                <MarkerIcon />\r\n            </div>\r\n            <label className=\"filter-checkbox\" htmlFor={categoryName}>{categoryName}</label>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CheckboxCategory;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport FiltersSettingsState from \"../../../store/FiltersSettingsState\";\r\nimport { SetFilterSettings } from \"../../../Utils/SetFilterSettings\";\r\nimport MarkerIcon from \"../../svg/MarkerIcon\";\r\nimport \"./CheckboxBrand.scss\";\r\n\r\ninterface IInputBrand {\r\n    brand: string\r\n}\r\n\r\n\r\nconst CheckboxCategory: React.FC<IInputBrand> = observer(({ brand }) => {\r\n\r\n    const { selectedBrands } = FiltersSettingsState\r\n\r\n    const addBrand = () => {\r\n        if (!selectedBrands.includes(brand)) {\r\n            FiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)])\r\n            // FiltersSettingsState.setAllFilteredItems(SetFilterSettings());\r\n        }\r\n\r\n        if (selectedBrands.includes(brand)) {\r\n            // FiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)])\r\n            FiltersSettingsState.setSelectedBrands(selectedBrands.filter((item) => {\r\n                return item != brand\r\n            }))\r\n            // FiltersSettingsState.setAllFilteredItems(SetFilterSettings());\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkbox-wrapper\">\r\n            <input\r\n                className=\"visually-hidden\"\r\n                id={brand}\r\n                type=\"checkbox\"\r\n                name=\"brand-item\"\r\n                checked={selectedBrands.includes(brand) ? true : false}\r\n                onChange={addBrand}\r\n            />\r\n            <div className=\"checkbox-border\">\r\n                <MarkerIcon />\r\n            </div>\r\n            <label htmlFor={brand}>{brand}</label>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CheckboxCategory;\r\n","import { useEffect, useState } from 'react'\r\nimport { Range } from \"rc-slider\";\r\nimport FiltersSettingsState from '../../store/FiltersSettingsState';\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport './PriceRange.scss'\r\nimport { observer } from 'mobx-react-lite';\r\nimport { SetFilterSettings } from '../../Utils/SetFilterSettings';\r\n\r\nconst PriceRange = observer(() => {\r\n\r\n    const { priceRange, isPriceRangeReseted } = FiltersSettingsState\r\n\r\n    const [dynamicKey, setDynamicKey] = useState(Date.now());\r\n\r\n    useEffect(() => {\r\n        if (isPriceRangeReseted) {\r\n            setDynamicKey(Date.now())\r\n            FiltersSettingsState.setIsPriceRangeReseted(false)\r\n        }\r\n    }, [isPriceRangeReseted])\r\n\r\n\r\n    const handleChange = (e: { target: HTMLInputElement; }) => {\r\n        setDynamicKey(Date.now());\r\n        if (e.target.id === \"1\") FiltersSettingsState.setPriceRange([+e.target.value, priceRange[1]]);\r\n        if (e.target.id === \"2\") FiltersSettingsState.setPriceRange([priceRange[0], +e.target.value]);\r\n    };\r\n\r\n    const onSliderChange = (value: number[]) => {\r\n        FiltersSettingsState.setPriceRange(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"price-range\">\r\n            <h3 className=\"price-range__title\">Цена</h3>\r\n            <div className=\"price-range__inputs-wrap\">\r\n                <input type=\"tel\" onChange={(e: any) => handleChange(e)} value={priceRange[0]} id=\"1\" />\r\n                <input type=\"tel\" onChange={(e: any) => handleChange(e)} value={priceRange[1]} id=\"2\" />\r\n            </div>\r\n            <>\r\n                <Range\r\n                    className=\"sorting__range-slider\"\r\n                    key={dynamicKey}\r\n                    min={0}\r\n                    max={250000}\r\n                    step={1000}\r\n                    defaultValue={priceRange}\r\n                    onAfterChange={(value) => onSliderChange(value)}\r\n\r\n                />\r\n            </>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PriceRange","import { observer } from 'mobx-react-lite'\r\nimport FiltersSettingsState from '../../store/FiltersSettingsState'\r\nimport Switch from \"@mui/material/Switch\";\r\nimport './Switcher.scss'\r\nimport { SetFilterSettings } from '../../Utils/SetFilterSettings';\r\n\r\nconst Switcher = observer(({ name, state }: { name: string, state: boolean }) => {\r\n\r\n    const switchSlider = () => {\r\n        if (name === \"isDiscountSwitch\") FiltersSettingsState.setIsDiscount(!state)\r\n        if (name === \"isAvailableSwitch\") FiltersSettingsState.setIsAvailable(!state)\r\n    }\r\n\r\n\r\n    return (\r\n        <Switch\r\n            onChange={switchSlider}\r\n            checked={state}\r\n            name={`${name}`}\r\n        />\r\n    )\r\n})\r\n\r\nexport default Switcher","import { ResetFilters } from \"../../../Utils/ResetFilters\";\r\nimport \"./ResetFiltersBtn.scss\";\r\n\r\nconst ClearFiltersBtn = () => {\r\n    return (\r\n        <button className=\"reset-filters-btn\" onClick={ResetFilters}>\r\n            Очистить фильтры\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ClearFiltersBtn;\r\n","import React, { ReactFragment, useEffect, useRef, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { ICategory } from \"../../interfaces/ICategory\";\nimport CheckboxCategory from \"./CheckboxCategory/CheckboxCategory\";\nimport CheckboxBrand from \"./CheckboxBrand/CheckboxBrand\";\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport PriceRange from \"../PriceRange/PriceRange\";\nimport Switcher from \"../Switcher/Switcher\";\nimport ClearFiltersBtn from \"../buttons/ResetFiltersBtn/ResetFiltersBtn\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport { ScrollLockOnFixed } from \"../../Utils/ScrollLockOnFixed\";\nimport CloseBtn from \"../svg/CloseBtn\";\nimport { SetFilterSettings } from \"../../Utils/SetFilterSettings\";\nimport './FiltersPanel.scss'\n\n\ninterface IFiltersPanel {\n\titemsToShowCount?: number;\n}\n\n\nconst FiltersPanel: React.FC<IFiltersPanel> = observer(({ itemsToShowCount }) => {\n\n\n\tconst { isMobile } = PageWidthState;\n\tconst { isAvailable, isDiscount } = FiltersSettingsState\n\tconst { responseData } = ResponseDataState\n\n\tconst filtersRef = useRef(null)\n\tconst showBtnRef = useRef(null)\n\n\n\n\tuseEffect(() => {\n\t\tif (filtersRef.current && isMobile) {\n\t\t\tScrollLockOnFixed(\"disabled\", filtersRef)\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (filtersRef.current && isMobile) {\n\t\t\t\tScrollLockOnFixed(\"enabled\", filtersRef)\n\t\t\t}\n\t\t}\n\t}, [])\n\n\n\n\n\tconst showFilters = () => {\n\t\tFiltersSettingsState.setIsFiltersShown(false)\n\t};\n\n\n\n\n\treturn (\n\t\t<div className=\"filters-panel\" ref={filtersRef}>\n\n\t\t\t<div className=\"filters-panel__filter-wrap\" >\n\t\t\t\t{/* <h2 className=\"filters-panel__title\">Фильтры</h2> */}\n\t\t\t\t<div className=\"filters-panel__reset-wrap\">\n\n\t\t\t\t\t<ClearFiltersBtn />\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={showFilters}\n\t\t\t\t\t\tclassName=\"filters-panel__close-btn\">\n\t\t\t\t\t\t<CloseBtn />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"filters-panel__section-wrap\">\n\t\t\t\t\t<h3>Категория:</h3>\n\t\t\t\t\t<ul className=\"filters-panel__category-sorting-list\">\n\t\t\t\t\t\t{responseData?.categories.map((category: ICategory) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className=\"filters-panel__category-sorting-item\">\n\t\t\t\t\t\t\t\t\t<CheckboxCategory category={category} />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"filters-panel__section-wrap\">\n\t\t\t\t\t<h3>Бренд:</h3>\n\t\t\t\t\t<ul className=\"filters-panel__brand-sorting-list\">\n\t\t\t\t\t\t{responseData?.brands.map((brand: string) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className=\"filters-panel__brand-sorting-item\">\n\t\t\t\t\t\t\t\t\t<CheckboxBrand brand={brand} />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<PriceRange />\n\t\t\t\t<ul className=\"filters-panel__switch-list\">\n\t\t\t\t\t<li className=\"filters-panel__switch-item\">\n\t\t\t\t\t\t<p className=\"filters-panel__switch-text\">В наличии</p>\n\t\t\t\t\t\t<Switcher name=\"isAvailableSwitch\" state={isAvailable} />\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"filters-panel__switch-item\">\n\t\t\t\t\t\t<p className=\"filters-panel__switch-text\">Скидка</p>\n\t\t\t\t\t\t<Switcher name=\"isDiscountSwitch\" state={isDiscount} />\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t{isMobile &&\n\t\t\t\t\t<div className=\"filters-panel__results-btn-wrap\" ref={showBtnRef}>\n\t\t\t\t\t\t<button className=\"filters-panel__results-btn\"\n\t\t\t\t\t\t\tonClick={showFilters}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tПоказать ({itemsToShowCount}) товаров\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n\nexport default FiltersPanel;\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\r\nimport { SetFilterSettings } from \"../../Utils/SetFilterSettings\";\r\nimport \"./Pagination.scss\";\r\n\r\ninterface IPagination {\r\n    allFilteredItems?: IItemData[] | undefined;\r\n}\r\n\r\nconst Pagination: React.FC<IPagination> = observer(() => {\r\n\r\n\r\n\r\n    const { allFilteredItems, resultsByPagination } = FiltersSettingsState;\r\n\r\n    const [itemsPerPage, setItemsPerPage] = useState<number>(6);\r\n    const [startIndex, setStartIndex] = useState<number>(0);\r\n    const [buttonsList, setButtonsList] = useState<number[] | undefined>();\r\n    const [selectedBtn, setSelectedBtn] = useState<number>(1);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let arrOfNumbers: number[] = [];\r\n\r\n        if (allFilteredItems !== undefined) {\r\n            for (let i = 1; i <= Math.ceil(allFilteredItems.length / itemsPerPage); i++) {\r\n                arrOfNumbers.push(i);\r\n            }\r\n\r\n            setButtonsList(arrOfNumbers);\r\n            setStartIndex(0)\r\n            setSelectedBtn(1)\r\n        }\r\n    }, [allFilteredItems]);\r\n\r\n\r\n    useEffect(() => {\r\n        allFilteredItems && FiltersSettingsState.setResultsByPagination(allFilteredItems.slice(startIndex, startIndex + itemsPerPage))\r\n    }, [buttonsList, selectedBtn])\r\n\r\n\r\n    const buttonHandleClick = (number: number) => {\r\n        setStartIndex((number - 1) * itemsPerPage);\r\n        setSelectedBtn(number)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <ul className=\"pagination__list\">\r\n                {buttonsList?.map((number) => {\r\n                    return (\r\n                        <li className=\"pagination__item\">\r\n                            <button\r\n                                className={\r\n                                    selectedBtn === number\r\n                                        ? \"pagination__btn-number active\"\r\n                                        : \"pagination__btn-number\"\r\n                                }\r\n                                onClick={() => buttonHandleClick(number)}\r\n                            >\r\n                                {number}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Pagination;\r\n","import React from 'react'\r\n\r\nconst SortingArrows = () => {\r\n    return (\r\n        <svg\r\n            width=\"26\"\r\n            height=\"36\"\r\n            viewBox=\"0 0 26 36\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M1.6025 14.4212H24.0354C24.4694 14.4212 24.8451 14.2628 25.1621 13.9456C25.4789 13.6285 25.638 13.253 25.638 12.819C25.638 12.385 25.479 12.0097 25.1621 11.6921L13.9456 0.475645C13.6287 0.158899 13.2533 0 12.819 0C12.3847 0 12.0093 0.158899 11.6921 0.475645L0.475645 11.6921C0.158461 12.0093 0 12.385 0 12.819C0 13.2529 0.158461 13.6285 0.475645 13.9456C0.79318 14.2628 1.16859 14.4212 1.6025 14.4212Z\"\r\n                fill=\"white\"\r\n            />\r\n            <path\r\n                d=\"M24.0354 20.8313H1.6025C1.16824 20.8313 0.792829 20.9898 0.475645 21.3067C0.158461 21.6239 0 21.9993 0 22.4333C0 22.8673 0.158461 23.2429 0.475645 23.5599L11.6921 34.7763C12.0097 35.0935 12.3851 35.2523 12.819 35.2523C13.2529 35.2523 13.6287 35.0935 13.9456 34.7763L25.1621 23.5599C25.4789 23.2429 25.638 22.8673 25.638 22.4332C25.638 21.9993 25.479 21.6239 25.1621 21.3066C24.8452 20.9895 24.4694 20.8313 24.0354 20.8313Z\"\r\n                fill=\"white\"\r\n            />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default SortingArrows\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\r\nimport SortingByState from \"../../store/SortingByState\";\r\nimport SortingArrows from \"../svg/SortingArrows\";\r\nimport './SortingSelect.scss'\r\n\r\nconst SortingSelect = observer(\r\n    () => {\r\n\r\n        const { allFilteredItems } = FiltersSettingsState\r\n\r\n\r\n        const { sortingByType } = SortingByState\r\n\r\n        const sortBy = (e: any) => {\r\n            SortingByState.setSortingByType(e.currentTarget.value)\r\n\r\n\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <select className=\"sorting-select\" value={sortingByType} onChange={(e) => sortBy(e)}>\r\n                    <option selected value=\"popular\">\r\n                        Сначала популярные\r\n                    </option>\r\n                    <option value=\"newest\">Сначала новые</option>\r\n                    <option selected value=\"cheap\">\r\n                        Сначала дешевые\r\n                    </option>\r\n                    <option value=\"expensive\">Сначала дорогие</option>\r\n                </select>\r\n                <SortingArrows />\r\n            </>\r\n        );\r\n    }\r\n);\r\n\r\nexport default SortingSelect;\r\n","import { observer } from 'mobx-react-lite';\r\nimport { IItemData } from '../../../interfaces/IItemData';\r\nimport FiltersSettingsState from '../../../store/FiltersSettingsState';\r\nimport ItemCard from '../../ItemCard/ItemCard';\r\nimport './ResultsList.scss'\r\n\r\ninterface IResultsList {\r\n    responseItems?: IItemData[] | undefined;\r\n}\r\n\r\nconst ResultsList = observer(() => {\r\n\r\n    const { resultsByPagination } = FiltersSettingsState;\r\n\r\n\r\n    return (\r\n        <ul className=\"results-list\">\r\n            {resultsByPagination && resultsByPagination.map((item: IItemData) => {\r\n                return <ItemCard inPageView=\"inPage\" item={item} />;\r\n            })}\r\n        </ul>\r\n    )\r\n})\r\n\r\nexport default ResultsList","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { IItemData } from '../../interfaces/IItemData';\r\nimport FiltersSettingsState from '../../store/FiltersSettingsState';\r\nimport ResponseDataState from '../../store/ResponseDataState';\r\nimport SortingByState from '../../store/SortingByState';\r\nimport { SetFilterSettings } from '../../Utils/SetFilterSettings';\r\nimport ClearFiltersBtn from '../buttons/ResetFiltersBtn/ResetFiltersBtn';\r\nimport ItemCard from '../ItemCard/ItemCard';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport SortingSelect from '../SortingSelect/SortingSelect';\r\nimport CatalogIcon from '../svg/CatalogIcon';\r\nimport './ResultsBlock.scss'\r\nimport ResultsList from './ResultsList/ResultsList';\r\n\r\ninterface IResultsBlock {\r\n    responseItems?: IItemData[] | undefined;\r\n}\r\n\r\nconst ResultsBlock: React.FC<IResultsBlock> = observer(({ responseItems }) => {\r\n\r\n\r\n    const { allFilteredItems, isAvailable, isDiscount, priceRange, selectedBrands, selectedCategories, } = FiltersSettingsState;\r\n    const { sortingByType } = SortingByState;\r\n\r\n\r\n    useEffect(() => {\r\n        responseItems && FiltersSettingsState.setAllFilteredItems(responseItems)\r\n    }, [responseItems])\r\n\r\n    useEffect(() => {\r\n        FiltersSettingsState.setAllFilteredItems(SetFilterSettings());\r\n    }, [isAvailable, isDiscount, priceRange, selectedBrands, selectedCategories, sortingByType])\r\n\r\n    const showFilters = () => {\r\n        FiltersSettingsState.setIsFiltersShown(true)\r\n    };\r\n\r\n    return (\r\n        <div className='results-block'>\r\n\r\n\r\n            <div className=\"catalog-page__items-wrap\">\r\n                {allFilteredItems && (\r\n                    <>\r\n                        <Pagination />\r\n                        <div className=\"catalog-page__mobile-settings\">\r\n                            <button className=\"catalog-page__btn-show-filters\" onClick={showFilters}>\r\n                                <CatalogIcon />\r\n                                <span>Фильтры</span>\r\n                            </button>\r\n                            <div className=\"catalog-page__sorting-by-wrap\">\r\n                                <SortingSelect />\r\n                            </div>\r\n                        </div>\r\n                        <ResultsList />\r\n                    </>\r\n                )}\r\n                {allFilteredItems?.length === 0 && (\r\n                    <div className=\"catalog-page__results-not-found\">\r\n                        <p>По данным параметрам ничего не найдено</p>\r\n                        <ClearFiltersBtn />\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ResultsBlock","\r\n\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport FiltersSettingsState from '../../store/FiltersSettingsState'\r\nimport './ItemsFoundCounter.scss'\r\n\r\nconst ItemsFoundCounter = observer(() => {\r\n\r\n    const { allFilteredItems, itemsFound } = FiltersSettingsState\r\n\r\n    useEffect(() => {\r\n\r\n        allFilteredItems && FiltersSettingsState.setItemsFound(allFilteredItems?.length)\r\n    }, [allFilteredItems])\r\n\r\n    return (\r\n        <b className='items-found-counter'>\r\n            Товаров найдено ({itemsFound})\r\n        </b>\r\n    )\r\n})\r\n\r\nexport default ItemsFoundCounter","import { useEffect, useRef, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport ApiService from \"../../API/ApiService\";\nimport FiltersPanel from \"../../components/FiltersPanel/FiltersPanel\";\nimport PageWidthState from \"../../store/PageWidthState\";\nimport ResultsBlock from \"../../components/ResultsBlock/ResultsBlock\";\nimport ItemsFoundCounter from \"../../components/ItemsFoundCounter/ItemsFoundCounter\";\nimport FiltersSettingsState from \"../../store/FiltersSettingsState\";\nimport \"./CatalogPage.scss\";\n\nconst CatalogPage = observer(() => {\n    const apiService = new ApiService();\n\n    const { responseData } = ResponseDataState;\n    const { isMobile } = PageWidthState;\n    const { isFiltersShown } = FiltersSettingsState;\n\n\n    const filtersWrapRef = useRef(null);\n\n\n\n\n    useEffect(() => {\n        console.log('catalog-page')\n        if (!responseData?.items) {\n            apiService.getData().then((data) => {\n                ResponseDataState.setResponseData(data);\n            });\n        }\n\n\n    }, []);\n\n\n\n\n\n    return (\n        <>\n            {responseData && (\n                <div className=\"catalog-page\">\n                    <h1 className=\"catalog-page__title\">Каталог</h1>\n                    <div className=\"catalog-page__inner\">\n                        <div className=\"catalog-page__filters-wrap\" ref={filtersWrapRef}>\n                            <ItemsFoundCounter />\n                            {!isMobile || isFiltersShown ? <FiltersPanel /> : null}\n                        </div>\n\n                        <ResultsBlock responseItems={responseData.items} />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n});\n\nexport default CatalogPage;\n","import React from 'react'\r\nimport { Ireview } from '../../interfaces/IReview'\r\nimport './ReviewsList.scss'\r\n\r\nconst ReviewsList = ({ reviewData }: { reviewData: Ireview[] }) => {\r\n  return (\r\n    <ul className=\"reviews-list\">\r\n      {reviewData.map((item: Ireview) => {\r\n\r\n        const { userName, reviewDate, userRating, userMessage } = item\r\n\r\n        return (\r\n          <li key={item.userRating.toString()} className=\"reviews-list__item review\">\r\n            <div className=\"review__header\">\r\n              <h3 className=\"review__username\">{userName}</h3>\r\n              <span className=\"review__date\">{reviewDate}</span>\r\n            </div>\r\n            <p className=\"review__rating\"><b>Оценка:</b> {userRating}</p>\r\n            <div className=\"review__body\">\r\n              <h4 className=\"review__message-title\">Отзыв</h4>\r\n              <p className=\"review__user-message\">\r\n                {userMessage}\r\n              </p>\r\n            </div>\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ReviewsList","import React from \"react\";\r\nimport { IFeatures } from \"../../interfaces/IFeatures\";\r\nimport \"./Features.scss\";\r\n\r\nconst Features = ({ features }: { features: IFeatures }) => {\r\n    const { diagonal, platform, memory } = features;\r\n\r\n    return (\r\n        <div className=\"features\">\r\n            <div className=\"features__block\">\r\n                <h3 className=\"features__title\">Характеристики</h3>\r\n                <ul className=\"features__list\">\r\n                    <li className=\"features__feature\">\r\n                        <p className=\"features__feature-text\">\r\n                            <span>Платформа:</span> <span className=\"features__dots-line\"></span>\r\n                            <span>{platform}</span>\r\n                        </p>\r\n                    </li>\r\n                    <li className=\"features__feature\">\r\n                        <p className=\"features__feature-text\">\r\n                            <span>Диагональ:</span> <span className=\"features__dots-line\"></span>\r\n                            <span>{diagonal}</span>\r\n                        </p>\r\n                    </li>\r\n                    <li className=\"features__feature\">\r\n                        <p className=\"features__feature-text\">\r\n                            <span>Объем памяти:</span> <span className=\"features__dots-line\"></span>\r\n                            <span>{memory}</span>\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"features__block\">\r\n                <h3 className=\"features__title\">Описание</h3>\r\n                <p className=\"features__feature-text\">\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Inventore, doloremque voluptate perferendis\r\n                    dolore nesciunt quos atque quo quasi excepturi enim porro vitae libero at adipisci odit delectus!\r\n                    Quae, doloribus eveniet. Lorem ipsum dolor sit amet consectetur adipisicing elit. Inventore,\r\n                    doloremque voluptate perferendis dolore nesciunt quos atque quo quasi excepturi enim porro vitae\r\n                    libero at adipisci odit delectus! Quae, doloribus eveniet.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Features;\r\n","import React, { useState } from \"react\";\r\nimport \"./TabsList.scss\";\r\n\r\nconst TabsList = ({ tabName, setTabName }: { tabName: string; setTabName: any }) => {\r\n\r\n\r\n\r\n    return (\r\n        <ul className=\"tabs-list\">\r\n            <li className=\"tabs-list__item\">\r\n                <button\r\n                    className={\r\n                        tabName === \"features\" ? \"tabs-list__button tabs-list__button--active\" : \"tabs-list__button\"\r\n                    }\r\n                    onClick={() => setTabName(\"features\")}\r\n                >\r\n                    Описание\r\n                </button>\r\n            </li>\r\n            <li className=\"tabs-list__item\">\r\n                <button\r\n                    className={\r\n                        tabName === \"reviews\" ? \"tabs-list__button tabs-list__button--active\" : \"tabs-list__button\"\r\n                    }\r\n                    onClick={() => setTabName(\"reviews\")}\r\n                >\r\n                    Отзывы\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TabsList;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { setColorName } from \"../../../../Utils/setColorName\";\r\nimport ItemDataState from \"../../../../store/ItemDataState\";\r\nimport \"./ColorSelect.scss\";\r\n\r\nconst ColorSelect = observer(\r\n    ({ colorsList, onSelectHandleChange }: { colorsList: string[]; onSelectHandleChange: any }) => {\r\n        const { itemData } = ItemDataState;\r\n\r\n        return (\r\n            <div className=\"color-select\">\r\n                <h3 className=\"color-select__colors-title\">Цвет</h3>\r\n                <ul className=\"color-select__colors-list\">\r\n                    {itemData &&\r\n                        colorsList.map((colorItem: string) => {\r\n                            const colorName = setColorName(colorItem);\r\n\r\n                            const btnColor = {\r\n                                backgroundColor: `${colorName}`,\r\n                            };\r\n\r\n                            return (\r\n                                <li\r\n                                    className={\r\n                                        colorItem === itemData.color\r\n                                            ? \"color-select__color-wrap color-select__color-wrap--active\"\r\n                                            : \"color-select__color-wrap\"\r\n                                    }\r\n                                >\r\n                                    <button\r\n                                        className={\r\n                                            itemData.color === colorItem\r\n                                                ? \"color-select__color-btn color-select__color-btn--active\"\r\n                                                : \"color-select__color-btn\"\r\n                                        }\r\n                                        style={btnColor}\r\n                                        type=\"button\"\r\n                                        onClick={() => onSelectHandleChange(colorItem, \"color\")}\r\n                                        disabled={colorsList.length <= 1 ? true : false}\r\n                                    ></button>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n\r\nexport default ColorSelect;\r\n","export const setColorName = (expression: string) => {\r\n\tswitch (expression) {\r\n\t\tcase \"black\":\r\n\t\t\treturn \"#404040\";\r\n\r\n\t\tcase \"blue\":\r\n\t\t\treturn \"#8080ff\";\r\n\r\n\t\tcase \"red\":\r\n\t\t\treturn \"#ff4d94\";\r\n\r\n\t\tcase \"white\":\r\n\t\t\treturn \"#f0f0f5\";\r\n\r\n\t\tcase \"grey\":\r\n\t\t\treturn \"#999999\";\r\n\r\n\t\tcase \"rose\":\r\n\t\t\treturn \"#ffe6ff\";\r\n\t}\r\n};\r\n","import ResponseDataState from \"../../../../store/ResponseDataState\";\r\nimport ProductSelectsState from \"../../../../store/ProductSelectsState\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport \"./MemorySelect.scss\";\r\nimport ItemDataState from \"../../../../store/ItemDataState\";\r\n\r\nconst MemorySelect = observer(\r\n    ({ memoryList, onSelectHandleChange }: { memoryList: string[]; onSelectHandleChange: any }) => {\r\n        const { itemData } = ItemDataState;\r\n\r\n        return (\r\n            <div className=\"memory-select\">\r\n                <h3 className=\"memory-select__colors-title\">Объем памяти</h3>\r\n                <ul className=\"memory-select__memory-list\">\r\n                    {itemData &&\r\n                        memoryList.map((memory: string) => {\r\n                            return (\r\n                                <li\r\n                                    className={\r\n                                        itemData.features.memory === memory\r\n                                            ? \"memory-select__memory-wrap memory-select__memory-wrap--active\"\r\n                                            : \"memory-select__memory-wrap\"\r\n                                    }\r\n                                >\r\n                                    <button\r\n                                        className={\r\n                                            itemData.features.memory === memory\r\n                                                ? \"memory-select__memory-btn memory-select__memory-btn--active\"\r\n                                                : \"memory-select__memory-btn\"\r\n                                        }\r\n                                        type=\"button\"\r\n                                        onClick={() => onSelectHandleChange(memory, \"memory\")}\r\n                                        disabled={memoryList.length <= 1 ? true : false}\r\n                                    >\r\n                                        {memory}\r\n                                    </button>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n\r\nexport default MemorySelect;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { IItemData } from \"../../../interfaces/IItemData\";\r\nimport ProductSelectsState from \"../../../store/ProductSelectsState\";\r\nimport ResponseDataState from \"../../../store/ResponseDataState\";\r\nimport ColorSelect from \"./ColorSelect/ColorSelect\";\r\nimport MemorySelect from \"./MemorySelect/MemorySelect\";\r\nimport \"./ProductSelects.scss\";\r\n\r\nconst ProductSelects = observer(({ product }: { product: IItemData }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const { responseData } = ResponseDataState;\r\n    const { color, title } = product;\r\n\r\n    const [productsWithSameTitle, setProductsWithSameTitle] = useState<IItemData[] | undefined>();\r\n    const [colorsList, setColorsList] = useState<string[] | undefined>();\r\n    const [memoryList, setMemoryList] = useState<string[] | undefined>();\r\n\r\n    useEffect(() => {\r\n        responseData && setProductsWithSameTitle(responseData.items.filter((item) => item.title === product.title));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let colors: string[] = [];\r\n        productsWithSameTitle &&\r\n            productsWithSameTitle.forEach((item: IItemData) => {\r\n                if (title === item.title && !colors.includes(item.color)) {\r\n                    colors.push(item.color);\r\n                }\r\n            });\r\n\r\n        setColorsList(colors);\r\n\r\n        let memories: string[] = [];\r\n        productsWithSameTitle &&\r\n            productsWithSameTitle.forEach((item: IItemData) => {\r\n                if (title === item.title && color === item.color) {\r\n                    memories.push(item.features.memory);\r\n                }\r\n            });\r\n        setMemoryList(memories);\r\n    }, [productsWithSameTitle]);\r\n\r\n    const onSelectHandleChange = (selectValue: string, selectType: string) => {\r\n        if (selectType === \"color\") {\r\n            let foundedItem = productsWithSameTitle?.find(\r\n                (item) => item.color === selectValue && item.features.memory === product.features.memory\r\n            );\r\n            navigate(`/item/${foundedItem && foundedItem.id}`);\r\n        }\r\n\r\n        if (selectType === \"memory\") {\r\n            let foundedItem = productsWithSameTitle?.find(\r\n                (item) => item.color === product.color && item.features.memory === selectValue\r\n            );\r\n            navigate(`/item/${foundedItem && foundedItem.id}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"product-selects\">\r\n            <div className=\"product-selects__inner\">\r\n                {colorsList && (\r\n                    <>\r\n                        <ColorSelect colorsList={colorsList} onSelectHandleChange={onSelectHandleChange} />\r\n                        {product.features.memory && memoryList && (\r\n                            <MemorySelect memoryList={memoryList} onSelectHandleChange={onSelectHandleChange} />\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ProductSelects;\r\n","import ImageGallery from \"react-image-gallery\"\r\nimport { IItemData } from \"../../../interfaces/IItemData\";\r\n\r\nconst ProductGallery = ({ itemData }: { itemData: IItemData }) => {\r\n\r\n    const images = [\r\n        {\r\n            original: `${itemData && itemData.images.snippetImage}`,\r\n            thumbnail: `${itemData && itemData.images.snippetImage}`,\r\n        },\r\n        {\r\n            original: `${itemData && itemData.images.sliderImages[0]}`,\r\n            thumbnail: `${itemData && itemData.images.sliderImages[0]}`,\r\n        },\r\n        {\r\n            original: `${itemData && itemData.images.sliderImages[1]}`,\r\n            thumbnail: `${itemData && itemData.images.sliderImages[1]}`,\r\n        },\r\n\r\n        {\r\n            original: `${itemData && itemData.images.sliderImages[2]}`,\r\n            thumbnail: `${itemData && itemData.images.sliderImages[2]}`,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <ImageGallery\r\n            items={images}\r\n            useBrowserFullscreen={false}\r\n            showPlayButton={false}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProductGallery","import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport ToCartBtn from \"../../components/buttons/ToCartBtn/ToCartBtn\";\nimport ItemDataState from \"../../store/ItemDataState\";\nimport ReviewsList from \"../../components/ReviewsList/ReviewsList\";\nimport ProductPrice from \"../../components/ProductPrice/ProductPrice\";\nimport ProductRating from \"../../components/ProductRating/ProductRating\";\nimport Features from \"../../components/Features/Features\";\nimport TabsList from \"../../components/TabsList/TabsList\";\n\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport ProductSelectsState from \"../../store/ProductSelectsState\";\nimport \"./ProductPage.scss\";\nimport ProductSelects from \"../../components/Product/ProductSelects/ProductSelects\";\nimport ProductGallery from \"../../components/Product/ProductGallery/ProductGallery\";\nimport ApiService from \"../../API/ApiService\";\nimport ResponseDataState from \"../../store/ResponseDataState\";\nimport { IItemData } from \"../../interfaces/IItemData\";\nimport NotFound from \"../NotFound/NotFound\";\n\nconst ProductPage: React.FunctionComponent = observer(() => {\n\tconst apiService = new ApiService();\n\tconst { responseData } = ResponseDataState;\n\tconst { itemData, urlName } = ItemDataState;\n\n\tconst [tabName, setTabName] = useState(\"features\");\n\n\tconst navigate = useNavigate();\n\tconst params = useParams();\n\n\n\n\tuseEffect(() => {\n\n\t\tif (!responseData) {\n\t\t\tconst responseFn = async () => {\n\t\t\t\tconst data = await apiService.getData();\n\t\t\t\tResponseDataState.setResponseData(data);\n\t\t\t\tdata?.items.find((item) => {\n\t\t\t\t\tString(item.id) === params.id && ItemDataState.setItemData(item);\n\t\t\t\t});\n\t\t\t};\n\t\t\tresponseFn();\n\t\t} else {\n\t\t\tresponseData?.items.find((item) => {\n\t\t\t\tString(item.id) === params.id && ItemDataState.setItemData(item);\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tItemDataState.setItemData(undefined);\n\t\t};\n\t}, [params]);\n\n\treturn (\n\t\t<>\n\t\t\t{itemData && (\n\t\t\t\t<div className=\"product-page\">\n\t\t\t\t\t{itemData.title && (\n\t\t\t\t\t\t<div className=\"product-page__inner\">\n\t\t\t\t\t\t\t<div className=\"product-page__top-wrap\">\n\t\t\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t\t\t<div className=\"product-page__links\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"product-page__links-inner\">\n\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\tto=\"/category\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"product-page__category-link\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => navigate(\"/category\")}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tКаталог\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<span>/</span>\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"product-page__current-link\">{itemData.title}</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"product-page__container\">\n\t\t\t\t\t\t\t\t\t<div className=\"product-page__main-wrap\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"product-img-gallery\">\n\t\t\t\t\t\t\t\t\t\t\t<ProductGallery itemData={itemData} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"product-page__about-wrap\">\n\t\t\t\t\t\t\t\t\t\t\t<h1 className=\"product-page__title\">\n\t\t\t\t\t\t\t\t\t\t\t\t{`${itemData.categoryType} ${itemData.title}, ${itemData.features.memory}`}\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{itemData.color && `, ${itemData.color}`}</span>\n\t\t\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"product-page__price-wrap\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ProductRating rating={itemData.rating} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<ProductSelects product={itemData} />\n\t\t\t\t\t\t\t\t\t\t<div className=\"product-page__price-inner\">\n\t\t\t\t\t\t\t\t\t\t\t<b className=\"item-card__price-title\">Цена:</b>\n\t\t\t\t\t\t\t\t\t\t\t<ProductPrice\n\t\t\t\t\t\t\t\t\t\t\t\tpriceInfo={itemData.priceInfo}\n\t\t\t\t\t\t\t\t\t\t\t\tisAvailable={itemData.isAvailable}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<ToCartBtn toCartItem={itemData} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"product-page__bottom-wrap\">\n\t\t\t\t\t\t\t\t<div className=\"product-page__container\">\n\t\t\t\t\t\t\t\t\t<div className=\"product-page__data-tabs\">\n\t\t\t\t\t\t\t\t\t\t<TabsList tabName={tabName} setTabName={setTabName} />\n\t\t\t\t\t\t\t\t\t\t<div className=\"data-tabs__results\">\n\t\t\t\t\t\t\t\t\t\t\t{tabName === \"features\" && <Features features={itemData.features} />}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"data-tabs__results\">\n\t\t\t\t\t\t\t\t\t\t\t{tabName === \"reviews\" && (\n\t\t\t\t\t\t\t\t\t\t\t\t<ReviewsList reviewData={itemData.reviewsInfo.reviews} />\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n});\n\nexport default ProductPage;\n","import React from 'react'\r\n\r\nconst HistoryIcon = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"21\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 21 18\"\r\n        >\r\n            <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\r\n                <g transform=\"translate(-441 -289)\">\r\n                    <g transform=\"translate(100 100)\">\r\n                        <g transform=\"translate(340 186)\">\r\n                            <path d=\"M0 0L24 0 24 24 0 24z\"></path>\r\n                            <path\r\n                                fill=\"#1D1D1D\"\r\n                                d=\"M13.26 3C8.17 2.86 4 6.95 4 12H2.21c-.45 0-.67.54-.35.85l2.79 2.8c.2.2.51.2.71 0l2.79-2.8a.5.5 0 00-.36-.85H6c0-3.9 3.18-7.05 7.1-7 3.72.05 6.85 3.18 6.9 6.9.05 3.91-3.1 7.1-7 7.1-1.61 0-3.1-.55-4.28-1.48a.994.994 0 00-1.32.08c-.42.42-.39 1.13.08 1.49A8.858 8.858 0 0013 21c5.05 0 9.14-4.17 9-9.26-.13-4.69-4.05-8.61-8.74-8.74zm-.51 5c-.41 0-.75.34-.75.75v3.68c0 .35.19.68.49.86l3.12 1.85c.36.21.82.09 1.03-.26.21-.36.09-.82-.26-1.03l-2.88-1.71v-3.4c0-.4-.34-.74-.75-.74z\"\r\n                            ></path>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default HistoryIcon","import { observer } from \"mobx-react-lite\";\r\nimport BackBtn from \"../../components/buttons/BackBtn/BackBtn\";\r\nimport CatalogLink from \"../../components/buttons/CatalogLink/CatalogLink\";\r\nimport StatusEmptyBlock from \"../../components/StatusEmptyBlock/StatusEmptyBlock\";\r\nimport HistoryIcon from \"../../components/svg/HistoryIcon\";\r\nimport { ICartItem } from \"../../interfaces/ICartItem\";\r\nimport { IItemData } from \"../../interfaces/IItemData\";\r\nimport OrdersPageState from \"../../store/OrdersPageState\";\r\nimport \"./OrdersPage.scss\";\r\n\r\nconst OrdersPage = observer(() => {\r\n    const { itemsFromCart, orderSum, orderDate } = OrdersPageState;\r\n\r\n    return (\r\n        <div className=\"order-page\">\r\n            <div className=\"order-page__inner\">\r\n                <h1 className=\"order-page__title section-title\">История заказов</h1>\r\n                {!itemsFromCart.length && (\r\n                    <div className=\"order-page__status-wrap\">\r\n                        <div className=\"order-page__btns-wrap\">\r\n                            <CatalogLink btnName=\"Начать покупки\" />\r\n                            <BackBtn btnName=\"Вернуться назад\" />\r\n                        </div>\r\n                        <StatusEmptyBlock title={\"Вы пока не делали заказов\"} image={<HistoryIcon />} />\r\n                    </div>\r\n                )}\r\n\r\n                <ul className=\"order-page__orders-list orders-list\">\r\n                    {itemsFromCart\r\n                        .map((item: ICartItem[], index: number) => {\r\n                            return (\r\n                                <li className=\"orders-list__item\">\r\n                                    <h2 className=\"orders-list__title\">\r\n                                        Заказ №{index + 1}\r\n                                        <p className=\"orders-list__date\">От {orderDate}</p>\r\n                                    </h2>\r\n\r\n                                    <ul className=\"orders-list__order-items-list order-items-list\">\r\n                                        {item.map((i: ICartItem) => {\r\n                                            const {\r\n                                                count,\r\n                                                itemData: {\r\n                                                    title,\r\n                                                    brand,\r\n                                                    categoryType,\r\n                                                    color,\r\n                                                    features: { memory },\r\n                                                    images: { snippetImage },\r\n                                                    priceInfo: { fullPrice, discountAmount },\r\n                                                    amount,\r\n                                                },\r\n                                            } = i;\r\n\r\n                                            return (\r\n                                                <li className=\"order-items-list__item\">\r\n                                                    <div className=\"order-items-list__img-wrap\">\r\n                                                        <img\r\n                                                            className=\"order-items-list__img\"\r\n                                                            src={snippetImage}\r\n                                                            alt={title}\r\n                                                            width={50}\r\n                                                            height=\"auto\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"order-items-list__text-wrap\">\r\n                                                        <p className=\"order-items-list__title\">\r\n                                                            {`${categoryType} ${title}, ${memory}`}\r\n                                                            <span>{color && `, ${color}`}</span>\r\n                                                        </p>\r\n                                                        <p className=\"order-items-list__price\">\r\n                                                            <span>{count} X {fullPrice - discountAmount} руб.</span>\r\n                                                            <span className=\"order-items-list__item-total-price\">{count * (fullPrice - discountAmount)} руб.</span>\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                    <div className=\"orders-list__sum-wrapper\">\r\n                                        <p className=\"orders-list__sum\">\r\n                                            <span>Итого: </span> {orderSum} руб.\r\n                                        </p>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        })\r\n                        .reverse()}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default OrdersPage;\r\n","import { BrowserRouter, Route, Routes, useLocation } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport CartPage from \"./pages/CartPage/CartPage\";\nimport NotFound from \"./pages/NotFound/NotFound\";\nimport FiltersPage from \"./pages/CatalogPage/CatalogPage\";\nimport ProductPage from \"./pages/ProductPage/ProductPage\";\nimport OrdersPage from \"./pages/OrdersPage/OrdersPage\";\nimport { useEffect } from \"react\";\n\nconst AppRouter = () => {\n\n\n\n\treturn (\n\n\t\t<Routes>\n\t\t\t<Route path=\"/\" element={<HomePage />} />\n\t\t\t<Route path=\"/cart\" element={<CartPage />} />\n\t\t\t<Route path=\"/category\" element={<FiltersPage />} />\n\t\t\t<Route path=\"/item/:id\" element={<ProductPage />} />\n\t\t\t<Route path=\"/orders-page\" element={<OrdersPage />} />\n\t\t\t<Route path=\"/device-market-react-mobX\" element={<HomePage />} />\n\t\t\t<Route path=\"*\" element={<NotFound />} />\n\n\t\t</Routes>\n\t);\n};\n\nexport default AppRouter;\n","import FiltersSettingsState from \"../store/FiltersSettingsState\";\r\n\r\nexport const sortByBrand = (brand: string) => {\r\n\tconst { selectedBrands } = FiltersSettingsState;\r\n\r\n\tif (!selectedBrands.includes(brand)) {\r\n\t\tFiltersSettingsState.setSelectedBrands([...selectedBrands.concat(brand)]);\r\n\t}\r\n};\r\n","\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PageWidthState from '../../../store/PageWidthState';\r\nimport ArrowIcon from '../../svg/ArrowIcon';\r\nimport './FooterNavList.scss'\r\n\r\ninterface IFooterNavList {\r\n    title?: string | undefined;\r\n    items?: string[] | undefined;\r\n    linkFunction: any;\r\n}\r\n\r\nconst FooterNavList: React.FC<IFooterNavList> = ({ title, items, linkFunction }) => {\r\n\r\n    const { isMobile } = PageWidthState;\r\n\r\n    const [isListShown, setIsListShown] = useState(false)\r\n    const [arrow, setArrow] = useState(false)\r\n    const [listWrapHeight, setListWrapHeight] = useState(0)\r\n\r\n    const listWrapRef = useRef<HTMLUListElement>(null)\r\n\r\n\r\n\r\n    return (\r\n        <div className='footer-nav-list'>\r\n            <button className='footer-nav-list__title-button' onClick={() => isMobile && setIsListShown(!isListShown)}>\r\n                <h3 className='footer-nav-list__title'>{title}</h3>\r\n                {isMobile &&\r\n\r\n\r\n                    <span className={isListShown ? 'footer-nav-list__arrow opened' : 'footer-nav-list__arrow opened closed'}><ArrowIcon /></span>\r\n                }\r\n            </button>\r\n\r\n            <CSSTransition\r\n                in={isMobile ? isListShown : !isListShown}\r\n                timeout={300}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                onEntering={() => listWrapRef.current && setListWrapHeight(listWrapRef.current.clientHeight)}\r\n                onExiting={() => setListWrapHeight(0)}\r\n\r\n\r\n                classNames=\"footer-nav-list__links-list-wrap\"\r\n            >\r\n                <div className='footer-nav-list__links-list-wrap' style={{ height: `${isMobile && listWrapHeight}px` }}>\r\n                    <ul className='footer-nav-list__links-list' ref={listWrapRef}>\r\n                        {items && items.map((item) => {\r\n                            return (\r\n                                <li className='footer-nav-list__item'>\r\n                                    <Link to=\"/category\" className='footer-nav-list__item-link' onClick={() => linkFunction(item)}>\r\n                                        {item}\r\n                                    </Link>\r\n                                </li>\r\n\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterNavList","import { observer } from \"mobx-react-lite\";\r\nimport ResponseDataState from \"../../store/ResponseDataState\";\r\nimport { sortByCategory } from \"./../../Utils/sortByCategory\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport LinksList from \"./LinksList/LinksList\";\r\nimport { sortByBrand } from \"../../Utils/sortByBrand\";\r\nimport { useEffect, useState } from \"react\";\r\nimport PageWidthState from \"../../store/PageWidthState\";\r\nimport ArrowIcon from \"../svg/ArrowIcon\";\r\nimport FooterNavList from \"./FooterNavList/FooterNavList\";\r\nimport \"./Footer.scss\";\r\n\r\n\r\nconst Footer = observer(() => {\r\n    const { responseData } = ResponseDataState;\r\n    const { isMobile } = PageWidthState;\r\n\r\n    const [isCategoriesListShown, setIsCategoriesListShown] = useState(true);\r\n    const [isBrandsListShown, setIsBrandsListShown] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (isMobile) {\r\n            setIsCategoriesListShown(false);\r\n            setIsBrandsListShown(false);\r\n        }\r\n        if (!isMobile) {\r\n            setIsCategoriesListShown(true);\r\n            setIsBrandsListShown(true);\r\n        }\r\n    }, [isMobile]);\r\n\r\n\r\n\r\n    return (\r\n        <footer className=\"footer section-wrapper\">\r\n            <div className=\"footer__inner inner\">\r\n                <Logo logoType=\"footer\" />\r\n\r\n                <FooterNavList title='Категории' linkFunction={sortByCategory} items={responseData?.categories.map((category) => {\r\n                    return category.categoryName;\r\n                })} />\r\n\r\n                <FooterNavList title='Бренды' linkFunction={sortByBrand} items={responseData?.brands} />\r\n\r\n\r\n            </div>\r\n        </footer>\r\n    );\r\n});\r\n\r\nexport default Footer;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst ScrollToTop = (props: { children: any; }) => {\r\n\tconst location = useLocation();\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}, [location]);\r\n\r\n\treturn <>{props.children}</>\r\n};\r\n\r\nexport default ScrollToTop;","import Header from \"./components/Header/Header\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./AppRouter\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.scss\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { useEffect, useState } from \"react\";\nimport PageWidthState from \"./store/PageWidthState\";\nimport { observer } from \"mobx-react-lite\";\nimport SearchState from \"./store/SearchState\";\nimport ScrollToTop from \"./Utils/ScrollToTop\";\n\nconst App = observer(() => {\n\n    const { isMobile } = PageWidthState\n    const { isSearchShown } = SearchState;\n\n    useEffect(() => {\n        window.addEventListener('resize', onWindowResize)\n    }, [])\n\n    const onWindowResize = () => {\n        if (window.innerWidth >= 768) {\n            PageWidthState.setIsMobile(false)\n        } else {\n            PageWidthState.setIsMobile(true)\n\n        }\n    }\n\n    return (\n        <BrowserRouter>\n\n            <Header />\n            <ScrollToTop >\n                <AppRouter />\n            </ScrollToTop>\n            <Footer />\n\n\n        </BrowserRouter>\n    );\n})\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}