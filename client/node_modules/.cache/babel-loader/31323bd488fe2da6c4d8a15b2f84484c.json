{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nexport const useFetchData = callback => {\n  _s();\n\n  //     const [isLoading, setIsLoading] = useState(false);\n  //     const [error, setError] = useState('');\n  //\n  //     const fetching = async (...args: any) => {\n  //         try {\n  //             setIsLoading(true)\n  //             await callback(...args)\n  //         } catch (e: any) {\n  //             setError(e.message);\n  //         } finally {\n  //             setIsLoading(false)\n  //         }\n  //     }\n  // const [data, setData] = useState<IResponseData | undefined>()\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const url = \"https://mocki.io/v1/1e73398f-6067-486c-b37c-415136f22756\";\n\n  const fetching = async () => {\n    try {\n      setIsLoading(true);\n      const res = await axios.get(url);\n      const resData = res.data;\n      return resData;\n    } catch (e) {\n      setError(e);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return [fetching, isLoading, error];\n};\n\n_s(useFetchData, \"kqo/w5mlpzJwOJjHvl1o6r6CEAk=\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/hooks/useFetchData.ts"],"names":["axios","useState","useFetchData","callback","isLoading","setIsLoading","error","setError","url","fetching","res","get","resData","data","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAGA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAmB;AAAA;;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AAEA,QAAMO,GAAW,GAAG,0DAApB;;AAEA,QAAMC,QAAQ,GAAG,YAAY;AAC5B,QAAI;AACHJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMK,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUH,GAAV,CAAlB;AACA,YAAMI,OAAsB,GAAGF,GAAG,CAACG,IAAnC;AACA,aAAOD,OAAP;AACA,KALD,CAKE,OAAOE,CAAP,EAAe;AAChBP,MAAAA,QAAQ,CAACO,CAAD,CAAR;AACA,KAPD,SAOU;AACTT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD,GAXD;;AAaA,SAAO,CAACI,QAAD,EAAWL,SAAX,EAAsBE,KAAtB,CAAP;AACA,CAnCM;;GAAMJ,Y","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { IResponseData } from \"../interfaces/IResponseData\";\r\n\r\nexport const useFetchData = (callback: any) => {\r\n\t//     const [isLoading, setIsLoading] = useState(false);\r\n\t//     const [error, setError] = useState('');\r\n\t//\r\n\t//     const fetching = async (...args: any) => {\r\n\t//         try {\r\n\t//             setIsLoading(true)\r\n\t//             await callback(...args)\r\n\t//         } catch (e: any) {\r\n\t//             setError(e.message);\r\n\t//         } finally {\r\n\t//             setIsLoading(false)\r\n\t//         }\r\n\t//     }\r\n\r\n\t// const [data, setData] = useState<IResponseData | undefined>()\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState();\r\n\r\n\tconst url: string = \"https://mocki.io/v1/1e73398f-6067-486c-b37c-415136f22756\";\r\n\r\n\tconst fetching = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst res = await axios.get(url);\r\n\t\t\tconst resData: IResponseData = res.data;\r\n\t\t\treturn resData;\r\n\t\t} catch (e: any) {\r\n\t\t\tsetError(e);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [fetching, isLoading, error];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}