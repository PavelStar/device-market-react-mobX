{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\js\\\\device-market-master\\\\client\\\\src\\\\components\\\\Product\\\\ProductSelects\\\\ProductSelects.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport ResponseDataState from \"../../../store/ResponseDataState\";\nimport ColorSelect from \"./ColorSelect/ColorSelect\";\nimport MemorySelect from \"./MemorySelect/MemorySelect\";\nimport \"./ProductSelects.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductSelects = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    product\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    responseData\n  } = ResponseDataState;\n  const {\n    color,\n    title\n  } = product;\n  const [productsWithSameTitle, setProductsWithSameTitle] = useState();\n  const [colorsList, setColorsList] = useState();\n  const [memoryList, setMemoryList] = useState();\n  useEffect(() => {\n    responseData && setProductsWithSameTitle(responseData.items.filter(item => item.title === product.title));\n  }, []);\n  useEffect(() => {\n    let colors = [];\n    productsWithSameTitle && productsWithSameTitle.forEach(item => {\n      if (title === item.title && !colors.includes(item.color)) {\n        colors.push(item.color);\n      }\n    });\n    setColorsList(colors);\n    let memories = [];\n    productsWithSameTitle && productsWithSameTitle.forEach(item => {\n      if (title === item.title && color === item.color) {\n        memories.push(item.features.memory);\n      }\n    });\n    setMemoryList(memories);\n  }, [productsWithSameTitle]);\n\n  const onSelectHandleChange = (selectValue, selectType) => {\n    if (selectType === \"color\") {\n      let foundedItem = productsWithSameTitle === null || productsWithSameTitle === void 0 ? void 0 : productsWithSameTitle.find(item => item.color === selectValue && item.features.memory === product.features.memory);\n      navigate(`/item/${foundedItem && foundedItem.id}`);\n    }\n\n    if (selectType === \"memory\") {\n      let foundedItem = productsWithSameTitle === null || productsWithSameTitle === void 0 ? void 0 : productsWithSameTitle.find(item => item.color === product.color && item.features.memory === selectValue);\n      navigate(`/item/${foundedItem && foundedItem.id}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-selects\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-selects__inner\",\n      children: colorsList && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ColorSelect, {\n          colorsList: colorsList,\n          onSelectHandleChange: onSelectHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), product.features.memory && memoryList && /*#__PURE__*/_jsxDEV(MemorySelect, {\n          memoryList: memoryList,\n          onSelectHandleChange: onSelectHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}, \"RTGJ6WlrhJbBiLmhc5/EolXnsZc=\", false, function () {\n  return [useNavigate];\n}));\n_c2 = ProductSelects;\nexport default ProductSelects;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductSelects$observer\");\n$RefreshReg$(_c2, \"ProductSelects\");","map":{"version":3,"sources":["C:/Users/Pavel/Desktop/js/device-market-master/client/src/components/Product/ProductSelects/ProductSelects.tsx"],"names":["observer","useEffect","useState","useNavigate","ResponseDataState","ColorSelect","MemorySelect","ProductSelects","product","navigate","responseData","color","title","productsWithSameTitle","setProductsWithSameTitle","colorsList","setColorsList","memoryList","setMemoryList","items","filter","item","colors","forEach","includes","push","memories","features","memory","onSelectHandleChange","selectValue","selectType","foundedItem","find","id"],"mappings":"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","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { IItemData } from \"../../../interfaces/IItemData\";\r\nimport ProductSelectsState from \"../../../store/ProductSelectsState\";\r\nimport ResponseDataState from \"../../../store/ResponseDataState\";\r\nimport ColorSelect from \"./ColorSelect/ColorSelect\";\r\nimport MemorySelect from \"./MemorySelect/MemorySelect\";\r\nimport \"./ProductSelects.scss\";\r\n\r\nconst ProductSelects = observer(({ product }: { product: IItemData }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const { responseData } = ResponseDataState;\r\n    const { color, title } = product;\r\n\r\n    const [productsWithSameTitle, setProductsWithSameTitle] = useState<IItemData[] | undefined>();\r\n    const [colorsList, setColorsList] = useState<string[] | undefined>();\r\n    const [memoryList, setMemoryList] = useState<string[] | undefined>();\r\n\r\n    useEffect(() => {\r\n        responseData && setProductsWithSameTitle(responseData.items.filter((item) => item.title === product.title));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let colors: string[] = [];\r\n        productsWithSameTitle &&\r\n            productsWithSameTitle.forEach((item: IItemData) => {\r\n                if (title === item.title && !colors.includes(item.color)) {\r\n                    colors.push(item.color);\r\n                }\r\n            });\r\n\r\n        setColorsList(colors);\r\n\r\n        let memories: string[] = [];\r\n        productsWithSameTitle &&\r\n            productsWithSameTitle.forEach((item: IItemData) => {\r\n                if (title === item.title && color === item.color) {\r\n                    memories.push(item.features.memory);\r\n                }\r\n            });\r\n        setMemoryList(memories);\r\n    }, [productsWithSameTitle]);\r\n\r\n    const onSelectHandleChange = (selectValue: string, selectType: string) => {\r\n        if (selectType === \"color\") {\r\n            let foundedItem = productsWithSameTitle?.find(\r\n                (item) => item.color === selectValue && item.features.memory === product.features.memory\r\n            );\r\n            navigate(`/item/${foundedItem && foundedItem.id}`);\r\n        }\r\n\r\n        if (selectType === \"memory\") {\r\n            let foundedItem = productsWithSameTitle?.find(\r\n                (item) => item.color === product.color && item.features.memory === selectValue\r\n            );\r\n            navigate(`/item/${foundedItem && foundedItem.id}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"product-selects\">\r\n            <div className=\"product-selects__inner\">\r\n                {colorsList && (\r\n                    <>\r\n                        <ColorSelect colorsList={colorsList} onSelectHandleChange={onSelectHandleChange} />\r\n                        {product.features.memory && memoryList && (\r\n                            <MemorySelect memoryList={memoryList} onSelectHandleChange={onSelectHandleChange} />\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ProductSelects;\r\n"]},"metadata":{},"sourceType":"module"}